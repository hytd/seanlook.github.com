<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sean&#39;s Notes</title>
  <subtitle>Stay hungry, stay foolish.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://seanlook.com/"/>
  <updated>2016-05-18T08:32:49.000Z</updated>
  <id>http://seanlook.com/</id>
  
  <author>
    <name>seanlook</name>
    <email>seanlook7@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>InnoDB行格式对text/blob大变长字段的影响</title>
    <link href="http://seanlook.com/2016/05/18/mysql-blob-row_format/"/>
    <id>http://seanlook.com/2016/05/18/mysql-blob-row_format/</id>
    <published>2016-05-18T08:32:49.000Z</published>
    <updated>2016-05-18T08:32:49.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在排查现网Text与Blob类型，发现有不少，在《高性能MySQL(第3版)》看到对这两种变长数据类型的处理会涉及到在磁盘上创建临时表，性能开销比较大。于是把影响blob型数据存储方式了解了一下：row_format。&lt;!-- 关于临时表的内容，请参考 --&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-InnoDB的Antelop与Barracuda文件格式&quot;&gt;&lt;a href=&quot;#1-InnoDB的Antelop与Barracuda文件格式&quot; class=&quot;headerlink&quot; title=&quot;1. InnoDB的Antelop与Barracuda文件格式&quot;&gt;&lt;/a&gt;1. InnoDB的Antelop与Barracuda文件格式&lt;/h2&gt;&lt;p&gt;Innodb存储引擎保存记录，是以行的形式存放的（与之对应的是像Google BigTable这种列数据库）。在InnoDB 1.0.x版本之前，InnoDB 存储引擎提供了 &lt;code&gt;Compact&lt;/code&gt; 和 &lt;code&gt;Redundant&lt;/code&gt; 两种格式来存放行记录数据，这也是目前使用最多的一种格式。Redundant 格式是为兼容之前版本而保留的。&lt;/p&gt;
&lt;p&gt;MySQL 5.1 中的 innodb_plugin 引入了新的&lt;em&gt;文件格式&lt;/em&gt;：&lt;code&gt;Barracuda&lt;/code&gt;（将以前的&lt;em&gt;行格式&lt;/em&gt; compact 和 redundant 合称为&lt;code&gt;Antelope&lt;/code&gt;），该文件格式拥有新的两种行格式：&lt;code&gt;compressed&lt;/code&gt;和&lt;code&gt;dynamic&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在 MySQL 5.6 版本中，默认还是 Compact 行格式，也是目前使用最多的一种 ROW FORMAT。用户可以通过命令 &lt;code&gt;SHOW TABLE STATUS LIKE&amp;#39;table_name&amp;#39;&lt;/code&gt; 来查看当前表使用的行格式，其中 &lt;em&gt;row_format&lt;/em&gt; 列表示当前所使用的行记录结构类型。&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show variables like &lt;span class=&quot;string&quot;&gt;&quot;innodb_file_format&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Variable_name      &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Value     &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; innodb_file_format &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Barracuda &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show table status like &lt;span class=&quot;string&quot;&gt;&quot;tablename%&quot;&lt;/span&gt;\G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; 1. row &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Name: t_rf_compact&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Engine: InnoDB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Version: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Row_format: Compact&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Rows: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Avg_row_length: 36864&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Data_length: 147456&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Max_data_length: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Index_length: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Data_free: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Auto_increment: 7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Create_time: 2016-05-14 20:52:58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Update_time: NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Check_time: NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Collation: utf8_general_ci&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Checksum: NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Create_options: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Comment: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 msyql 5.7.9 及以后版本，默认行格式由&lt;code&gt;innodb_default_row_format&lt;/code&gt;变量决定，它的默认值是&lt;code&gt;DYNAMIC&lt;/code&gt;，也可以在 create table 的时候指定&lt;code&gt;ROW_FORMAT=DYNAMIC&lt;/code&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;注意，如果要修改现有表的行模式为&lt;code&gt;compressed&lt;/code&gt;或&lt;code&gt;dynamic&lt;/code&gt;，必须先将文件格式设置成Barracuda：&lt;code&gt;set global innodb_file_format=Barracuda;&lt;/code&gt;，再用&lt;code&gt;ALTER TABLE tablename ROW_FORMAT=COMPRESSED;&lt;/code&gt;去修改才能生效，否则修改无效却无提示：&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; ALTER TABLE tablename ROW&lt;span class=&quot;emphasis&quot;&gt;_FORMAT=COMPRESSED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Records: 0  Duplicates: 0  Warnings: 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;修改失败&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show warnings;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Level   | Code | Message                                                               |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Warning | 1478 | InnoDB: ROW&lt;span class=&quot;emphasis&quot;&gt;_FORMAT=COMPRESSED requires innodb_&lt;/span&gt;file&lt;span class=&quot;emphasis&quot;&gt;_format &amp;gt; Antelope. |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Warning | 1478 | InnoDB: assuming ROW_&lt;/span&gt;FORMAT=COMPACT.                                  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;+---------+&lt;/span&gt;------&lt;span class=&quot;code&quot;&gt;+-----------------------------------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-对TEXT-BLOB这类大字段类型的影响&quot;&gt;&lt;a href=&quot;#2-对TEXT-BLOB这类大字段类型的影响&quot; class=&quot;headerlink&quot; title=&quot;2. 对TEXT/BLOB这类大字段类型的影响&quot;&gt;&lt;/a&gt;2. 对TEXT/BLOB这类大字段类型的影响&lt;/h2&gt;&lt;h3 id=&quot;2-1-compact&quot;&gt;&lt;a href=&quot;#2-1-compact&quot; class=&quot;headerlink&quot; title=&quot;2.1 compact&quot;&gt;&lt;/a&gt;2.1 compact&lt;/h3&gt;&lt;p&gt;在 Antelope 两种行格式下，如果blob列值长度 &amp;lt;= 768 bytes，就不会发生行溢出(page overflow)，内容都在数据页(B-tree Node)；如果列值长度 &amp;gt; 768字节，那么前768字节依然在数据页，而剩余的则放在溢出页(off-page)，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/mysql-compact-768.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上面所讲的讲的blob或变长大字段类型包括blob,text,varchar，其中varchar列值长度大于某数N时也会存溢出页，在latin1字符集下N值可以这样计算：innodb的块大小默认为16kb，由于innodb存储引擎表为索引组织表，树底层的叶子节点为一双向链表，因此每个页中至少应该有两行记录，这就决定了innodb在存储一行数据的时候不能够超过8k，减去其它列值所占字节数，约等于N。&lt;/p&gt;
&lt;p&gt;我们知道对于InnoDB来说，内存是极为珍贵的，如果把768字节长度的blob都放在数据页，虽然可以节省部分IO，但相对来说能缓存行数就变少，也就是能缓存的索引值变少了，降低了索引效率。&lt;/p&gt;
&lt;h3 id=&quot;2-2-dynamic&quot;&gt;&lt;a href=&quot;#2-2-dynamic&quot; class=&quot;headerlink&quot; title=&quot;2.2 dynamic&quot;&gt;&lt;/a&gt;2.2 dynamic&lt;/h3&gt;&lt;p&gt;Barracuda 的两种行格式对blob采用完全行溢出，即聚集索引记录（数据页）只保留20字节的指针，指向真实存放它的溢出段地址：&lt;br&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/mysql-barracuda-20-off-page.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;dynamic行格式，列存储是否放到off-page页，主要取决于行大小，它会把行中最长的那一列放到off-page，直到数据页能存放下两行。TEXT/BLOB列 &amp;lt;=40 bytes 时总是存放于数据页。这种方式可以避免compact那样把太多的大列值放到 B-tree Node，因为dynamic格式认为，只要大列值有部分数据放在off-page，那把整个值放入都放入off-page更有效。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;compressed&lt;/strong&gt; 物理结构上与dynamic类似，但是对表的数据行使用zlib算法进行了压缩存储。在long blob列类型比较多的情况下用，可以降低off-page的使用，减少存储空间（一般40%左右），但要求更高的CPU，buffer pool里面可能会同时存储数据的压缩版和非压缩版，所以也多占用部分内存。这里 &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/innodb-compression-internals.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL 5.6 Manual innodb-compression-internals&lt;/a&gt; 讲的十分清楚。 &lt;/p&gt;
&lt;p&gt;另外，由于&lt;code&gt;ROW_FORMAT=DYNAMIC&lt;/code&gt; 和 &lt;code&gt;ROW_FORMAT=COMPRESSED&lt;/code&gt; 是从 &lt;code&gt;ROW_FORMAT=COMPACT&lt;/code&gt; 变化来的，所以他们处理 &lt;code&gt;CHAR&lt;/code&gt;类型存储的方式和 COMPACT 一样。&lt;/p&gt;
&lt;h2 id=&quot;3-对blob型字段存取优化&quot;&gt;&lt;a href=&quot;#3-对blob型字段存取优化&quot; class=&quot;headerlink&quot; title=&quot;3. 对blob型字段存取优化&quot;&gt;&lt;/a&gt;3. 对blob型字段存取优化&lt;/h2&gt;&lt;p&gt;如果一个查询涉及BLOB值，又需要使用临时表——不管它多小——它都会立即在磁盘上创建临时表。这样效率很低，尤其是对小而快的查询，临时表可能是查询中最大的开销。&lt;/p&gt;
&lt;p&gt;比如：创建一个带Text字段的compact表：&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; CREATE TABLE &lt;span class=&quot;code&quot;&gt;`t_rf_compact`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;  `f_id` int(11) NOT NULL AUTO_INCREMENT,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;  `f_char` char(30) DEFAULT NULL,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;  `f_varchar` varchar(30) NOT NULL DEFAULT &#39;&#39;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;  `f_text` text NOT NULL,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;  PRIMARY KEY (`f_id`)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW&lt;span class=&quot;emphasis&quot;&gt;_FORMAT=COMPACT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;mysql&amp;gt; insert into t&lt;span class=&quot;emphasis&quot;&gt;_rf_&lt;/span&gt;compact(f&lt;span class=&quot;emphasis&quot;&gt;_char,f_&lt;/span&gt;varchar,f&lt;span class=&quot;emphasis&quot;&gt;_text) values(&#39;aa&#39;,&#39;中中&#39;,repeat(&#39;b&#39;,700));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into t_&lt;/span&gt;rf&lt;span class=&quot;emphasis&quot;&gt;_compact(f_&lt;/span&gt;char,f&lt;span class=&quot;emphasis&quot;&gt;_varchar,f_&lt;/span&gt;text) values(&lt;span class=&quot;emphasis&quot;&gt;&#39;aa&#39;&lt;/span&gt;,&lt;span class=&quot;emphasis&quot;&gt;&#39;文&#39;&lt;/span&gt;,repeat(&lt;span class=&quot;emphasis&quot;&gt;&#39;c&#39;&lt;/span&gt;,60000));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;第二条数据会行溢出，前768字节放在Clustered Index数据页，剩余的放扩展存储空间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; explain select t1.f_id from t_rf_compact t1,t_rf_compact t2 where t1.f_id=t2.f_id order by t1.f_id limit 1; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+-------------+-------+--------+---------------+---------+---------+-------------------+------+-------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| id | select_type | table | type   | possible_keys | key     | key_len | ref               | rows | Extra       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+-------------+-------+--------+---------------+---------+---------+-------------------+------+-------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 | SIMPLE      | t1    | index  | PRIMARY       | PRIMARY | 4       | NULL              |    6 | Using index |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;|  1 | SIMPLE      | t2    | eq_ref | PRIMARY       | PRIMARY | 4       | d_ec_crm2.t1.f_id |    1 | Using index |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+-------------+-------+--------+---------------+---------+---------+-------------------+------+-------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show status like &quot;%tmp%tables&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Variable_name           | Value |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Created&lt;span class=&quot;emphasis&quot;&gt;_tmp_&lt;/span&gt;disk&lt;span class=&quot;emphasis&quot;&gt;_tables | 7     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Created_&lt;/span&gt;tmp&lt;span class=&quot;emphasis&quot;&gt;_tables      | 36    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select t1.f_id from t_rf_compact t1,t_rf_compact t2 where t1.f_id=t2.f_id order by t1.f_id limit 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| f_id |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;|    1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show status like &quot;%tmp%tables&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Variable_name           | Value |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Created&lt;span class=&quot;emphasis&quot;&gt;_tmp_&lt;/span&gt;disk&lt;span class=&quot;emphasis&quot;&gt;_tables | 7     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Created_&lt;/span&gt;tmp&lt;span class=&quot;emphasis&quot;&gt;_tables      | 36    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;没有临时表产生，所以磁盘临时表无变化。让它产生临时表：（但不涉及text列）&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; explain select t1.f_id from t_rf_compact t1,t_rf_compact t2 where t1.f_id=t2.f_id order by t2.f_id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+-------------+-------+--------+---------------+---------+---------+-------------------+------+----------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| id | select_type | table | type   | possible_keys | key     | key_len | ref               | rows | Extra                                        |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+-------------+-------+--------+---------------+---------+---------+-------------------+------+----------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|  1 | SIMPLE      | t1    | index  | PRIMARY       | PRIMARY | 4       | NULL              |    6 | Using index; Using temporary; Using filesort |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;|  1 | SIMPLE      | t2    | eq_ref | PRIMARY       | PRIMARY | 4       | d_ec_crm2.t1.f_id |    1 | Using index                                  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+-------------+-------+--------+---------------+---------+---------+-------------------+------+----------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select t1.f&lt;span class=&quot;emphasis&quot;&gt;_id from t_&lt;/span&gt;rf&lt;span class=&quot;emphasis&quot;&gt;_compact t1,t_&lt;/span&gt;rf&lt;span class=&quot;emphasis&quot;&gt;_compact t2 where t1.f_&lt;/span&gt;id=t2.f&lt;span class=&quot;emphasis&quot;&gt;_id order by t2.f_&lt;/span&gt;id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show status like &quot;%tmp%tables&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Variable_name           | Value |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Created&lt;span class=&quot;emphasis&quot;&gt;_tmp_&lt;/span&gt;disk&lt;span class=&quot;emphasis&quot;&gt;_tables | 7     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Created_&lt;/span&gt;tmp&lt;span class=&quot;emphasis&quot;&gt;_tables      | 37    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然有&lt;code&gt;Using temporary&lt;/code&gt;，但内存临时表还是够用，磁盘临时表还是无变化。返回TEXT列（也会使用临时表排序）：&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select t1.f&lt;span class=&quot;emphasis&quot;&gt;_text from t_&lt;/span&gt;rf&lt;span class=&quot;emphasis&quot;&gt;_compact t1,t_&lt;/span&gt;rf&lt;span class=&quot;emphasis&quot;&gt;_compact t2 where t1.f_&lt;/span&gt;id=t2.f&lt;span class=&quot;emphasis&quot;&gt;_id order by t2.f_&lt;/span&gt;id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show status like &quot;%tmp%tables&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Variable_name           | Value |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Created&lt;span class=&quot;emphasis&quot;&gt;_tmp_&lt;/span&gt;disk&lt;span class=&quot;emphasis&quot;&gt;_tables | 8     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Created_&lt;/span&gt;tmp&lt;span class=&quot;emphasis&quot;&gt;_tables      | 38    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------------------+-------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Created_tmp_disk_tables&lt;/code&gt;磁盘临时表有增加，与上面结论相符：只有有TEXT/BLOB列参与，如果用到临时表，不管它多小，都会创建在磁盘上，从而带来性能消耗。&lt;/p&gt;
&lt;p&gt;注：磁盘临时表存储引擎一定是 MyISAM，与&lt;code&gt;select @@default_tmp_storage_engine;&lt;/code&gt;（5.6.3开始）看到的&lt;em&gt;InnoDB&lt;/em&gt;无关，它是控制&lt;em&gt;CREATE TEMPORARY TABLE&lt;/em&gt;时的默认引擎。在 5.7.5 开始&lt;code&gt;internal_tmp_disk_storage_engine&lt;/code&gt;选项可以定义磁盘临时表的引擎类型。关于临时表与内存表可以参考 &lt;a href=&quot;http://imysql.com/2015/07/11/mysql-faq-how-using-temp-table.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[MySQL FAQ]系列 — 什么情况下会用到临时表 -老叶&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;有两种办法来减轻这种不利的情况：通过 &lt;code&gt;SUBSTRING()&lt;/code&gt; 函数把值转换为 VARCHAR，或者让磁盘临时表更快一些。&lt;/p&gt;
&lt;p&gt;让磁盘临时表运行更快的方式是，把它们放在基于内存的文件系统tmpfs，tmpfs文件系统为了降低开销不会刷新内存数据到磁盘，读写速度也很快，而临时表也不需要持久存放。mysql的 tmpdir 参数控制临时文件存放位置，建议如果使用的话要监控空间使用率。另外如果BLOB列非常大或多，可以考虑调大InnoDB日志缓存大小&lt;code&gt;innodb_log_buffer_size&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果使用BLOB这类变长大字段类型，需要以下后果考虑：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;大字段在InnoDB里可能浪费大量空间。例如，若存储字段值只是比行的要求多了一个字节，也会使用整个页面来存储剩下的字节，浪费了页面的大部分空间。同样的，如果有一个值只是稍微超过了32个页的大小，实际上就需要使用96个页面。&lt;/li&gt;
&lt;li&gt;扩展存储禁用了自适应哈希，因为需要完整的比较列的整个长度，才能发现是不是正确的数据（哈希帮助InnoDB非常快速的找到“猜测的位置”，但是必须检查“猜测的位置”是不是正确）。因为自适应哈希是完全的内存结构，并且直接指向Buffer Pool中访问“最”频繁的页面，但对于扩展存储空间却无法使用Adaptive Hash。&lt;/li&gt;
&lt;li&gt;太长的值可能使得在查询中作为WHERE条件不能使用索引，因而执行很慢。在应用WHERE条件之前，MySQL需要把所有的列读出来，所以可能导致MySQL要求InnoDB读取很多扩展存储，然后检查WHERE条件，丢弃所有不需要的数据。查询不需要的列绝对不是好主意，在这种特殊的场景下尤其需要避免这样做。如果发现查询正遇到这个限制带来的问题，可以尝试通过覆盖索引来解决部分问题。&lt;/li&gt;
&lt;li&gt;如果一张表里有很多大字段，最好是把它们组合起来单独存到一个列里面，比如说用XML文档格式存储。这让所有的大字段共享一个扩展存储空间，这比每个字段用自己的页要好。&lt;/li&gt;
&lt;li&gt;有时候可以把大字段用COMPRESS()压缩后再存为BLOB，或者在发送到MySQL前在应用程序中进行压缩，这可以获得显著的空间优势和性能收益。&lt;br&gt;—— 《高性能MySQL(第3版)》 P368&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;对上面的解读就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果预期长度范围varchar就满足，就避免使用TEXT&lt;/li&gt;
&lt;li&gt;对于字段非常大的列可以在应用程序里压缩后再存到mysql，如果列值很长请考虑用单独的表存放&lt;/li&gt;
&lt;li&gt;一张表有多个类blob字段，把它们组合起来如&lt;code&gt;&amp;lt;TEXT&amp;gt;&amp;lt;f_big_col1&amp;gt;long..&amp;lt;/f_big_col1&amp;gt; &amp;lt;f_content&amp;gt;long..&amp;lt;/f_content&amp;gt;&amp;lt;/TEXT&amp;gt;&lt;/code&gt;，再压缩存储。但要考虑是否使用全文索引，是否需要前缀索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.opskumu.com/mysql-blob.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL 大字段溢出导致数据回写失败&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hidba.org/?p=551&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;innodb使用大字段text，blob的一些优化建议 -玄惭&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://imysql.com/2014/09/28/mysql-optimization-case-blob-stored-in-innodb-optimization.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;[MySQL优化案例]系列 — 优化InnoDB表BLOB列的存储效率&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-24485075-id-3523032.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;InnoDB 数据表压缩原理与限制 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/innodb-row-format-dynamic.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL Manual DYNAMIC and COMPRESSED Row Formats &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《MySQL技术内幕·InnoDB存储引擎》 P&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;原文链接地址：&lt;a href=&quot;http://seanlook.com/2016/05/18/mysql-blob-row_format/&quot;&gt;http://seanlook.com/2016/05/18/mysql-blob-row_format/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在排查现网Text与Blob类型，发现有不少，在《高性能MySQL(第3版)》看到对这两种变长数据类型的处理会涉及到在磁盘上创建临时表，性能开销比较大。于是把影响blob型数据存储方式了解了一下：row_format。&lt;!-- 关于临时表的内容，请参考 --&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-InnoDB的Antelop与Barracuda文件格式&quot;&gt;&lt;a href=&quot;#1-InnoDB的Antelop与Barracuda文件格式&quot; class=&quot;headerlink&quot; title=&quot;1. InnoDB的Antelop与Barracuda文件格式&quot;&gt;&lt;/a&gt;1. InnoDB的Antelop与Barracuda文件格式&lt;/h2&gt;&lt;p&gt;Innodb存储引擎保存记录，是以行的形式存放的（与之对应的是像Google BigTable这种列数据库）。在InnoDB 1.0.x版本之前，InnoDB 存储引擎提供了 &lt;code&gt;Compact&lt;/code&gt; 和 &lt;code&gt;Redundant&lt;/code&gt; 两种格式来存放行记录数据，这也是目前使用最多的一种格式。Redundant 格式是为兼容之前版本而保留的。&lt;/p&gt;
&lt;p&gt;MySQL 5.1 中的 innodb_plugin 引入了新的&lt;em&gt;文件格式&lt;/em&gt;：&lt;code&gt;Barracuda&lt;/code&gt;（将以前的&lt;em&gt;行格式&lt;/em&gt; compact 和 redundant 合称为&lt;code&gt;Antelope&lt;/code&gt;），该文件格式拥有新的两种行格式：&lt;code&gt;compressed&lt;/code&gt;和&lt;code&gt;dynamic&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在 MySQL 5.6 版本中，默认还是 Compact 行格式，也是目前使用最多的一种 ROW FORMAT。用户可以通过命令 &lt;code&gt;SHOW TABLE STATUS LIKE&amp;#39;table_name&amp;#39;&lt;/code&gt; 来查看当前表使用的行格式，其中 &lt;em&gt;row_format&lt;/em&gt; 列表示当前所使用的行记录结构类型。&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show variables like &lt;span class=&quot;string&quot;&gt;&quot;innodb_file_format&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Variable_name      &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Value     &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; innodb_file_format &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Barracuda &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; show table status like &lt;span class=&quot;string&quot;&gt;&quot;tablename%&quot;&lt;/span&gt;\G&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; 1. row &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Name: t_rf_compact&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Engine: InnoDB&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Version: 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Row_format: Compact&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Rows: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Avg_row_length: 36864&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Data_length: 147456&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Max_data_length: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Index_length: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Data_free: 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Auto_increment: 7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Create_time: 2016-05-14 20:52:58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Update_time: NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Check_time: NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Collation: utf8_general_ci&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Checksum: NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Create_options: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Comment: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 msyql 5.7.9 及以后版本，默认行格式由&lt;code&gt;innodb_default_row_format&lt;/code&gt;变量决定，它的默认值是&lt;code&gt;DYNAMIC&lt;/code&gt;，也可以在 create table 的时候指定&lt;code&gt;ROW_FORMAT=DYNAMIC&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://seanlook.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://seanlook.com/tags/mysql/"/>
    
      <category term="schema设计" scheme="http://seanlook.com/tags/schema%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库开发规范-EC</title>
    <link href="http://seanlook.com/2016/05/11/mysql-dev-principle-ec/"/>
    <id>http://seanlook.com/2016/05/11/mysql-dev-principle-ec/</id>
    <published>2016-05-11T08:32:49.000Z</published>
    <updated>2016-05-11T08:32:49.000Z</updated>
    
    <content type="html">&lt;!-- 

http://highdb.com/mysql%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/
http://blog.csdn.net/xlgen157387/article/details/48086607
http://www.iteye.com/topic/1141229
--&gt;
&lt;p&gt;最近一段时间一边在线上抓取SQL来优化，一边在整理这个开发规范，尽量减少新的问题SQL进入生产库。今天也是对公司的开发做了一次培训，PPT就不放上来了，里面有十来个生产SQL的案例。因为规范大部分还是具有通用性，所以也借鉴了像去哪儿和赶集的规范，但实际在撰写本文的过程中，每一条规范的背后无不是在工作中有参照的反面例子的。如果时间可以的话，会抽出一部分或分析其原理，或用案例证明。&lt;/p&gt;
&lt;h2 id=&quot;1-命名规范&quot;&gt;&lt;a href=&quot;#1-命名规范&quot; class=&quot;headerlink&quot; title=&quot;1. 命名规范&quot;&gt;&lt;/a&gt;1. 命名规范&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;库名、表名、字段名必须使用小写字母，并采用下划线分割&quot;&gt;&lt;a href=&quot;#库名、表名、字段名必须使用小写字母，并采用下划线分割&quot; class=&quot;headerlink&quot; title=&quot;库名、表名、字段名必须使用小写字母，并采用下划线分割&quot;&gt;&lt;/a&gt;库名、表名、字段名必须使用小写字母，并采用下划线分割&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MySQL有配置参数lower_case_table_names=1，即库表名以小写存储，大小写不敏感。如果是0，则库表名以实际情况存储，大小写敏感；如果是2，以实际情况存储，但以小写比较。&lt;/li&gt;
&lt;li&gt;如果大小写混合使用，可能存在abc，Abc，ABC等多个表共存，容易导致混乱。&lt;/li&gt;
&lt;li&gt;字段名显示区分大小写，但实际使⽤时不区分，即不可以建立两个名字一样但大小写不一样的字段。&lt;/li&gt;
&lt;li&gt;为了统一规范， 库名、表名、字段名使用小写字母。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;库名以-d-开头，表名以-t-开头，字段名以-f-开头&quot;&gt;&lt;a href=&quot;#库名以-d-开头，表名以-t-开头，字段名以-f-开头&quot; class=&quot;headerlink&quot; title=&quot;库名以 d 开头，表名以 t 开头，字段名以 f_ 开头&quot;&gt;&lt;/a&gt;库名以 d&lt;em&gt; 开头，表名以 t&lt;/em&gt; 开头，字段名以 f_ 开头&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;比如表 &lt;code&gt;t_crm_relation&lt;/code&gt;，中间的 crm 代表业务模块名&lt;/li&gt;
&lt;li&gt;视图以&lt;code&gt;view_&lt;/code&gt;开头，事件以&lt;code&gt;event_&lt;/code&gt;开头，触发器以&lt;code&gt;trig_&lt;/code&gt;开头，存储过程以&lt;code&gt;proc_&lt;/code&gt;开头，函数以&lt;code&gt;func_&lt;/code&gt;开头&lt;/li&gt;
&lt;li&gt;普通索引以&lt;code&gt;idx_col1_col2&lt;/code&gt;命名，唯一索引以&lt;code&gt;uk_col1_col2&lt;/code&gt;命名（可去掉f_公共部分）。如 idx_companyid_corpid_contacttime(f_company_id,f_corp_id,f_contact_time)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;库名、表名、字段名禁止超过32个字符，需见名知意&quot;&gt;&lt;a href=&quot;#库名、表名、字段名禁止超过32个字符，需见名知意&quot; class=&quot;headerlink&quot; title=&quot;库名、表名、字段名禁止超过32个字符，需见名知意&quot;&gt;&lt;/a&gt;库名、表名、字段名禁止超过32个字符，需见名知意&lt;/h3&gt;&lt;p&gt;库名、表名、字段名支持最多64个字符，但为了统一规范、易于辨识以及减少传输量，禁止超过32个字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;临时库、表名须以tmp加日期为后缀&quot;&gt;&lt;a href=&quot;#临时库、表名须以tmp加日期为后缀&quot; class=&quot;headerlink&quot; title=&quot;临时库、表名须以tmp加日期为后缀&quot;&gt;&lt;/a&gt;临时库、表名须以tmp加日期为后缀&lt;/h3&gt;&lt;p&gt;如 t_crm_relation_tmp0425。备份表也类似，形如 &lt;code&gt;_bak20160425&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;按日期时间分表须符合-YYYY-MM-DD-格式&quot;&gt;&lt;a href=&quot;#按日期时间分表须符合-YYYY-MM-DD-格式&quot; class=&quot;headerlink&quot; title=&quot;按日期时间分表须符合_YYYY[MM][DD]格式&quot;&gt;&lt;/a&gt;按日期时间分表须符合_YYYY[MM][DD]格式&lt;/h3&gt;&lt;p&gt;这也是为将来有可能分表做准备的，比如&lt;code&gt;t_crm_ec_record_201403&lt;/code&gt;，但像 t_crm_contact_at201506就打破了这种规范。&lt;br&gt;不具有时间特性的，直接以 &lt;code&gt;t_tbname_001&lt;/code&gt; 这样的方式命名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;2-库表基础规范&quot;&gt;&lt;a href=&quot;#2-库表基础规范&quot; class=&quot;headerlink&quot; title=&quot;2. 库表基础规范&quot;&gt;&lt;/a&gt;2. 库表基础规范&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;使用Innodb存储引擎&quot;&gt;&lt;a href=&quot;#使用Innodb存储引擎&quot; class=&quot;headerlink&quot; title=&quot;使用Innodb存储引擎&quot;&gt;&lt;/a&gt;使用Innodb存储引擎&lt;/h3&gt;&lt;p&gt;5.5版本开始mysql默认存储引擎就是InnoDB，5.7版本开始，系统表都放弃MyISAM了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;表字符集统一使用UTF8&quot;&gt;&lt;a href=&quot;#表字符集统一使用UTF8&quot; class=&quot;headerlink&quot; title=&quot;表字符集统一使用UTF8&quot;&gt;&lt;/a&gt;表字符集统一使用UTF8&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;UTF8字符集存储汉字占用3个字节，存储英文字符占用一个字节&lt;/li&gt;
&lt;li&gt;校对字符集使用默认的 utf8_general_ci&lt;/li&gt;
&lt;li&gt;连接的客户端也使用utf8，建立连接时指定charset或&lt;code&gt;SET NAMES UTF8;&lt;/code&gt;。（对于已经在项目中长期使用latin1的，救不了了）&lt;/li&gt;
&lt;li&gt;如果遇到EMOJ等表情符号的存储需求，可申请使用UTF8MB4字符集&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;所有表都要添加注释&quot;&gt;&lt;a href=&quot;#所有表都要添加注释&quot; class=&quot;headerlink&quot; title=&quot;所有表都要添加注释&quot;&gt;&lt;/a&gt;所有表都要添加注释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;尽量给字段也添加注释&lt;/li&gt;
&lt;li&gt;类status型需指明主要值的含义，如”0-离线，1-在线”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;控制单表字段数量&quot;&gt;&lt;a href=&quot;#控制单表字段数量&quot; class=&quot;headerlink&quot; title=&quot;控制单表字段数量&quot;&gt;&lt;/a&gt;控制单表字段数量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单表字段数上限30左右，再多的话考虑垂直分表，一是冷热数据分离，二是大字段分离，三是常在一起做条件和返回列的不分离。&lt;/li&gt;
&lt;li&gt;表字段控制少而精，可以提高IO效率，内存缓存更多有效数据，从而提高响应速度和并发能力，后续 alter table 也更快。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;所有表都必须要显式指定主键&quot;&gt;&lt;a href=&quot;#所有表都必须要显式指定主键&quot; class=&quot;headerlink&quot; title=&quot;所有表都必须要显式指定主键&quot;&gt;&lt;/a&gt;所有表都必须要显式指定主键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主键尽量采用自增方式，InnoDB表实际是一棵索引组织表，顺序存储可以提高存取效率，充分利用磁盘空间。还有对一些复杂查询可能需要自连接来优化时需要用到。&lt;/li&gt;
&lt;li&gt;需要全局唯一主键时，使用外部发号器ticket server（建设中）&lt;/li&gt;
&lt;li&gt;如果没有主键或唯一索引，update/delete是通过所有字段来定位操作的行，相当于每行就是一次全表扫描&lt;/li&gt;
&lt;li&gt;少数情况可以使用联合唯一主键，需与DBA协商&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;不强制使用外键参考&quot;&gt;&lt;a href=&quot;#不强制使用外键参考&quot; class=&quot;headerlink&quot; title=&quot;不强制使用外键参考&quot;&gt;&lt;/a&gt;不强制使用外键参考&lt;/h3&gt;&lt;p&gt;即使2个表的字段有明确的外键参考关系，也不使用 FOREIGN KEY ，因为新纪录会去主键表做校验，影响性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;适度使用存储过程、视图，禁止使用触发器、事件&quot;&gt;&lt;a href=&quot;#适度使用存储过程、视图，禁止使用触发器、事件&quot; class=&quot;headerlink&quot; title=&quot;适度使用存储过程、视图，禁止使用触发器、事件&quot;&gt;&lt;/a&gt;适度使用存储过程、视图，禁止使用触发器、事件&lt;/h3&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;存储过程（procedure）虽然可以简化业务端代码，在传统企业写复杂逻辑时可能会用到，而在互联网企业变更是很频繁的，在分库分表的情况下要升级一个存储过程相当麻烦。又因为它是不记录log的，所以也不方便debug性能问题。如果使用过程，一定考虑如果执行失败的情况。&lt;ul&gt;
&lt;li&gt;使用视图一定程度上也是为了降低代码里SQL的复杂度，但有时候为了视图的通用性会损失性能（比如返回不必要的字段）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;触发器（trigger）也是同样，但也不应该通过它去约束数据的强一致性，mysql只支持“基于行的触发”，也就是说，触发器始终是针对一条记录的，而不是针对整个sql语句的，如果变更的数据集非常大的话，效率会很低。掩盖一条sql背后的工作，一旦出现问题将是灾难性的，但又很难快速分析和定位。再者需要ddl时无法使用pt-osc工具。放在transaction执行。&lt;/li&gt;
&lt;li&gt;事件（event）也是一种偷懒的表现，目前已经遇到数次由于定时任务执行失败影响业务的情况，而且mysql无法对它做失败预警。建立专门的 job scheduler 平台。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;单表数据量控制在5000w以内&quot;&gt;&lt;a href=&quot;#单表数据量控制在5000w以内&quot; class=&quot;headerlink&quot; title=&quot;单表数据量控制在5000w以内&quot;&gt;&lt;/a&gt;单表数据量控制在5000w以内&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;数据库中不允许存储明文密码&quot;&gt;&lt;a href=&quot;#数据库中不允许存储明文密码&quot; class=&quot;headerlink&quot; title=&quot;数据库中不允许存储明文密码&quot;&gt;&lt;/a&gt;数据库中不允许存储明文密码&lt;/h3&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;3-字段规范&quot;&gt;&lt;a href=&quot;#3-字段规范&quot; class=&quot;headerlink&quot; title=&quot;3. 字段规范&quot;&gt;&lt;/a&gt;3. 字段规范&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;char、varchar、text等字符串类型定义&quot;&gt;&lt;a href=&quot;#char、varchar、text等字符串类型定义&quot; class=&quot;headerlink&quot; title=&quot;char、varchar、text等字符串类型定义&quot;&gt;&lt;/a&gt;char、varchar、text等字符串类型定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对于长度基本固定的列，如果该列恰好更新又特别频繁，适合char&lt;/li&gt;
&lt;li&gt;varchar虽然存储变长字符串，但不可太小也不可太大。UTF8最多能存21844个汉字，或65532个英文&lt;/li&gt;
&lt;li&gt;varbinary(M)保存的是二进制字符串，它保存的是字节而不是字符，所以没有字符集的概念，M长度0-255（字节）。只用于排序或比较时大小写敏感的类型，不包括密码存储&lt;/li&gt;
&lt;li&gt;TEXT类型与VARCHAR都类似，存储可变长度，最大限制也是2^16，但是它20bytes以后的内容是在数据页以外的空间存储（row_format=dynamic），对它的使用需要多一次寻址，没有默认值。&lt;br&gt;一般用于存放容量平均都很大、操作没有其它字段那样频繁的值。&lt;br&gt;网上部分文章说要避免使用text和blob，要知道如果纯用varchar可能会导致行溢出，效果差不多，但因为每行占用字节数过多，会导致buffer_pool能缓存的数据行、页下降。另外text和blob上面一般不会去建索引，而是利用sphinx之类的第三方全文搜索引擎，如果确实要创建（前缀）索引，那就会影响性能。凡事看具体场景。&lt;br&gt;另外尽可能把text/blob拆到另一个表中&lt;/li&gt;
&lt;li&gt;BLOB可以看出varbinary的扩展版本，内容以二进制字符串存储，无字符集，区分大小写，有一种经常提但不用的场景：不要在数据库里存储图片。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;int、tinyint、decimal等数字类型定义&quot;&gt;&lt;a href=&quot;#int、tinyint、decimal等数字类型定义&quot; class=&quot;headerlink&quot; title=&quot;int、tinyint、decimal等数字类型定义&quot;&gt;&lt;/a&gt;int、tinyint、decimal等数字类型定义&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用tinyint来代替 enum和boolean&lt;br&gt;ENUM类型在需要修改或增加枚举值时，需要在线DDL，成本较高；ENUM列值如果含有数字类型，可能会引起默认值混淆&lt;br&gt;tinyint使用1个字节，一般用于status,type,flag的列&lt;/li&gt;
&lt;li&gt;建议使用 UNSIGNED 存储非负数值&lt;br&gt;相比不使用 unsigned，可以扩大一倍使用数值范围&lt;/li&gt;
&lt;li&gt;int使用固定4个字节存储，int(11)与int(4)只是显示宽度的区别&lt;/li&gt;
&lt;li&gt;使用Decimal 代替float/double存储精确浮点数&lt;br&gt;对于货币、金额这样的类型，使用decimal，如 decimal(9,2)。float默认只能能精确到6位有效数字&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;timestamp与datetime选择&quot;&gt;&lt;a href=&quot;#timestamp与datetime选择&quot; class=&quot;headerlink&quot; title=&quot;timestamp与datetime选择&quot;&gt;&lt;/a&gt;timestamp与datetime选择&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;datetime 和 timestamp类型所占的存储空间不同，前者8个字节，后者4个字节，这样造成的后果是两者能表示的时间范围不同。前者范围为1000-01-01 00:00:00 ~ 9999-12-31 23:59:59，后者范围为 1970-01-01 08:00:01 到 2038-01-19 11:14:07 。所以 TIMESTAMP 支持的范围比 DATATIME 要小。&lt;/li&gt;
&lt;li&gt;timestamp可以在insert/update行时，自动更新时间字段（如 f_set_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP），但一个表只能有一个这样的定义。&lt;/li&gt;
&lt;li&gt;timestamp显示与时区有关，内部总是以 UTC 毫秒 来存的。还受到严格模式的限制&lt;/li&gt;
&lt;li&gt;优先使用timestamp，datetime也没问题&lt;/li&gt;
&lt;li&gt;where条件里不要对时间列上使用时间函数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;建议字段都定义为NOT-NULL&quot;&gt;&lt;a href=&quot;#建议字段都定义为NOT-NULL&quot; class=&quot;headerlink&quot; title=&quot;建议字段都定义为NOT NULL&quot;&gt;&lt;/a&gt;建议字段都定义为NOT NULL&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果是索引字段，一定要定义为not null 。因为null值会影响cordinate统计，影响优化器对索引的选择&lt;/li&gt;
&lt;li&gt;如果不能保证insert时一定有值过来，定义时使用default ‘’ ，或 0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;同一意义的字段定义必须相同&quot;&gt;&lt;a href=&quot;#同一意义的字段定义必须相同&quot; class=&quot;headerlink&quot; title=&quot;同一意义的字段定义必须相同&quot;&gt;&lt;/a&gt;同一意义的字段定义必须相同&lt;/h3&gt;&lt;p&gt; 比如不同表中都有 f_user_id 字段，那么它的类型、字段长度要设计成一样&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;4-索引规范&quot;&gt;&lt;a href=&quot;#4-索引规范&quot; class=&quot;headerlink&quot; title=&quot;4. 索引规范&quot;&gt;&lt;/a&gt;4. 索引规范&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;任何新的select-update-delete上线，都要先explain，看索引使用情况&quot;&gt;&lt;a href=&quot;#任何新的select-update-delete上线，都要先explain，看索引使用情况&quot; class=&quot;headerlink&quot; title=&quot;任何新的select,update,delete上线，都要先explain，看索引使用情况&quot;&gt;&lt;/a&gt;任何新的select,update,delete上线，都要先explain，看索引使用情况&lt;/h3&gt;&lt;p&gt;尽量避免extra列出现：Using File Sort，Using Temporary，rows超过1000的要谨慎上线。&lt;br&gt;explain解读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;：ALL, index,  range, ref, eq_ref, const, system, NULL（从左到右，性能从差到好）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;possible_keys&lt;/code&gt;：指出MySQL能使用哪个索引在表中找到记录，查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;key&lt;/code&gt;：表示MySQL实际决定使用的键（索引）&lt;br&gt;如果没有选择索引，键是NULL。要想强制MySQL使用或忽视possible_keys列中的索引，在查询中使用FORCE INDEX、USE INDEX或者IGNORE INDEX&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ref&lt;/code&gt;：表示选择 &lt;code&gt;key&lt;/code&gt; 列上的索引，哪些列或常量被用于查找索引列上的值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rows&lt;/code&gt;：根据表统计信息及索引选用情况，估算的找到所需的记录所需要读取的行数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Extra&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Using temporary&lt;/code&gt;：表示MySQL需要使用临时表来存储结果集，常见于排序和分组查询&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Using filesort&lt;/code&gt;：MySQL中无法利用索引完成的排序操作称为“文件排序”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;索引个数限制&quot;&gt;&lt;a href=&quot;#索引个数限制&quot; class=&quot;headerlink&quot; title=&quot;索引个数限制&quot;&gt;&lt;/a&gt;索引个数限制&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;索引是双刃剑，会增加维护负担，增大IO压力，索引占用空间是成倍增加的&lt;/li&gt;
&lt;li&gt;单张表的索引数量控制在5个以内，或不超过表字段个数的20%。若单张表多个字段在查询需求上都要单独用到索引，需要经过DBA评估。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;避免冗余索引&quot;&gt;&lt;a href=&quot;#避免冗余索引&quot; class=&quot;headerlink&quot; title=&quot;避免冗余索引&quot;&gt;&lt;/a&gt;避免冗余索引&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;InnoDB表是一棵索引组织表，主键是和数据放在一起的聚集索引，普通索引最终指向的是主键地址，所以把主键做最后一列是多余的。如f_crm_id作为主键，联合索引(f_user_id,f_crm_id)上的f_crm_id就完全多余&lt;/li&gt;
&lt;li&gt;(a,b,c)、(a,b)，后者为冗余索引。可以利用前缀索引来达到加速目的，减轻维护负担&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;没有特殊要求，使用自增id作为主键&quot;&gt;&lt;a href=&quot;#没有特殊要求，使用自增id作为主键&quot; class=&quot;headerlink&quot; title=&quot;没有特殊要求，使用自增id作为主键&quot;&gt;&lt;/a&gt;没有特殊要求，使用自增id作为主键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主键是一种聚集索引，顺序写入。组合唯一索引作为主键的话，是随机写入，适合写少读多的表&lt;/li&gt;
&lt;li&gt;主键不允许更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;索引尽量建在选择性高的列上&quot;&gt;&lt;a href=&quot;#索引尽量建在选择性高的列上&quot; class=&quot;headerlink&quot; title=&quot;索引尽量建在选择性高的列上&quot;&gt;&lt;/a&gt;索引尽量建在选择性高的列上&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不在低基数列上建立索引，例如性别、类型。但有一种情况，idx_feedbackid_type (f_feedback_id,f_type)，如果经常用 f_type=1 比较，而且能过滤掉90%行，那这个组合索引就值得创建。有时候同样的查询语句，由于条件取值不同导致使用不同的索引，也是这个道理。&lt;/li&gt;
&lt;li&gt;索引选择性计算方法（基数 ÷ 数据行数）&lt;br&gt;Selectivity = Cardinality / Total Rows = select count(distinct col1)/count(*) from tbname，越接近1说明col1上使用索引的过滤效果越好&lt;/li&gt;
&lt;li&gt;走索引扫描行数超过30%时，改全表扫描&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;最左前缀原则&quot;&gt;&lt;a href=&quot;#最左前缀原则&quot; class=&quot;headerlink&quot; title=&quot;最左前缀原则&quot;&gt;&lt;/a&gt;最左前缀原则&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;mysql使用联合索引时，从左向右匹配，遇到断开或者范围查询时，无法用到后续的索引列&lt;br&gt;比如索引idx_c1_c2_c3 (c1,c2,c3)，相当于创建了(c1)、(c1,c2)、(c1,c2,c3)三个索引，where条件包含上面三种情况的字段比较则可以用到索引，但像 where c1=a and c3=c 只能用到c1列的索引，像 c2=b and c3=c等情况就完全用不到这个索引&lt;/li&gt;
&lt;li&gt;遇到范围查询(&amp;gt;、&amp;lt;、between、like)也会停止索引匹配，比如 c1=a and c2 &amp;gt; 2 and c3=c，只有c1,c2列上的比较能用到索引，(c1,c2,c3)排列的索引才可能会都用上&lt;/li&gt;
&lt;li&gt;where条件里面字段的顺序与索引顺序无关，mysql优化器会自动调整顺序&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;前缀索引&quot;&gt;&lt;a href=&quot;#前缀索引&quot; class=&quot;headerlink&quot; title=&quot;前缀索引&quot;&gt;&lt;/a&gt;前缀索引&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对超过30个字符长度的列创建索引时，考虑使用前缀索引，如 idx_cs_guid2 (f_cs_guid(26))表示截取前26个字符做索引，既可以提高查找效率，也可以节省空间&lt;/li&gt;
&lt;li&gt;前缀索引也有它的缺点是，如果在该列上 ORDER BY 或 GROUP BY 时无法使用索引，也不能把它们用作覆盖索引(Covering Index)&lt;/li&gt;
&lt;li&gt;如果在varbinary或blob这种以二进制存储的列上建立前缀索引，要考虑字符集，括号里表示的是字节数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;合理使用覆盖索引减少IO&quot;&gt;&lt;a href=&quot;#合理使用覆盖索引减少IO&quot; class=&quot;headerlink&quot; title=&quot;合理使用覆盖索引减少IO&quot;&gt;&lt;/a&gt;合理使用覆盖索引减少IO&lt;/h3&gt;&lt;p&gt;INNODB存储引擎中，secondary index(非主键索引，又称为辅助索引、二级索引)没有直接存储行地址，而是存储主键值。&lt;br&gt;如果用户需要查询secondary index中所不包含的数据列，则需要先通过secondary index查找到主键值，然后再通过主键查询到其他数据列，因此需要查询两次。覆盖索引则可以在一个索引中获取所有需要的数据列，从而避免回表进行二次查找，节省IO因此效率较高。&lt;br&gt;例如SELECT email，uid FROM user_email WHERE uid=xx，如果uid不是主键，适当时候可以将索引添加为index(uid，email)，以获得性能提升。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;尽量不要在频繁更新的列上创建索引&quot;&gt;&lt;a href=&quot;#尽量不要在频繁更新的列上创建索引&quot; class=&quot;headerlink&quot; title=&quot;尽量不要在频繁更新的列上创建索引&quot;&gt;&lt;/a&gt;尽量不要在频繁更新的列上创建索引&lt;/h3&gt;&lt;p&gt;如不在定义了 ON UPDATE CURRENT_STAMP 的列上创建索引，维护成本太高（好在mysql有insert buffer，会合并索引的插入）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;5-SQL设计&quot;&gt;&lt;a href=&quot;#5-SQL设计&quot; class=&quot;headerlink&quot; title=&quot;5. SQL设计&quot;&gt;&lt;/a&gt;5. SQL设计&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;杜绝直接-SELECT-读取全部字段&quot;&gt;&lt;a href=&quot;#杜绝直接-SELECT-读取全部字段&quot; class=&quot;headerlink&quot; title=&quot;杜绝直接 SELECT * 读取全部字段&quot;&gt;&lt;/a&gt;杜绝直接 SELECT * 读取全部字段&lt;/h3&gt;&lt;p&gt; 即使需要所有字段，减少网络带宽消耗，能有效利用覆盖索引，表结构变更对程序基本无影响&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;能确定返回结果只有一条时，使用-limit-1&quot;&gt;&lt;a href=&quot;#能确定返回结果只有一条时，使用-limit-1&quot; class=&quot;headerlink&quot; title=&quot;能确定返回结果只有一条时，使用 limit 1&quot;&gt;&lt;/a&gt;能确定返回结果只有一条时，使用 limit 1&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在保证数据不会有误的前提下&lt;/strong&gt;，能确定结果集数量时，多使用limit，尽快的返回结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;小心隐式类型转换&quot;&gt;&lt;a href=&quot;#小心隐式类型转换&quot; class=&quot;headerlink&quot; title=&quot;小心隐式类型转换&quot;&gt;&lt;/a&gt;小心隐式类型转换&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;转换规则&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a. 两个参数至少有一个是 NULL 时，比较的结果也是 NULL，例外是使用 &amp;lt;=&amp;gt; 对两个 NULL 做比较时会返回 1，这两种情况都不需要做类型转换&lt;br&gt;b. 两个参数都是字符串，会按照字符串来比较，不做类型转换&lt;br&gt;c. 两个参数都是整数，按照整数来比较，不做类型转换&lt;br&gt;d. 十六进制的值和非数字做比较时，会被当做二进制串&lt;br&gt;e. 有一个参数是 TIMESTAMP 或 DATETIME，并且另外一个参数是常量，常量会被转换为 timestamp&lt;br&gt;f. 有一个参数是 decimal 类型，如果另外一个参数是 decimal 或者整数，会将整数转换为 decimal 后进行比较，如果另外一个参数是浮点数，则会把 decimal 转换为浮点数进行比较&lt;br&gt;g. 所有其他情况下，两个参数都会被转换为浮点数再进行比较。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果一个索引建立在string类型上，如果这个字段和一个int类型的值比较，符合第 g 条。如f_phone定义的类型是varchar，但where使用f_phone in (098890)，两个参数都会被当成成浮点型。发生这个隐式转换并不是最糟的，最糟的是string转换后的float，mysql无法使用索引，这才导致了性能问题。如果是 f_user_id = ‘1234567’ 的情况，符合第 b 条,直接把数字当字符串比较。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;禁止在where条件列上使用函数&quot;&gt;&lt;a href=&quot;#禁止在where条件列上使用函数&quot; class=&quot;headerlink&quot; title=&quot;禁止在where条件列上使用函数&quot;&gt;&lt;/a&gt;禁止在where条件列上使用函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;会导致索引失效，如lower(email)，f_qq % 4。可放到右边的常量上计算&lt;/li&gt;
&lt;li&gt;返回小结果集不是很大的情况下，可以对返回列使用函数，简化程序开发&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;使用like模糊匹配，-不要放首位&quot;&gt;&lt;a href=&quot;#使用like模糊匹配，-不要放首位&quot; class=&quot;headerlink&quot; title=&quot;使用like模糊匹配，%不要放首位&quot;&gt;&lt;/a&gt;使用like模糊匹配，%不要放首位&lt;/h3&gt;&lt;p&gt;会导致索引失效，有这种搜索需求是，考虑其它方案，如sphinx全文搜索&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;涉及到复杂sql时，务必先参考已有索引设计，先explain&quot;&gt;&lt;a href=&quot;#涉及到复杂sql时，务必先参考已有索引设计，先explain&quot; class=&quot;headerlink&quot; title=&quot;涉及到复杂sql时，务必先参考已有索引设计，先explain&quot;&gt;&lt;/a&gt;涉及到复杂sql时，务必先参考已有索引设计，先explain&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;简单SQL拆分，不以代码处理复杂为由。&lt;/li&gt;
&lt;li&gt;比如 OR 条件： f_phone=’10000’ or f_mobile=’10000’，两个字段各自有索引，但只能用到其中一个。可以拆分成2个sql，或者union all。&lt;/li&gt;
&lt;li&gt;先explain的好处是可以为了利用索引，增加更多查询限制条件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;使用join时，where条件尽量使用充分利用同一表上的索引&quot;&gt;&lt;a href=&quot;#使用join时，where条件尽量使用充分利用同一表上的索引&quot; class=&quot;headerlink&quot; title=&quot;使用join时，where条件尽量使用充分利用同一表上的索引&quot;&gt;&lt;/a&gt;使用join时，where条件尽量使用充分利用同一表上的索引&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如 select t1.a,t2.b * from t1,t2 and t1.a=t2.a and t1.b=123 and t2.c= 4 ，如果t1.c与t2.c字段相同，那么t1上的索引(b,c)就只用到b了。此时如果把where条件中的t2.c=4改成t1.c=4，那么可以用到完整的索引&lt;/li&gt;
&lt;li&gt;这种情况可能会在字段冗余设计（反范式）时出现&lt;/li&gt;
&lt;li&gt;正确选取inner join和left join&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;少用子查询，改用join&quot;&gt;&lt;a href=&quot;#少用子查询，改用join&quot; class=&quot;headerlink&quot; title=&quot;少用子查询，改用join&quot;&gt;&lt;/a&gt;少用子查询，改用join&lt;/h3&gt;&lt;p&gt;小于5.6版本时，子查询效率很低，不像Oracle那样先计算子查询后外层查询。5.6版本开始得到优化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;考虑使用union-all，少使用union，注意考虑去重&quot;&gt;&lt;a href=&quot;#考虑使用union-all，少使用union，注意考虑去重&quot; class=&quot;headerlink&quot; title=&quot;考虑使用union all，少使用union，注意考虑去重&quot;&gt;&lt;/a&gt;考虑使用union all，少使用union，注意考虑去重&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;union all不去重，而少了排序操作，速度相对比union要快，如果没有去重的需求，优先使用union all&lt;/li&gt;
&lt;li&gt;如果UNION结果中有使用limit，在2个子SQL可能有许多返回值的情况下，各自加上limit。如果还有order by，请找DBA。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;IN的内容尽量不超过200个&quot;&gt;&lt;a href=&quot;#IN的内容尽量不超过200个&quot; class=&quot;headerlink&quot; title=&quot;IN的内容尽量不超过200个&quot;&gt;&lt;/a&gt;IN的内容尽量不超过200个&lt;/h3&gt;&lt;p&gt;超过500个值使用批量的方式，否则一次执行会影响数据库的并发能力，因为单SQL只能且一直占用单CPU，而且可能导致主从复制延迟&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;拒绝大事务&quot;&gt;&lt;a href=&quot;#拒绝大事务&quot; class=&quot;headerlink&quot; title=&quot;拒绝大事务&quot;&gt;&lt;/a&gt;拒绝大事务&lt;/h3&gt;&lt;p&gt;比如在一个事务里进行多个select，多个update，如果是高频事务，会严重影响MySQL并发能力，因为事务持有的锁等资源只在事务rollback/commit时才能释放。但同时也要权衡数据写入的一致性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;避免使用is-null-is-not-null这样的比较&quot;&gt;&lt;a href=&quot;#避免使用is-null-is-not-null这样的比较&quot; class=&quot;headerlink&quot; title=&quot;避免使用is null, is not null这样的比较&quot;&gt;&lt;/a&gt;避免使用is null, is not null这样的比较&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;order-by-limit&quot;&gt;&lt;a href=&quot;#order-by-limit&quot; class=&quot;headerlink&quot; title=&quot;order by .. limit&quot;&gt;&lt;/a&gt;order by .. limit&lt;/h3&gt;&lt;p&gt;这种查询更多的是通过索引去优化，但order by的字段有讲究，比如主键id与f_time都是顺序递增，那就可以考虑order by id而非 f_time 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;c1-lt-a-order-by-c2&quot;&gt;&lt;a href=&quot;#c1-lt-a-order-by-c2&quot; class=&quot;headerlink&quot; title=&quot;c1 &amp;lt; a order by c2&quot;&gt;&lt;/a&gt;c1 &amp;lt; a order by c2&lt;/h3&gt;&lt;p&gt;与上面不同的是，order by之前有个范围查询，由前面的内容可知，用不到类似(c1,c2)的索引，但是可以利用(c2,c1)索引。另外还可以改写成join的方式实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;分页优化&quot;&gt;&lt;a href=&quot;#分页优化&quot; class=&quot;headerlink&quot; title=&quot;分页优化&quot;&gt;&lt;/a&gt;分页优化&lt;/h3&gt;&lt;p&gt;建议使用合理的分页方式以提高分页效率，大页情况下不使用跳跃式分页&lt;br&gt;假如有类似下面分页语句:&lt;br&gt;SELECT &lt;em&gt; FROM table1 ORDER BY ftime DESC LIMIT 10000,10;&lt;br&gt;这种分页方式会导致大量的io，因为MySQL使用的是提前读取策略。&lt;br&gt;推荐分页方式：&lt;br&gt;SELECT &lt;/em&gt; FROM table1  WHERE ftime &amp;lt; last_time ORDER BY ftime DESC LIMIT 10&lt;br&gt;即传入上一次分页的界值&lt;/p&gt;
&lt;p&gt;SELECT * FROM table as t1 inner JOIN (SELECT id FROM table ORDER BY time LIMIT 10000，10) as t2 ON t1.id=t2.id&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;count计数&quot;&gt;&lt;a href=&quot;#count计数&quot; class=&quot;headerlink&quot; title=&quot;count计数&quot;&gt;&lt;/a&gt;count计数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;首先count(&lt;em&gt;)、count(1)、count(col1)是有区别的，count(&lt;/em&gt;)表示整个结果集有多少条记录，count(1)表示结果集里以primary key统计数量，绝大多数情况下count(&lt;em&gt;)与count(1)效果一样的，但count(col1)表示的是结果集里 col1 列 NOT null 的记录数。优先采用count(&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;大数据量count是消耗资源的操作，甚至会拖慢整个库，查询性能问题无法解决的，应从产品设计上进行重构。例如当频繁需要count的查询，考虑使用汇总表&lt;/li&gt;
&lt;li&gt;遇到distinct的情况，group by方式可能效率更高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;delete-update语句改成select再explain&quot;&gt;&lt;a href=&quot;#delete-update语句改成select再explain&quot; class=&quot;headerlink&quot; title=&quot;delete,update语句改成select再explain&quot;&gt;&lt;/a&gt;delete,update语句改成select再explain&lt;/h3&gt;&lt;p&gt;select最多导致数据库慢，写操作才是锁表的罪魁祸首&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;减少与数据库交互的次数，尽量采用批量SQL语句&quot;&gt;&lt;a href=&quot;#减少与数据库交互的次数，尽量采用批量SQL语句&quot; class=&quot;headerlink&quot; title=&quot;减少与数据库交互的次数，尽量采用批量SQL语句&quot;&gt;&lt;/a&gt;减少与数据库交互的次数，尽量采用批量SQL语句&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INSERT ... ON DUPLICATE KEY UPDATE ...&lt;/code&gt;，插入行后会导致在一个UNIQUE索引或PRIMARY KEY中出现重复值，则执行旧行UPDATE，如果不重复则直接插入，影响1行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REPLACE INTO&lt;/code&gt;类似，但它是冲突时删除旧行。&lt;code&gt;INSERT IGNORE&lt;/code&gt;相反，保留旧行，丢弃要插入的新行。&lt;/li&gt;
&lt;li&gt;INSERT INTO VALUES(),(),()，合并插入。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;杜绝危险SQL&quot;&gt;&lt;a href=&quot;#杜绝危险SQL&quot; class=&quot;headerlink&quot; title=&quot;杜绝危险SQL&quot;&gt;&lt;/a&gt;杜绝危险SQL&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;去掉where 1=1 这样无意义或恒真的条件，如果遇到update/delete或遭到sql注入就恐怖了&lt;/li&gt;
&lt;li&gt;SQL中不允许出现DDL语句。一般也不给予create/alter这类权限，但阿里云RDS只区分读写用户&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;6-行为规范&quot;&gt;&lt;a href=&quot;#6-行为规范&quot; class=&quot;headerlink&quot; title=&quot;6. 行为规范&quot;&gt;&lt;/a&gt;6. 行为规范&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;不允许在DBA不知情的情况下导现网数据&lt;/li&gt;
&lt;li&gt;大批量更新，如修复数据，避开高峰期，并通知DBA。直接执行sql的由运维或DBA同事操作&lt;/li&gt;
&lt;li&gt;及时处理已下线业务的SQL&lt;/li&gt;
&lt;li&gt;复杂sql上线审核&lt;br&gt;因为目前还没有SQL审查机制，复杂sql如多表join,count,group by，主动上报DBA评估。&lt;/li&gt;
&lt;li&gt;重要项目的数据库方案选型和设计必须提前通知DBA参与&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;本文参考&quot;&gt;&lt;a href=&quot;#本文参考&quot; class=&quot;headerlink&quot; title=&quot;本文参考&quot;&gt;&lt;/a&gt;本文参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wangwei007.blog.51cto.com/68019/1709769&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;互联网MySQL开发规范&lt;/a&gt; 这个基本也是《去哪儿MySQL开发规范.pdf》版本&lt;/li&gt;
&lt;li&gt;MySQL数据库开发的三十六条军规&lt;em&gt;石展&lt;/em&gt;完整.pdf&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://imysql.com/2015/07/23/something-important-about-mysql-design-reference.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;老叶观点：MySQL开发规范之我见&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/xlgen157387/article/details/48086607&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL开发规范与使用技巧总结&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://highdb.com/mysql%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://highdb.com/mysql%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2016/05/11/mysql-dev-principle-ec/&quot;&gt;http://seanlook.com/2016/05/11/mysql-dev-principle-ec/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;!-- 

http://highdb.com/mysql%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/
http://blog.csdn.net/xlgen157387/article/details/48086607
http://www.iteye.com/topic/1141229
--&gt;
&lt;p&gt;最近一段时间一边在线上抓取SQL来优化，一边在整理这个开发规范，尽量减少新的问题SQL进入生产库。今天也是对公司的开发做了一次培训，PPT就不放上来了，里面有十来个生产SQL的案例。因为规范大部分还是具有通用性，所以也借鉴了像去哪儿和赶集的规范，但实际在撰写本文的过程中，每一条规范的背后无不是在工作中有参照的反面例子的。如果时间可以的话，会抽出一部分或分析其原理，或用案例证明。&lt;/p&gt;
&lt;h2 id=&quot;1-命名规范&quot;&gt;&lt;a href=&quot;#1-命名规范&quot; class=&quot;headerlink&quot; title=&quot;1. 命名规范&quot;&gt;&lt;/a&gt;1. 命名规范&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;库名、表名、字段名必须使用小写字母，并采用下划线分割&quot;&gt;&lt;a href=&quot;#库名、表名、字段名必须使用小写字母，并采用下划线分割&quot; class=&quot;headerlink&quot; title=&quot;库名、表名、字段名必须使用小写字母，并采用下划线分割&quot;&gt;&lt;/a&gt;库名、表名、字段名必须使用小写字母，并采用下划线分割&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MySQL有配置参数lower_case_table_names=1，即库表名以小写存储，大小写不敏感。如果是0，则库表名以实际情况存储，大小写敏感；如果是2，以实际情况存储，但以小写比较。&lt;/li&gt;
&lt;li&gt;如果大小写混合使用，可能存在abc，Abc，ABC等多个表共存，容易导致混乱。&lt;/li&gt;
&lt;li&gt;字段名显示区分大小写，但实际使⽤时不区分，即不可以建立两个名字一样但大小写不一样的字段。&lt;/li&gt;
&lt;li&gt;为了统一规范， 库名、表名、字段名使用小写字母。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;库名以-d-开头，表名以-t-开头，字段名以-f-开头&quot;&gt;&lt;a href=&quot;#库名以-d-开头，表名以-t-开头，字段名以-f-开头&quot; class=&quot;headerlink&quot; title=&quot;库名以 d 开头，表名以 t 开头，字段名以 f_ 开头&quot;&gt;&lt;/a&gt;库名以 d&lt;em&gt; 开头，表名以 t&lt;/em&gt; 开头，字段名以 f_ 开头&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;比如表 &lt;code&gt;t_crm_relation&lt;/code&gt;，中间的 crm 代表业务模块名&lt;/li&gt;
&lt;li&gt;视图以&lt;code&gt;view_&lt;/code&gt;开头，事件以&lt;code&gt;event_&lt;/code&gt;开头，触发器以&lt;code&gt;trig_&lt;/code&gt;开头，存储过程以&lt;code&gt;proc_&lt;/code&gt;开头，函数以&lt;code&gt;func_&lt;/code&gt;开头&lt;/li&gt;
&lt;li&gt;普通索引以&lt;code&gt;idx_col1_col2&lt;/code&gt;命名，唯一索引以&lt;code&gt;uk_col1_col2&lt;/code&gt;命名（可去掉f_公共部分）。如 idx_companyid_corpid_contacttime(f_company_id,f_corp_id,f_contact_time)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;库名、表名、字段名禁止超过32个字符，需见名知意&quot;&gt;&lt;a href=&quot;#库名、表名、字段名禁止超过32个字符，需见名知意&quot; class=&quot;headerlink&quot; title=&quot;库名、表名、字段名禁止超过32个字符，需见名知意&quot;&gt;&lt;/a&gt;库名、表名、字段名禁止超过32个字符，需见名知意&lt;/h3&gt;&lt;p&gt;库名、表名、字段名支持最多64个字符，但为了统一规范、易于辨识以及减少传输量，禁止超过32个字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;临时库、表名须以tmp加日期为后缀&quot;&gt;&lt;a href=&quot;#临时库、表名须以tmp加日期为后缀&quot; class=&quot;headerlink&quot; title=&quot;临时库、表名须以tmp加日期为后缀&quot;&gt;&lt;/a&gt;临时库、表名须以tmp加日期为后缀&lt;/h3&gt;&lt;p&gt;如 t_crm_relation_tmp0425。备份表也类似，形如 &lt;code&gt;_bak20160425&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;按日期时间分表须符合-YYYY-MM-DD-格式&quot;&gt;&lt;a href=&quot;#按日期时间分表须符合-YYYY-MM-DD-格式&quot; class=&quot;headerlink&quot; title=&quot;按日期时间分表须符合_YYYY[MM][DD]格式&quot;&gt;&lt;/a&gt;按日期时间分表须符合_YYYY[MM][DD]格式&lt;/h3&gt;&lt;p&gt;这也是为将来有可能分表做准备的，比如&lt;code&gt;t_crm_ec_record_201403&lt;/code&gt;，但像 t_crm_contact_at201506就打破了这种规范。&lt;br&gt;不具有时间特性的，直接以 &lt;code&gt;t_tbname_001&lt;/code&gt; 这样的方式命名。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;2-库表基础规范&quot;&gt;&lt;a href=&quot;#2-库表基础规范&quot; class=&quot;headerlink&quot; title=&quot;2. 库表基础规范&quot;&gt;&lt;/a&gt;2. 库表基础规范&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;使用Innodb存储引擎&quot;&gt;&lt;a href=&quot;#使用Innodb存储引擎&quot; class=&quot;headerlink&quot; title=&quot;使用Innodb存储引擎&quot;&gt;&lt;/a&gt;使用Innodb存储引擎&lt;/h3&gt;&lt;p&gt;5.5版本开始mysql默认存储引擎就是InnoDB，5.7版本开始，系统表都放弃MyISAM了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;表字符集统一使用UTF8&quot;&gt;&lt;a href=&quot;#表字符集统一使用UTF8&quot; class=&quot;headerlink&quot; title=&quot;表字符集统一使用UTF8&quot;&gt;&lt;/a&gt;表字符集统一使用UTF8&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;UTF8字符集存储汉字占用3个字节，存储英文字符占用一个字节&lt;/li&gt;
&lt;li&gt;校对字符集使用默认的 utf8_general_ci&lt;/li&gt;
&lt;li&gt;连接的客户端也使用utf8，建立连接时指定charset或&lt;code&gt;SET NAMES UTF8;&lt;/code&gt;。（对于已经在项目中长期使用latin1的，救不了了）&lt;/li&gt;
&lt;li&gt;如果遇到EMOJ等表情符号的存储需求，可申请使用UTF8MB4字符集&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;所有表都要添加注释&quot;&gt;&lt;a href=&quot;#所有表都要添加注释&quot; class=&quot;headerlink&quot; title=&quot;所有表都要添加注释&quot;&gt;&lt;/a&gt;所有表都要添加注释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;尽量给字段也添加注释&lt;/li&gt;
&lt;li&gt;类status型需指明主要值的含义，如”0-离线，1-在线”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;控制单表字段数量&quot;&gt;&lt;a href=&quot;#控制单表字段数量&quot; class=&quot;headerlink&quot; title=&quot;控制单表字段数量&quot;&gt;&lt;/a&gt;控制单表字段数量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;单表字段数上限30左右，再多的话考虑垂直分表，一是冷热数据分离，二是大字段分离，三是常在一起做条件和返回列的不分离。&lt;/li&gt;
&lt;li&gt;表字段控制少而精，可以提高IO效率，内存缓存更多有效数据，从而提高响应速度和并发能力，后续 alter table 也更快。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;所有表都必须要显式指定主键&quot;&gt;&lt;a href=&quot;#所有表都必须要显式指定主键&quot; class=&quot;headerlink&quot; title=&quot;所有表都必须要显式指定主键&quot;&gt;&lt;/a&gt;所有表都必须要显式指定主键&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;主键尽量采用自增方式，InnoDB表实际是一棵索引组织表，顺序存储可以提高存取效率，充分利用磁盘空间。还有对一些复杂查询可能需要自连接来优化时需要用到。&lt;/li&gt;
&lt;li&gt;需要全局唯一主键时，使用外部发号器ticket server（建设中）&lt;/li&gt;
&lt;li&gt;如果没有主键或唯一索引，update/delete是通过所有字段来定位操作的行，相当于每行就是一次全表扫描&lt;/li&gt;
&lt;li&gt;少数情况可以使用联合唯一主键，需与DBA协商&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;不强制使用外键参考&quot;&gt;&lt;a href=&quot;#不强制使用外键参考&quot; class=&quot;headerlink&quot; title=&quot;不强制使用外键参考&quot;&gt;&lt;/a&gt;不强制使用外键参考&lt;/h3&gt;&lt;p&gt;即使2个表的字段有明确的外键参考关系，也不使用 FOREIGN KEY ，因为新纪录会去主键表做校验，影响性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;适度使用存储过程、视图，禁止使用触发器、事件&quot;&gt;&lt;a href=&quot;#适度使用存储过程、视图，禁止使用触发器、事件&quot; class=&quot;headerlink&quot; title=&quot;适度使用存储过程、视图，禁止使用触发器、事件&quot;&gt;&lt;/a&gt;适度使用存储过程、视图，禁止使用触发器、事件&lt;/h3&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://seanlook.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://seanlook.com/tags/mysql/"/>
    
      <category term="规范" scheme="http://seanlook.com/tags/%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>小心MySQL的隐式类型转换陷阱</title>
    <link href="http://seanlook.com/2016/05/05/mysql-type-conversion/"/>
    <id>http://seanlook.com/2016/05/05/mysql-type-conversion/</id>
    <published>2016-05-05T08:32:49.000Z</published>
    <updated>2016-05-05T08:32:49.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-隐式类型转换实例&quot;&gt;&lt;a href=&quot;#1-隐式类型转换实例&quot; class=&quot;headerlink&quot; title=&quot;1. 隐式类型转换实例&quot;&gt;&lt;/a&gt;1. 隐式类型转换实例&lt;/h2&gt;&lt;p&gt;今天生产库上突然出现MySQL线程数告警，IOPS很高，实例会话里面出现许多类似下面的sql：(修改了相关字段和值)&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SELECT f_col3_id,f_qq1_id FROM d_dbname.t_tb1 WHERE f_col1_id=&lt;span class=&quot;number&quot;&gt;1226391&lt;/span&gt; and f_col2_id=&lt;span class=&quot;number&quot;&gt;1244378&lt;/span&gt; and &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f_qq1_id in (&lt;span class=&quot;number&quot;&gt;12345,23456&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34567,45678&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;56789,67890&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;78901,89012&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;90123,901231&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;901232,901233&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用 explain 看了下扫描行数和索引选择情况： &lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;explain SELECT f&lt;span class=&quot;emphasis&quot;&gt;_col3_&lt;/span&gt;id,f&lt;span class=&quot;emphasis&quot;&gt;_qq1_&lt;/span&gt;id FROM d&lt;span class=&quot;emphasis&quot;&gt;_dbname.t_&lt;/span&gt;tb1 WHERE f&lt;span class=&quot;emphasis&quot;&gt;_col1_&lt;/span&gt;id=1226391 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;and f_col2_id=1244378 and f_qq1_id in (12345,23456,34567,45678,56789,67890,78901,89012,90123,901231,901232,901233);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+---------------+---------+--------+--------------------------------+---------------+------------+--------+--------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| id   | select_type   | table   | type   | possible_keys                  | key           | key_len    | ref    | rows   | Extra                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+---------------+---------+--------+--------------------------------+---------------+------------+--------+--------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| 1    | SIMPLE        | t_tb1   | ref    | uid_type_frid,idx_corpid_qq1id | uid_type_frid | 8          | const  | 1386   | Using index condition; Using where |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+---------------+---------+--------+--------------------------------+---------------+------------+--------+--------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;共返回 1 行记录,花费 11.52 ms.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;t_tb1 表上有个索引&lt;code&gt;uid_type_frid(f_col2_id,f_type)&lt;/code&gt;、&lt;code&gt;idx_corp_id_qq1id(f_col1_id,f_qq1_id)&lt;/code&gt;，而且如果选择后者时，f_qq1_id的过滤效果应该很佳，但却选择了前者。当使用 hint &lt;code&gt;use index(idx_corp_id_qq1id)&lt;/code&gt;时：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;explain extended SELECT f_col3_id,f_qq1_id FROM d_dbname.t_tb1  use index(idx_corpid_qq1id) WHERE f_col1_id=&lt;span class=&quot;number&quot;&gt;1226391&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;and&lt;/span&gt; f_col2_id=&lt;span class=&quot;number&quot;&gt;1244378&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;and&lt;/span&gt; f_qq1_id in (&lt;span class=&quot;number&quot;&gt;12345&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23456&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34567&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45678&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;56789&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67890&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;78901&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;89012&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;90123&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;901231&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;901232&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;901233&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+---------------+--------+--------+---------------------+------------------+------------+----------+-------------+------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| id   | select_type   | table  | type   | possible_keys       | key              | key_len    | ref      | rows        | Extra                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+---------------+--------+--------+---------------------+------------------+------------+----------+-------------+------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;    | SIMPLE        | t_tb1  | ref    | idx_corpid_qq1id    | idx_corpid_qq1id | &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;          | const    | &lt;span class=&quot;number&quot;&gt;2375752&lt;/span&gt;     | Using index condition&lt;span class=&quot;comment&quot;&gt;; Using where |&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---- -+---------------+--------+--------+---------------------+------------------+------------+----------+-------------+------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;共返回 &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; 行记录,花费 &lt;span class=&quot;number&quot;&gt;17.48&lt;/span&gt; ms.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;show warnings&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------------+----------------+-----------------------------------------------------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Level           | Code           | Message                                                                                                               |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------------+----------------+-----------------------------------------------------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Warning         |           &lt;span class=&quot;number&quot;&gt;1739&lt;/span&gt; | Cannot use range access on index &#39;idx_corpid_qq1id&#39; due to type &lt;span class=&quot;literal&quot;&gt;or&lt;/span&gt; collation conversion on field &#39;f_qq1_id&#39;           |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Note            |           &lt;span class=&quot;number&quot;&gt;1003&lt;/span&gt; | /* select#&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; */ select `d_dbname`.`t_tb1`.`f_col3_id` AS `f_col3_id`,`d_dbname`.`t_tb1`.`f_qq1_id` AS `f_qq1_id` from `d_dbname`.`t_tb1` USE INDEX (`idx_corpid_qq1id`) where |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                 |                |  ((`d_dbname`.`t_tb1`.`f_col2_id` = &lt;span class=&quot;number&quot;&gt;1244378&lt;/span&gt;) &lt;span class=&quot;literal&quot;&gt;and&lt;/span&gt; (`d_dbname`.`t_tb1`.`f_col1_id` = &lt;span class=&quot;number&quot;&gt;1226391&lt;/span&gt;) &lt;span class=&quot;literal&quot;&gt;and&lt;/span&gt; (`d_dbname`.`t_tb1`.`f_qq1_id` in |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                 |                | (&lt;span class=&quot;number&quot;&gt;12345&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23456&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34567&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;45678&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;56789&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;67890&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;78901&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;89012&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;90123&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;901231&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;901232&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;901233&lt;/span&gt;)))                                        |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------------+----------------+-----------------------------------------------------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;共返回 &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; 行记录,花费 &lt;span class=&quot;number&quot;&gt;10.81&lt;/span&gt; ms.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;rows列达到200w行，但问题也发现了：select_type应该是 range 才对，key_len看出来只用到了&lt;code&gt;idx_corpid_qq1id&lt;/code&gt;索引的第一列。上面explain使用了 &lt;code&gt;extended&lt;/code&gt;，所以&lt;code&gt;show warnings;&lt;/code&gt;可以很明确的看到 f_qq1_id 出现了隐式类型转换：f_qq1_id是varchar，而后面的比较值是整型。&lt;/p&gt;
&lt;p&gt;解决该问题就是避免出现隐式类型转换(implicit type conversion)带来的不可控：把f_qq1_id in的内容写成字符串：&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;explain SELECT f&lt;span class=&quot;emphasis&quot;&gt;_col3_&lt;/span&gt;id,f&lt;span class=&quot;emphasis&quot;&gt;_qq1_&lt;/span&gt;id FROM d&lt;span class=&quot;emphasis&quot;&gt;_dbname.t_&lt;/span&gt;tb1 WHERE f&lt;span class=&quot;emphasis&quot;&gt;_col1_&lt;/span&gt;id=1226391 and f&lt;span class=&quot;emphasis&quot;&gt;_col2_&lt;/span&gt;id=1244378 and &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;f_qq1_id in (&#39;12345&#39;,&#39;23456&#39;,&#39;34567&#39;,&#39;45678&#39;,&#39;56789&#39;,&#39;67890&#39;,&#39;78901&#39;,&#39;89012&#39;,&#39;90123&#39;,&#39;901231&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+---------------+--------+---------+--------------------------------+------------------+-------------+---------+---------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| id    | select_type   | table  | type    | possible_keys                  | key              | key_len     | ref     | rows    | Extra                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+---------------+--------+---------+--------------------------------+------------------+-------------+---------+---------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| 1     | SIMPLE        | t_tb1  | range   | uid_type_frid,idx_corpid_qq1id | idx_corpid_qq1id | 70          |         | 40      | Using index condition; Using where |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+---------------+--------+---------+--------------------------------+------------------+-------------+---------+---------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;共返回 1 行记录,花费 12.41 ms.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;扫描行数从1386减少为40。&lt;/p&gt;
&lt;p&gt;类似的还出现过一例：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; d_dbname.t_tb2 &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; f_col1_id= &lt;span class=&quot;string&quot;&gt;&#39;1931231&#39;&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; f_phone &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;098890&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Warning | 1292 | Truncated incorrect DOUBLE value: &#39;1512-98464356&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;优化后直接从扫描rows 100w行降为1。&lt;/p&gt;
&lt;p&gt;借这个机会，系统的来看一下mysql中的隐式类型转换。&lt;/p&gt;
&lt;h2 id=&quot;2-mysql隐式转换规则&quot;&gt;&lt;a href=&quot;#2-mysql隐式转换规则&quot; class=&quot;headerlink&quot; title=&quot;2. mysql隐式转换规则&quot;&gt;&lt;/a&gt;2. mysql隐式转换规则&lt;/h2&gt;&lt;h3 id=&quot;2-1-规则&quot;&gt;&lt;a href=&quot;#2-1-规则&quot; class=&quot;headerlink&quot; title=&quot;2.1 规则&quot;&gt;&lt;/a&gt;2.1 规则&lt;/h3&gt;&lt;p&gt;下面来分析一下&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.7/en/type-conversion.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;隐式转换的规则&lt;/a&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;a. 两个参数至少有一个是 NULL 时，比较的结果也是 NULL，例外是使用 &amp;lt;=&amp;gt; 对两个 NULL 做比较时会返回 1，这两种情况都不需要做类型转换&lt;br&gt;b. 两个参数都是字符串，会按照字符串来比较，不做类型转换&lt;br&gt;c. 两个参数都是整数，按照整数来比较，不做类型转换&lt;br&gt;d. 十六进制的值和非数字做比较时，会被当做二进制串&lt;br&gt;e. 有一个参数是 TIMESTAMP 或 DATETIME，并且另外一个参数是常量，常量会被转换为 timestamp&lt;br&gt;f. 有一个参数是 decimal 类型，如果另外一个参数是 decimal 或者整数，会将整数转换为 decimal 后进行比较，如果另外一个参数是浮点数，则会把 decimal 转换为浮点数进行比较&lt;br&gt;g. 所有其他情况下，两个参数都会被转换为浮点数再进行比较&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select 11 + &#39;11&#39;, 11 + &#39;aa&#39;, &#39;a1&#39; + &#39;bb&#39;, 11 + &#39;0.01a&#39;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------+-----------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| 11 + &#39;11&#39; | 11 + &#39;aa&#39; | &#39;a1&#39; + &#39;bb&#39; | 11 + &#39;0.01a&#39; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------+-----------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;|        22 |        11 |           0 |        11.01 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------+-----------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set, 4 warnings (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show warnings;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Level   | Code | Message                                   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Warning | 1292 | Truncated incorrect DOUBLE value: &lt;span class=&quot;emphasis&quot;&gt;&#39;aa&#39;&lt;/span&gt;    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Warning | 1292 | Truncated incorrect DOUBLE value: &lt;span class=&quot;emphasis&quot;&gt;&#39;a1&#39;&lt;/span&gt;    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Warning | 1292 | Truncated incorrect DOUBLE value: &lt;span class=&quot;emphasis&quot;&gt;&#39;bb&#39;&lt;/span&gt;    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Warning | 1292 | Truncated incorrect DOUBLE value: &#39;0.01a&#39; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select &#39;11a&#39; = 11, &#39;11.0&#39; = 11, &#39;11.0&#39; = &#39;11&#39;, NULL = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------+-------------+---------------+----------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| &#39;11a&#39; = 11 | &#39;11.0&#39; = 11 | &#39;11.0&#39; = &#39;11&#39; | NULL = 1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------+-------------+---------------+----------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;|          1 |           1 |             0 |     NULL |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------+-------------+---------------+----------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set, 1 warning (0.01 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面可以看出&lt;code&gt;11 + &amp;#39;aa&amp;#39;&lt;/code&gt;，由于操作符两边的类型不一样且符合第g条，&lt;code&gt;aa&lt;/code&gt;要被转换成浮点型小数，然而转换失败（字母被截断），可以认为转成了 0，整数&lt;code&gt;11&lt;/code&gt;被转成浮点型还是它自己，所以&lt;code&gt;11 + &amp;#39;aa&amp;#39; = 11&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0.01a&lt;/code&gt;转成double型也是被截断成&lt;code&gt;0.01&lt;/code&gt;，所以&lt;code&gt;11 + &amp;#39;0.01a&amp;#39; = 11.01&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;等式比较也说明了这一点，&lt;code&gt;&amp;#39;11a&amp;#39;&lt;/code&gt;和&lt;code&gt;&amp;#39;11.0&amp;#39;&lt;/code&gt;转换后都等于 &lt;code&gt;11&lt;/code&gt;，这也正是文章开头实例为什么没走索引的原因： varchar型的f_qq1_id，转换成浮点型比较时，等于 12345 的情况有无数种如12345a、12345.b等待，MySQL优化器无法确定索引是否更有效，所以选择了其它方案。&lt;/p&gt;
&lt;p&gt;但并不是只要出现隐式类型转换，就会引起上面类似的性能问题，最终是要看转换后能否有效选择索引。像&lt;code&gt;f_id = &amp;#39;654321&amp;#39;&lt;/code&gt;、&lt;code&gt;f_mtime between &amp;#39;2016-05-01 00:00:00&amp;#39; and &amp;#39;2016-05-04 23:59:59&amp;#39;&lt;/code&gt;就不会影响索引选择，因为前者f_id是整型，即使与后面的字符串型数字转换成double比较，依然能根据double确定f_id的值，索引依然有效。后者是因为符合第e条，只是右边的常量做了转换。&lt;/p&gt;
&lt;p&gt;开发人员可能都只要存在这么一个隐式类型转换的坑，但却又经常不注意，所以干脆无需记住那么多规则，该什么类型就与什么类型比较。&lt;/p&gt;
&lt;h3 id=&quot;2-2-隐式类型转换的安全问题&quot;&gt;&lt;a href=&quot;#2-2-隐式类型转换的安全问题&quot; class=&quot;headerlink&quot; title=&quot;2.2 隐式类型转换的安全问题&quot;&gt;&lt;/a&gt;2.2 隐式类型转换的安全问题&lt;/h3&gt;&lt;p&gt;implicit type conversion 不仅可能引起性能问题，还有可能产生安全问题。&lt;br&gt;&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; desc t_account;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------+-------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Field     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Type        &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Null &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Key &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Default &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Extra          &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------+-------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; fid       &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; int(11)     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NO   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; PRI &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; auto_increment &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; fname     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; varchar(20) &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; YES  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; fpassword &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; varchar(50) &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; YES  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----------+-------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; from t_account;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+-----------+-------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; fid &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; fname     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; fpassword   &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+-----------+-------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt;   1 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; xiaoming  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; p_xiaoming  &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt;   2 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; xiaoming1 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; p_xiaoming1 &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+-----------+-------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;假如应用前端没有WAF防护，那么下面的sql很容易注入：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; from t_account where fname=&#39;A&#39; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fname传入  A&#39; OR 1=&#39;1  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; from t_account where fname=&#39;A&#39; OR 1=&#39;1&#39;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;攻击者更聪明一点： fname传入 &lt;code&gt;A&amp;#39;+&amp;#39;B&lt;/code&gt;  ，fpassword传入 &lt;code&gt;ccc&amp;#39;+0&lt;/code&gt; ：&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select * from t_account where fname=&#39;A&#39;+&#39;B&#39; and fpassword=&#39;ccc&#39;+0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+-----------+-------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| fid | fname     | fpassword   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+-----------+-------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   1 | xiaoming  | p&lt;span class=&quot;emphasis&quot;&gt;_xiaoming  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   2 | xiaoming1 | p_&lt;/span&gt;xiaoming1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;+-----+&lt;/span&gt;-----------&lt;span class=&quot;code&quot;&gt;+-------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set, 7 warnings (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://yq.aliyun.com/articles/39477&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL隐式转化整理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.itpub.net/22418990/viewspace-1302080/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WHRER条件里的数据类型必须和字段数据类型一致&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vagosec.org/2013/04/mysql-implicit-type-conversion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Implicit type conversion in MySQL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;原文链接地址：&lt;a href=&quot;http://seanlook.com/2016/05/05/mysql-type-conversion/&quot;&gt;http://seanlook.com/2016/05/05/mysql-type-conversion/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-隐式类型转换实例&quot;&gt;&lt;a href=&quot;#1-隐式类型转换实例&quot; class=&quot;headerlink&quot; title=&quot;1. 隐式类型转换实例&quot;&gt;&lt;/a&gt;1. 隐式类型转换实例&lt;/h2&gt;&lt;p&gt;今天生产库上突然出现MySQL线程数告警，IOPS很高，实例会话里面出现许多类似下面的sql：(修改了相关字段和值)&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SELECT f_col3_id,f_qq1_id FROM d_dbname.t_tb1 WHERE f_col1_id=&lt;span class=&quot;number&quot;&gt;1226391&lt;/span&gt; and f_col2_id=&lt;span class=&quot;number&quot;&gt;1244378&lt;/span&gt; and &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f_qq1_id in (&lt;span class=&quot;number&quot;&gt;12345,23456&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34567,45678&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;56789,67890&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;78901,89012&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;90123,901231&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;901232,901233&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用 explain 看了下扫描行数和索引选择情况： &lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt;explain SELECT f&lt;span class=&quot;emphasis&quot;&gt;_col3_&lt;/span&gt;id,f&lt;span class=&quot;emphasis&quot;&gt;_qq1_&lt;/span&gt;id FROM d&lt;span class=&quot;emphasis&quot;&gt;_dbname.t_&lt;/span&gt;tb1 WHERE f&lt;span class=&quot;emphasis&quot;&gt;_col1_&lt;/span&gt;id=1226391 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;and f_col2_id=1244378 and f_qq1_id in (12345,23456,34567,45678,56789,67890,78901,89012,90123,901231,901232,901233);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+---------------+---------+--------+--------------------------------+---------------+------------+--------+--------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| id   | select_type   | table   | type   | possible_keys                  | key           | key_len    | ref    | rows   | Extra                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+---------------+---------+--------+--------------------------------+---------------+------------+--------+--------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| 1    | SIMPLE        | t_tb1   | ref    | uid_type_frid,idx_corpid_qq1id | uid_type_frid | 8          | const  | 1386   | Using index condition; Using where |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+---------------+---------+--------+--------------------------------+---------------+------------+--------+--------+------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;共返回 1 行记录,花费 11.52 ms.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;t_tb1 表上有个索引&lt;code&gt;uid_type_frid(f_col2_id,f_type)&lt;/code&gt;、&lt;code&gt;idx_corp_id_qq1id(f_col1_id,f_qq1_id)&lt;/code&gt;，而且如果选择后者时，f_qq1_id的过滤效果应该很佳，但却选择了前者。当使用 hint &lt;code&gt;use index(idx_corp_id_qq1id)&lt;/code&gt;时：&lt;br&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://seanlook.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://seanlook.com/tags/mysql/"/>
    
      <category term="schema设计" scheme="http://seanlook.com/tags/schema%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数字类型int与tinyint、float与decimal如何选择</title>
    <link href="http://seanlook.com/2016/04/29/mysql-numeric-int-float/"/>
    <id>http://seanlook.com/2016/04/29/mysql-numeric-int-float/</id>
    <published>2016-04-29T08:32:49.000Z</published>
    <updated>2016-04-29T08:32:49.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在准备给开发做一个mysql数据库开发规范方面培训，一步一步来，结合在生产环境发现的数据库方面的问题，从几个常用的数据类型说起。&lt;/p&gt;
&lt;h2 id=&quot;int、tinyint与bigint&quot;&gt;&lt;a href=&quot;#int、tinyint与bigint&quot; class=&quot;headerlink&quot; title=&quot;int、tinyint与bigint&quot;&gt;&lt;/a&gt;int、tinyint与bigint&lt;/h2&gt;&lt;p&gt;它们都是（精确）整型数据类型，但是占用字节数和表达的范围不同。首先没有这个表就说不过去了：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Storage&lt;/th&gt;
&lt;th&gt;Minimum Value&lt;/th&gt;
&lt;th&gt;Maximum Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;(Bytes)&lt;/td&gt;
&lt;td&gt;(Signed/Unsigned)&lt;/td&gt;
&lt;td&gt;(Signed/Unsigned)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TINYINT&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-128&lt;/td&gt;
&lt;td&gt;127&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SMALLINT&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-32768&lt;/td&gt;
&lt;td&gt;32767&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;65535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMINT&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-8388608&lt;/td&gt;
&lt;td&gt;8388607&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;16777215&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INT&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;-2147483648&lt;/td&gt;
&lt;td&gt;2147483647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;4294967295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BIGINT&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;-9223372036854775808&lt;/td&gt;
&lt;td&gt;9223372036854775807&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;18446744073709551615&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;只需要知道对应类型占多少字节就能推算出范围了，比如int占 4 bytes,即4*8=32bits，大约10位数字，也能理解为什么int默认显示位数是11。&lt;/p&gt;
&lt;p&gt;遇到比较多的是tinyint和bigint，tinyint一般用于存放status,type这种数值小的数据，不够用时可能会用smallint。bigint一般用于自增主键。&lt;/p&gt;
&lt;p&gt;为了避免数据库被过度设计，布尔、枚举类型也采用tinyint。&lt;/p&gt;
&lt;p&gt;还有一点也是经常被提到的关于 int(M) 中M的理解，int型数据无论是int(4)还是int(11)，都已经占用了 4 bytes 存储空间，M表示的只是显示宽度(display width, max value 255)，并不是定义int的长度。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; CREATE TABLE `tc_integer` (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `f_id` bigint(20) PRIMARY KEY AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `f_type` tinyint,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `f_flag` tinyint(1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `f_num` smallint(5) unsigned ZEROFILL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) ENGINE=InnoDB DEFAULT CHARSET=utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; desc tc_integer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----------------+-------------------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Field          &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Type                          &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Null &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Key &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Default &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Extra          &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----------------+-------------------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; f_id           &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; bigint(20)                    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NO   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; PRI &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; auto_increment &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; f_type         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; tinyint(4)                    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; YES  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; f_flag         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; tinyint(1)                    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; YES  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; f_num          &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; smallint(5) unsigned zerofill &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; YES  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----------------+-------------------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 rows in set (0.01 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;插入几条数据看一下：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_integer values(1, 1, 1, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected (0.02 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_integer values(9223372036854775808, 127, 127, 65535);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected, 1 warning (0.01 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show warnings;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Level   | Code | Message                                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Warning | 1264 | Out of range value for column &#39;f_id&#39; at row 1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select i.*, length(i.f_flag) as len_flag from tc_integer i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------------------+--------------+---------------+----------------+----------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| f_id                | f_type       | f_flag        | f_num          | len_flag |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------------------+--------------+---------------+----------------+----------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                   1 |            1 |             1 |          00001 |        1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| 9223372036854775807 |          127 |           127 |          65535 |        3 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------------------+--------------+---------------+----------------+----------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select * from tc_integer where f_num=&#39; 01&#39; and f_num=1 and f_num=f_flag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+--------------+---------------+----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| f_id | f_type       | f_flag        | f_num          |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+--------------+---------------+----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;|    1 |            1 |             1 |          00001 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------+--------------+---------------+----------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的实验说明了几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;f_id列插入比最大值还大的数，出现warnings，并且最终的值自动变成 9223372036854775807 。这个坑曾经在迁移到阿里RDS时遇到过，他们的迁移工具是java写的，结果我们的主键值大于java INTEGER里面的最大限制，导致 duplicate key问题。&lt;/li&gt;
&lt;li&gt;f_flag的显示宽度为1，但并不影响更多位数的显示。也证实了tinyint(1)并不像char(1)那样限制存储长度&lt;/li&gt;
&lt;li&gt;f_num定义成无符号的zerofill类型，能存储的最大数值是65535，而signed才是32767。（当列上使用zerofill时，unsigned会自动加上）&lt;/li&gt;
&lt;li&gt;zerofill的作用是在显示检索结果的时候，左边用0补齐到display width，实际存储时不补0的，仅作为返回结果meta data的一部分。查询的条件值忽略0和空格&lt;/li&gt;
&lt;li&gt;length()在numeric类型中作用于char_length()一样，因为字节数已经固定了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;zerofill的使用可能会在复杂join时因为了解不够深入而带来问题，所以最终的结论也很简单：除非极端的特殊需要，尽量不用zerofill，建表时这类int无需指定 (11) 这样的显示宽度。&lt;/p&gt;
&lt;h2 id=&quot;float与decimal&quot;&gt;&lt;a href=&quot;#float与decimal&quot; class=&quot;headerlink&quot; title=&quot;float与decimal&quot;&gt;&lt;/a&gt;float与decimal&lt;/h2&gt;&lt;p&gt;MySQL使用&lt;code&gt;DECIMAL&lt;/code&gt;类型去存储对精度要求比较高的数值，比如金额，也叫定点数，decimal在mysql内存是以字符串存储的。声明语法是&lt;code&gt;DECIMAL(M,D)&lt;/code&gt;，占用字节 M+2 bytes。M是数字最大位数（精度precision），范围1-65；D是小数点右侧数字个数（标度scale），范围0-30，但不得超过M。&lt;/p&gt;
&lt;p&gt;比如定义&lt;code&gt;DECIMAL(7,3)&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能存的数值范围是 -9999.999 ~ 9999.999，占用9个字节&lt;/li&gt;
&lt;li&gt;123.12 -&amp;gt; 123.120，因为小数点后未满3位，补0&lt;/li&gt;
&lt;li&gt;123.1245 -&amp;gt; 123.125，小数点只留3位，多余的自动四舍五入截断&lt;/li&gt;
&lt;li&gt;12345.12 -&amp;gt; 保存失败，因为小数点未满3位，补0变成12345.120，超过了7位。严格模式下报错，非严格模式存成9999.999&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL使用&lt;code&gt;FLOAT&lt;/code&gt;和&lt;code&gt;DOUBLE&lt;/code&gt;来表示近似数值类型，这是因为十进制0.1在电脑里用二进制是无法精确表示的，&lt;a href=&quot;https://segmentfault.com/a/1190000004112565&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;只能尽可能的接近&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;单精度浮点数float占4字节，float标准语法允许通过&lt;code&gt;FLOAT(M)&lt;/code&gt;的形式指定精度，但是这个精度值M只是决定存储大小： 0-23与默认不指定效果相同，24-53就变成双精度的&lt;code&gt;DOUBLE&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;float还有非MySQL自己实现的&lt;em&gt;非标准&lt;/em&gt;语法&lt;code&gt;FLOAT(M,D)&lt;/code&gt;，代表最多存储M个数字长度，其中小数点后数字个数为D。效果与 DECIMAL(M,D)很相似。&lt;/p&gt;
&lt;p&gt;double 和 float 的区别是double精度高，有效数字16位（float精度7位）。但double消耗内存是float的两倍，占8字节，double的运算速度比float慢得多。&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;msyql&amp;gt; create table tc&lt;span class=&quot;emphasis&quot;&gt;_float(fid int primary key auto_&lt;/span&gt;increment,f&lt;span class=&quot;emphasis&quot;&gt;_float float, f_&lt;/span&gt;float10 float(10), f&lt;span class=&quot;emphasis&quot;&gt;_float25 float(25), f_&lt;/span&gt;float7&lt;span class=&quot;emphasis&quot;&gt;_3 float(7,3), f_&lt;/span&gt;float9&lt;span class=&quot;emphasis&quot;&gt;_2 float(9,2), f_&lt;/span&gt;float30&lt;span class=&quot;emphasis&quot;&gt;_3 float(30,3), f_&lt;/span&gt;decimal9&lt;span class=&quot;emphasis&quot;&gt;_2 decimal(9,2));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_float(f_&lt;/span&gt;float,f&lt;span class=&quot;emphasis&quot;&gt;_float10,f_&lt;/span&gt;float25) values(123456,123456,123456);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_float(f_&lt;/span&gt;float,f&lt;span class=&quot;emphasis&quot;&gt;_float10,f_&lt;/span&gt;float25) values(1234567.89,12345.67,1234567.89);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select * from tc_float;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+----------+-----------+------------+------------+------------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| fid | f_float  | f_float10 | f_float25  | f_float7_3 | f_float9_2 | f_float30_3 | f_decimal9_2 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+----------+-----------+------------+------------+------------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   1 |   123456 |    123456 |     123456 | NULL       | NULL       | NULL        | NULL         |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;|   2 |  1234570 |   12345.7 | 1234567.89 | NULL       | NULL       | NULL        | NULL         |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+----------+-----------+------------+------------+------------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;可以看到float与float(10)是没区别的，float默认能精确到6位有效数字&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_float(f_&lt;/span&gt;float9&lt;span class=&quot;emphasis&quot;&gt;_2,f_&lt;/span&gt;decimal9&lt;span class=&quot;emphasis&quot;&gt;_2) values(123456.78,123456.78);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc_&lt;/span&gt;float(f&lt;span class=&quot;emphasis&quot;&gt;_float9_&lt;/span&gt;2,f&lt;span class=&quot;emphasis&quot;&gt;_decimal9_&lt;/span&gt;2) values(1234567.1,1234567.125);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 row affected, 1 warning (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show warnings;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------+---------------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Level | Code | Message                                           |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------+---------------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Note  | 1265 | Data truncated for column &#39;f_decimal9_2&#39; at row 1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------+---------------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select * from tc_float;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+----------+-----------+------------+------------+------------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| fid | f_float  | f_float10 | f_float25  | f_float7_3 | f_float9_2 | f_float30_3 | f_decimal9_2 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+----------+-----------+------------+------------+------------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|   6 | NULL     | NULL      | NULL       | NULL       |  123456.78 | NULL        |    123456.78 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;|   9 | NULL     | NULL      | NULL       | NULL       | 1234567.12 | NULL        |   1234567.13 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-----+----------+-----------+------------+------------+------------+-------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_float(f_&lt;/span&gt;float7&lt;span class=&quot;emphasis&quot;&gt;_3) values(12345.1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR 1264 (22003): Out of range value for column &#39;f_&lt;/span&gt;float7&lt;span class=&quot;emphasis&quot;&gt;_3&#39; at row 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;float(9,2)与decimal(9,2)是很像的，并没有前面提到24位一下6位有效数字的限制&lt;/li&gt;
&lt;li&gt;他们俩之间的差别就在精度上，f_float9_2本应该是 1234567.10，结果小数点变成 .12 。f_decimal9_2因为标度为2，所以 .125 四舍五入成 .13&lt;/li&gt;
&lt;li&gt;将 12345.1 插入f_float7_3列，因为转成标度3时 12345.100，整个位数大于7，所以 out of range 了 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外在编程中应尽量避免做浮点数的比较，否则可能会导致一些潜在的问题。&lt;/p&gt;
&lt;p&gt;坚决不允许使用float去存money，使用decimal更加稳妥，但使用decimal做除法依旧会产生浮点型，所以特殊情况请考虑使用整型，货币单位使用 分 ，或者除法在最后进行。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.path8.net/tn/archives/951&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL各数据类型的区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/out-of-range-and-overflow.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL manual Out-of-Range and Overflow Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.intechgrity.com/mysql-datatypes-working-with-fraction-and-decimal-dec/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL FLOAT vs DEC: working with fraction and decimal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.noelherrick.com/blog/always-use-decimal-for-money&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Never use floats for money&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2016/04/29/mysql-numeric-int-float/&quot;&gt;http://seanlook.com/2016/04/29/mysql-numeric-int-float/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在准备给开发做一个mysql数据库开发规范方面培训，一步一步来，结合在生产环境发现的数据库方面的问题，从几个常用的数据类型说起。&lt;/p&gt;
&lt;h2 id=&quot;int、tinyint与bigint&quot;&gt;&lt;a href=&quot;#int、tinyint与bigint&quot; class=&quot;headerlink&quot; title=&quot;int、tinyint与bigint&quot;&gt;&lt;/a&gt;int、tinyint与bigint&lt;/h2&gt;&lt;p&gt;它们都是（精确）整型数据类型，但是占用字节数和表达的范围不同。首先没有这个表就说不过去了：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Storage&lt;/th&gt;
&lt;th&gt;Minimum Value&lt;/th&gt;
&lt;th&gt;Maximum Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;(Bytes)&lt;/td&gt;
&lt;td&gt;(Signed/Unsigned)&lt;/td&gt;
&lt;td&gt;(Signed/Unsigned)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TINYINT&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;-128&lt;/td&gt;
&lt;td&gt;127&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;255&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SMALLINT&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;-32768&lt;/td&gt;
&lt;td&gt;32767&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;65535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MEDIUMINT&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;-8388608&lt;/td&gt;
&lt;td&gt;8388607&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;16777215&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;INT&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;-2147483648&lt;/td&gt;
&lt;td&gt;2147483647&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;4294967295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BIGINT&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;-9223372036854775808&lt;/td&gt;
&lt;td&gt;9223372036854775807&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;18446744073709551615&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;只需要知道对应类型占多少字节就能推算出范围了，比如int占 4 bytes,即4*8=32bits，大约10位数字，也能理解为什么int默认显示位数是11。&lt;/p&gt;
&lt;p&gt;遇到比较多的是tinyint和bigint，tinyint一般用于存放status,type这种数值小的数据，不够用时可能会用smallint。bigint一般用于自增主键。&lt;/p&gt;
&lt;p&gt;为了避免数据库被过度设计，布尔、枚举类型也采用tinyint。&lt;/p&gt;
&lt;p&gt;还有一点也是经常被提到的关于 int(M) 中M的理解，int型数据无论是int(4)还是int(11)，都已经占用了 4 bytes 存储空间，M表示的只是显示宽度(display width, max value 255)，并不是定义int的长度。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; CREATE TABLE `tc_integer` (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `f_id` bigint(20) PRIMARY KEY AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `f_type` tinyint,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `f_flag` tinyint(1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `f_num` smallint(5) unsigned ZEROFILL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) ENGINE=InnoDB DEFAULT CHARSET=utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; desc tc_integer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----------------+-------------------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Field          &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Type                          &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Null &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Key &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Default &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Extra          &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----------------+-------------------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; f_id           &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; bigint(20)                    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NO   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; PRI &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; auto_increment &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; f_type         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; tinyint(4)                    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; YES  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; f_flag         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; tinyint(1)                    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; YES  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; f_num          &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; smallint(5) unsigned zerofill &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; YES  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----------------+-------------------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 rows in set (0.01 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;插入几条数据看一下：&lt;br&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://seanlook.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://seanlook.com/tags/mysql/"/>
    
      <category term="schema设计" scheme="http://seanlook.com/tags/schema%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MySQL字符数据类型char与varchar的区别</title>
    <link href="http://seanlook.com/2016/04/28/mysql-char-varchar-set/"/>
    <id>http://seanlook.com/2016/04/28/mysql-char-varchar-set/</id>
    <published>2016-04-28T08:32:49.000Z</published>
    <updated>2016-04-28T08:32:49.000Z</updated>
    
    <content type="html">&lt;p&gt;数据类型差不多是接触mysql一开始就了解的内容，最近遇到几个现象如varchar自动转mediumtext，blob存储性能的问题，不得不回头明确一下关于MySQL常用数据类型的选择。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/char.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mysql手册这里&lt;/a&gt; 已经讲的很清楚了。它们都是定义字符串型字段时常用的类型，但它们存储和检索的方式有不同，最大长度和尾部的空格是否保留也有差别。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;char&lt;/code&gt;类型是使用固定长度空间进行存储，范围0-255。比如&lt;code&gt;CHAR(30)&lt;/code&gt;能放30个字节，存放abcd时，尾部会以空格补齐，实际占用空间 30bytes 。检索它的时候尾部空格会被去除。&lt;/p&gt;
&lt;p&gt;char善于存储经常改变的值，或者长度相对固定的值，比如type、ip地址或md5之类的数据，不容易产生碎片。关于它的效率可以参考&lt;a href=&quot;http://bbs.chinaunix.net/thread-1696053-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;varchar&lt;/code&gt;类型保存可变长度字符串，范围0-65535（但受到单行最大64kb的限制）。比如用&lt;code&gt;varchar(30)&lt;/code&gt;去存放abcd，实际使用5个字节，因为还需要使用额外1个字节来标识字串长度（0-255使用1个字节，超过255需要2个字节）。&lt;/p&gt;
&lt;p&gt;varchar善于存储值的长短不一的列，也是用的最多的一种类型，节省磁盘空间。update时varchar列时，如果新数据比原数据大，数据库需要重新开辟空间，这一点会有性能略有损耗，但innodb引擎下查询效率比char高一点。这也是innodb官方推荐的类型。&lt;/p&gt;
&lt;p&gt;如果存储时真实长度超过了char或者varchar定义的最大长度呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在SQL严格模式下，无论char还是varchar，如果尾部要被截断的是非空格，会提示错误，即插入失败&lt;/li&gt;
&lt;li&gt;在SQL非严格模式下，无论char还是varchar，如果尾部要被截断的是非空格，会提示warning，但可以成功&lt;/li&gt;
&lt;li&gt;如果尾部要被截断的是空格，无论SQL所处模式，varchar都可以插入成功但提示warning；char也可以插入成功，并且无任何提示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里特意提到SQL的严格模式，是因为在工作中也遇到过一些坑，参考&lt;a href=&quot;&quot;&gt;MySQL的sql_mode严格模式注意点&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;贴上官方的一个表格：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;CHAR(4)&lt;/th&gt;
&lt;th&gt;Storage Required&lt;/th&gt;
&lt;th&gt;VARCHAR(4)&lt;/th&gt;
&lt;th&gt;Storage Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‘’&lt;/td&gt;
&lt;td&gt;‘    ‘&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;‘’&lt;/td&gt;
&lt;td&gt;1 byte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘ab’&lt;/td&gt;
&lt;td&gt;‘ab  ‘&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;‘ab’&lt;/td&gt;
&lt;td&gt;3 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;5 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘abcdefgh’&lt;/td&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;5 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外，mysql字段值比较时默认是不区分大小写的，这是由于他们的校对规则（一般是 utf8_general_ci）决定的，按字符比较，所以查询时 值尾部 的空格也是被忽略的，除非建表时对列指定 &lt;code&gt;BINARY&lt;/code&gt; （校对字符集变成utf8_bin）或者&lt;code&gt;select * from vc where binary v=&amp;#39;ab  &amp;#39;;&lt;/code&gt;，就会按字节比较，即比较时区分大小写和尾部空格。&lt;/p&gt;
&lt;p&gt;需要注意的是，使用varchar不能因为长度可变就随意分大空间，比如90个字节能放够的列定义成varchar(200)，因为开辟内存时是以200字节进行的，遇到需要filesort或tmp table作业可能会带来不利影响。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;最后研究一下字符集对存储长度影响，以 &lt;code&gt;create table tc_utf8(c1 int primary key auto_increment, c2 char(30), c3 varchar(N)) charset=utf8;&lt;/code&gt; 为例：&lt;/p&gt;
&lt;p&gt;字符集为utf8，于是中文每个字符占3个字节，英文还是1个字节，所以N最大为 (65535-1-2-4-30&lt;em&gt;3)/3 = 21812，即最多能存放21812个英文、数字、汉字。其中65535是单行最大限制，减1是NULL标识位，减2的是头部的2个字节标识长度，减30&lt;/em&gt;3的原因是char(30)占用90个字节，最后除以3还是因为utf8最长用3个字节表示一个字符。&lt;/p&gt;
&lt;p&gt;但有人会说，utf8的英文字符只需要1个字节表示，并不占用3个字节，在存ASCII字符的情况下N是不是可以更大呢。答案是否定的，因为定义表的时候mysql事先并不知道c3要存的是英文还在中文，只能以最大来计。mysql也是以这种方式来确保行最大65535bytes限制：数据行只要出现一个ascii字符（如英文字母、数字），就永远达不到65535，数据行全中文则刚好满。&lt;/p&gt;
&lt;p&gt;还有一种特殊情况：&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show variables like &quot;char%&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------------+----------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Variable_name            | Value                      |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------------+----------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| character&lt;span class=&quot;emphasis&quot;&gt;_set_&lt;/span&gt;client     | utf8                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| character&lt;span class=&quot;emphasis&quot;&gt;_set_&lt;/span&gt;connection | utf8                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| character&lt;span class=&quot;emphasis&quot;&gt;_set_&lt;/span&gt;database   | utf8                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| character&lt;span class=&quot;emphasis&quot;&gt;_set_&lt;/span&gt;filesystem | binary                     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| character&lt;span class=&quot;emphasis&quot;&gt;_set_&lt;/span&gt;results    | utf8                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| character&lt;span class=&quot;emphasis&quot;&gt;_set_&lt;/span&gt;server     | latin1                     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| character&lt;span class=&quot;emphasis&quot;&gt;_set_&lt;/span&gt;system     | utf8                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| character_sets_dir       | /usr/share/mysql/charsets/ |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------------------+----------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8 rows in set (0.12 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; select @@sql_mode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| @@sql_mode             |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| NO_ENGINE_SUBSTITUTION |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 rows in set (0.13 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; create table tc&lt;span class=&quot;emphasis&quot;&gt;_utf8_&lt;/span&gt;21812(c1 int primary key auto&lt;span class=&quot;emphasis&quot;&gt;_increment, c2 char(30), c3 varchar(21812)) charset=utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected (0.10 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;mysql&amp;gt; create table tc&lt;span class=&quot;emphasis&quot;&gt;_utf8_&lt;/span&gt;21813(c1 int primary key auto&lt;span class=&quot;emphasis&quot;&gt;_increment, c2 char(30), c3 varchar(21845)) charset=utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;mysql&amp;gt; create table tc&lt;span class=&quot;emphasis&quot;&gt;_utf8_&lt;/span&gt;21846(c1 int primary key auto&lt;span class=&quot;emphasis&quot;&gt;_increment, c2 char(30), c3 varchar(21846)) charset=utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 0 rows affected, 1 warnings (0.10 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show warnings;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------+---------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Level | Code | Message                                     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------+---------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Note  | 1246 | Converting column &#39;c3&#39; from VARCHAR to TEXT |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------+---------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 rows in set (0.14 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即在非严格模式下，因为N=21813 &amp;gt; 21812，所以报 Row size too large 错误。但N=21846 &amp;gt; (65535/3)时，只是出现warnings，varchar自动变成了mediumtext 类型。&lt;/p&gt;
&lt;p&gt;细心的朋友可能注意到上面开始我看了一下字符集 &lt;code&gt;show variabels like &amp;quot;char%&amp;quot;;&lt;/code&gt;，因为接下来要说明另外一个问题：客户端字符集与database不一样的情况。&lt;/p&gt;
&lt;p&gt;我们回到 N&amp;lt;=21812 的正常情况：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`tc_utf8`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`c1`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`c2`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`c3`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`c1`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;插入一些数据：&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; set names utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_utf8(c2,c3) values(&#39;en_&lt;/span&gt;30&#39;,repeat(&lt;span class=&quot;emphasis&quot;&gt;&#39;a&#39;&lt;/span&gt;,30));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 rows affected (17.87 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_utf8(c2,c3) values(&#39;en_&lt;/span&gt;31&#39;,repeat(&lt;span class=&quot;emphasis&quot;&gt;&#39;b&#39;&lt;/span&gt;,31));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 rows affected, 1 warnings (0.10 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show warnings;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Level   | Code | Message                                 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Warning | 1265 | Data truncated for column &#39;c3&#39; at row 1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 rows in set (0.14 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_utf8(c2,c3) values(&#39;zh_&lt;/span&gt;30&#39;,repeat(&lt;span class=&quot;emphasis&quot;&gt;&#39;中&#39;&lt;/span&gt;,30));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 rows affected (0.18 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_utf8(c2,c3) values(&#39;zh_&lt;/span&gt;31&#39;,repeat(&lt;span class=&quot;emphasis&quot;&gt;&#39;文&#39;&lt;/span&gt;,31));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 rows affected, 1 warnings (0.09 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;意料之中，汉字同样被截断&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;ysql&amp;gt; select c2,c3,length(c3),char_length(c3) from tc_utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------------+-----------------+------------------------------------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| c2    | length(c3) | char_length(c3) | c3                                                                     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------------+-----------------+------------------------------------------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| en&lt;span class=&quot;emphasis&quot;&gt;_30 |         30 |              30 | aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa                                         |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| en_&lt;/span&gt;31 |         30 |              30 | bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb                                         |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| zh&lt;span class=&quot;emphasis&quot;&gt;_30 |         90 |              30 | 中中中中中中中中中中中中中中中中中中中中中中中中中中中中中中 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| zh_&lt;/span&gt;31 |         90 |              30 | 文文文文文文文文文文文文文文文文文文文文文文文文文文文文文文 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;+-------+&lt;/span&gt;------------&lt;span class=&quot;code&quot;&gt;+-----------------+&lt;/span&gt;------------------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的en_30代表insert的时候存入&lt;em&gt;30&lt;/em&gt;个&lt;em&gt;英文&lt;/em&gt;字符。可以看到30个a占用30个字节，30个汉字占用90个字节，大于30的会被截断，证实了文章一开头的说法。&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; set names latin1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_utf8(c2,c3) values(&#39;zh_&lt;/span&gt;30&lt;span class=&quot;emphasis&quot;&gt;_latin1&#39;,repeat(&#39;中&#39;,30));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 rows affected, 1 warnings (0.10 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;section&quot;&gt;mysql&amp;gt; show warnings;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Level   | Code | Message                                 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;| Warning | 1265 | Data truncated for column &#39;c3&#39; at row 1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+---------+------+-----------------------------------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 rows in set (0.14 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_utf8(c2,c3) values(&#39;zh_&lt;/span&gt;10&lt;span class=&quot;emphasis&quot;&gt;_latin1&#39;,repeat(&#39;中&#39;,10));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 rows affected (0.10 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_utf8(c2,c3) values(&#39;zh_&lt;/span&gt;10&lt;span class=&quot;emphasis&quot;&gt;_latin1&#39;,repeat(&#39;文&#39;,10));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 rows affected (0.11 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;mysql&amp;gt; insert into tc&lt;span class=&quot;emphasis&quot;&gt;_utf8(c2,c3) values(&#39;zh_&lt;/span&gt;11&lt;span class=&quot;emphasis&quot;&gt;_latin1&#39;,repeat(&#39;文&#39;,11));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Query OK, 1 rows affected, 1 warnings (0.12 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;截断&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的实验显示，db table是utf8，但客户端连接时使用latin1，在非严格模式下 varchar(30) &lt;strong&gt;只能存10&lt;/strong&gt;个汉字，多余的尾部被截断了&lt;/p&gt;
&lt;p&gt;我们来看一下占用字节的情况：（2,3行的乱码是意料之中的）&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; select c1,c2,c3,length(c3),char_length(c3) from tc_utf8;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+--------------+--------------------------------+------------+-----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; c1 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; c2           &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; c3                             &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; length(c3) &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; char_length(c3) &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+--------------+--------------------------------+------------+-----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 1  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; en_30        &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30              &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 2  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; en_31        &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30              &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 3  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; zh_30        &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; ?????????????????????????????? &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 90         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30              &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 4  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; zh_31        &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; ?????????????????????????????? &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 90         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30              &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 5  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; zh_30_latin1 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 中中中中中中中中中中 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 60         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30              &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 6  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; zh_10_latin1 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 中中中中中中中中中中 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 60         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30              &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 7  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; zh_10_latin1 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 文文文文文文文文文文 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 80         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30              &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; 9  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; zh_11_latin1 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 文文文文文文文文文文 &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 80         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 30              &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+----+--------------+--------------------------------+------------+-----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8 rows in set (0.14 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看到char_length函数算出的中、英文字符个数都是30，但一个“中”占6字节，一个“文”占8字节，是不是很诧异，这中间有数次的编码转换过程，有兴趣 可以参考 &lt;a href=&quot;http://mysql.rjweb.org/doc.php/charcoll&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mysql.rjweb.org/doc.php/charcoll&lt;/a&gt; ，是可以模拟出来的。&lt;/p&gt;
&lt;p&gt;在严格模式下就没这么复杂了，所以尽量使用 STRICT_TRANS_TABLES ，避免意外的情况带入生产环境。早期设计的时候就要保持客户端与数据库字符集一致。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.7/en/char.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL manual:The CHAR and VARCHAR Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://get.ftqq.com/723.get&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL字符集指南–进阶篇V0.7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mysql.rjweb.org/doc.php/charcoll&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL字符集与校对规则&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mysqltutorial.org/mysql-string-length/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL String Length&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sunny90.com/a/database/2014/0819/24.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://sunny90.com/a/database/2014/0819/24.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2016/04/28/mysql-char-varchar-set/&quot;&gt;http://seanlook.com/2016/04/28/mysql-char-varchar-set/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;数据类型差不多是接触mysql一开始就了解的内容，最近遇到几个现象如varchar自动转mediumtext，blob存储性能的问题，不得不回头明确一下关于MySQL常用数据类型的选择。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/char.html&quot;&gt;mysql手册这里&lt;/a&gt; 已经讲的很清楚了。它们都是定义字符串型字段时常用的类型，但它们存储和检索的方式有不同，最大长度和尾部的空格是否保留也有差别。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;char&lt;/code&gt;类型是使用固定长度空间进行存储，范围0-255。比如&lt;code&gt;CHAR(30)&lt;/code&gt;能放30个字节，存放abcd时，尾部会以空格补齐，实际占用空间 30bytes 。检索它的时候尾部空格会被去除。&lt;/p&gt;
&lt;p&gt;char善于存储经常改变的值，或者长度相对固定的值，比如type、ip地址或md5之类的数据，不容易产生碎片。关于它的效率可以参考&lt;a href=&quot;http://bbs.chinaunix.net/thread-1696053-1-1.html&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;varchar&lt;/code&gt;类型保存可变长度字符串，范围0-65535（但受到单行最大64kb的限制）。比如用&lt;code&gt;varchar(30)&lt;/code&gt;去存放abcd，实际使用5个字节，因为还需要使用额外1个字节来标识字串长度（0-255使用1个字节，超过255需要2个字节）。&lt;/p&gt;
&lt;p&gt;varchar善于存储值的长短不一的列，也是用的最多的一种类型，节省磁盘空间。update时varchar列时，如果新数据比原数据大，数据库需要重新开辟空间，这一点会有性能略有损耗，但innodb引擎下查询效率比char高一点。这也是innodb官方推荐的类型。&lt;/p&gt;
&lt;p&gt;如果存储时真实长度超过了char或者varchar定义的最大长度呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在SQL严格模式下，无论char还是varchar，如果尾部要被截断的是非空格，会提示错误，即插入失败&lt;/li&gt;
&lt;li&gt;在SQL非严格模式下，无论char还是varchar，如果尾部要被截断的是非空格，会提示warning，但可以成功&lt;/li&gt;
&lt;li&gt;如果尾部要被截断的是空格，无论SQL所处模式，varchar都可以插入成功但提示warning；char也可以插入成功，并且无任何提示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里特意提到SQL的严格模式，是因为在工作中也遇到过一些坑，参考&lt;a href=&quot;&quot;&gt;MySQL的sql_mode严格模式注意点&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;贴上官方的一个表格：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;CHAR(4)&lt;/th&gt;
&lt;th&gt;Storage Required&lt;/th&gt;
&lt;th&gt;VARCHAR(4)&lt;/th&gt;
&lt;th&gt;Storage Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;‘’&lt;/td&gt;
&lt;td&gt;‘    ‘&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;‘’&lt;/td&gt;
&lt;td&gt;1 byte&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘ab’&lt;/td&gt;
&lt;td&gt;‘ab  ‘&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;‘ab’&lt;/td&gt;
&lt;td&gt;3 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;5 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;‘abcdefgh’&lt;/td&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;4 bytes&lt;/td&gt;
&lt;td&gt;‘abcd’&lt;/td&gt;
&lt;td&gt;5 bytes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;另外，mysql字段值比较时默认是不区分大小写的，这是由于他们的校对规则（一般是 utf8_general_ci）决定的，按字符比较，所以查询时 值尾部 的空格也是被忽略的，除非建表时对列指定 &lt;code&gt;BINARY&lt;/code&gt; （校对字符集变成utf8_bin）或者&lt;code&gt;select * from vc where binary v=&amp;#39;ab  &amp;#39;;&lt;/code&gt;，就会按字节比较，即比较时区分大小写和尾部空格。&lt;/p&gt;
&lt;p&gt;需要注意的是，使用varchar不能因为长度可变就随意分大空间，比如90个字节能放够的列定义成varchar(200)，因为开辟内存时是以200字节进行的，遇到需要filesort或tmp table作业可能会带来不利影响。&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://seanlook.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://seanlook.com/tags/mysql/"/>
    
      <category term="schema设计" scheme="http://seanlook.com/tags/schema%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>使用sysbench对mysql压力测试</title>
    <link href="http://seanlook.com/2016/03/28/mysql-sysbench/"/>
    <id>http://seanlook.com/2016/03/28/mysql-sysbench/</id>
    <published>2016-03-28T08:32:49.000Z</published>
    <updated>2016-04-04T08:32:49.000Z</updated>
    
    <content type="html">&lt;p&gt;sysbench是一个模块化的、跨平台、多线程基准测试工具，主要用于评估测试各种不同系统参数下的数据库负载情况。关于这个项目的详细介绍请看：&lt;a href=&quot;https://github.com/akopytov/sysbench&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/akopytov/sysbench&lt;/a&gt; 。&lt;br&gt;它主要包括以下几种方式的测试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cpu性能&lt;/li&gt;
&lt;li&gt;磁盘io性能&lt;/li&gt;
&lt;li&gt;调度程序性能&lt;/li&gt;
&lt;li&gt;内存分配及传输速度&lt;/li&gt;
&lt;li&gt;POSIX线程性能&lt;/li&gt;
&lt;li&gt;数据库性能(OLTP基准测试)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sysbench的数据库OLTP测试支持MySQL、PostgreSQL、Oracle，目前主要用于Linux操作系统，开源社区已经将sysbench移植到了Windows，并支持SQL Server的基准测试。&lt;/p&gt;
&lt;p&gt;废话不多说，开始。&lt;/p&gt;
&lt;h2 id=&quot;1-sysbench安装&quot;&gt;&lt;a href=&quot;#1-sysbench安装&quot; class=&quot;headerlink&quot; title=&quot;1. sysbench安装&quot;&gt;&lt;/a&gt;1. sysbench安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;mysql版本: mysql-community-server-5.6.29   &lt;/li&gt;
&lt;li&gt;OS: CentOS 6.7 X86_64&lt;/li&gt;
&lt;li&gt;sysbench 0.5相比0.4版本有一些变化，包括oltp测试结合了lua脚本，还多了一些隐藏选项，本文会涉及得到一部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前许多仓库里已编译好的二进制sysbench还是0.4.x版本，不过现在主流也还是github上的0.5，可以从 &lt;a href=&quot;http://www.lefred.be/node/154&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;下载0.5版本的rpm包直接安装，不过我选择自己编译，因为只有这个办法是通用的。&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 先安装编译依赖环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum install gcc gcc-c++ automake make  libtool mysql-community-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd &lt;span class=&quot;regexp&quot;&gt;/tmp &amp;amp;&amp;amp; git clone https:/&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/github.com/&lt;/span&gt;akopytov/sysbench.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd &lt;span class=&quot;regexp&quot;&gt;/tmp/&lt;/span&gt;sysbench &amp;amp;&amp;amp; ./autogen.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ .&lt;span class=&quot;regexp&quot;&gt;/configure --prefix=/&lt;/span&gt;usr&lt;span class=&quot;regexp&quot;&gt;/local/&lt;/span&gt;sysbench&lt;span class=&quot;number&quot;&gt;-0.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./make &amp;amp;&amp;amp; sudo make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 0.5版本需要oltp.lua测试脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 如果是rpm包方式安装的，在 /usr/share/doc/sysbench/tests/db/ 下可找到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd &lt;span class=&quot;regexp&quot;&gt;/usr/&lt;/span&gt;local&lt;span class=&quot;regexp&quot;&gt;/sysbench &amp;amp;&amp;amp; sudo mkdir -p share/&lt;/span&gt;tests/db&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cp &lt;span class=&quot;regexp&quot;&gt;/tmp/&lt;/span&gt;sysbench&lt;span class=&quot;regexp&quot;&gt;/sysbench/&lt;/span&gt;tests&lt;span class=&quot;regexp&quot;&gt;/db/&lt;/span&gt;*.lua share&lt;span class=&quot;regexp&quot;&gt;/tests/&lt;/span&gt;db/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ .&lt;span class=&quot;regexp&quot;&gt;/bin/&lt;/span&gt;sysbench --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sysbench &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要测试PostgreSQL、Oracle，则在configure时需要加上 –with-oracle 或者 –with-pgsql 参数&lt;/p&gt;
&lt;h2 id=&quot;2-使用sysbench对mysql压测&quot;&gt;&lt;a href=&quot;#2-使用sysbench对mysql压测&quot; class=&quot;headerlink&quot; title=&quot;2. 使用sysbench对mysql压测&quot;&gt;&lt;/a&gt;2. 使用sysbench对mysql压测&lt;/h2&gt;&lt;h3 id=&quot;2-1-只读示例&quot;&gt;&lt;a href=&quot;#2-1-只读示例&quot; class=&quot;headerlink&quot; title=&quot;2.1 只读示例&quot;&gt;&lt;/a&gt;2.1 只读示例&lt;/h3&gt;&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/bin/sysbench&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/share/tests/db/oltp&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;lua&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;host=10&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;port=8066&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;user=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;password=ecuser&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;db=dbtest1a&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;tables&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;count=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;size=500000&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;interval=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;type=uniform&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;init=on&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;requests=0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=nontrx&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;nontrx&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=select&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;only=on&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;trx=on&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;time=120&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;threads=12&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;prepare|run|cleanup&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;注意最后一行，一项测试开始前需要用&lt;code&gt;prepare&lt;/code&gt;来准备好表和数据，&lt;code&gt;run&lt;/code&gt;执行真正的压测，&lt;code&gt;cleanup&lt;/code&gt;用来清除数据和表。实际prepare的表结构：&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; desc dbtest1a.sbtest1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Field &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Type             &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Null &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Key &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Default &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Extra          &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; id    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; int(10) unsigned &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NO   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; PRI &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NULL    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; auto_increment &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; k     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; int(10) unsigned &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NO   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; MUL &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; 0       &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; c     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; char(120)        &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NO   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; pad   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; char(60)         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; NO   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;         &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------+------------------+------+-----+---------+----------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的测试命令代表的是：对mysql进行oltp基准测试，表数量10，每表行数约50w（几乎delete多少就会insert的多少），并且是非事务的只读测试，持续60s，并发线程数12。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要说明的选项：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mysql-db=dbtest1a&lt;/code&gt;：测试使用的目标数据库，这个库名要事先创建&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--oltp-tables-count=10&lt;/code&gt;：产生表的数量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--oltp-table-size=500000&lt;/code&gt;：每个表产生的记录行数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--oltp-dist-type=uniform&lt;/code&gt;：指定随机取样类型，可选值有 uniform(均匀分布), Gaussian(高斯分布), special(空间分布)。默认是special&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--oltp-read-only=off&lt;/code&gt;：表示不止产生只读SQL，也就是使用oltp.lua时会采用读写混合模式。默认 off，如果设置为on，则不会产生update,delete,insert的sql。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--oltp-test-mode=nontrx&lt;/code&gt;：执行模式，这里是非事务式的。可选值有simple,complex,nontrx。默认是complex&lt;ul&gt;
&lt;li&gt;simple：简单查询，SELECT c FROM sbtest WHERE id=N&lt;/li&gt;
&lt;li&gt;complex (advanced transactional)：事务模式在开始和结束事务之前加上begin和commit， 一个事务里可以有多个语句，如点查询、范围查询、排序查询、更新、删除、插入等，并且为了不破坏测试表的数据，该模式下一条记录删除后会在同一个事务里添加一条相同的记录。&lt;/li&gt;
&lt;li&gt;nontrx (non-transactional)：与simple相似，但是可以进行update/insert等操作，所以如果做连续的对比压测，你可能需要重新cleanup,prepare。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--oltp-skip-trx=[on|off]&lt;/code&gt;：省略begin/commit语句。默认是off&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--rand-init=on&lt;/code&gt;：是否随机初始化数据，如果不随机化那么初始好的数据每行内容除了主键不同外其他完全相同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--num-threads=12&lt;/code&gt;： 并发线程数，可以理解为模拟的客户端并发连接数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--report-interval=10&lt;/code&gt;：表示每10s输出一次测试进度报告&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max-requests=0&lt;/code&gt;：压力测试产生请求的总数，如果以下面的&lt;code&gt;max-time&lt;/code&gt;来记，这个值设为0&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--max-time=120&lt;/code&gt;：压力测试的持续时间，这里是2分钟。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，针对不同的选项取值就会有不同的子选项。比如&lt;code&gt;oltp-dist-type=special&lt;/code&gt;，就有比如&lt;code&gt;oltp-dist-pct=1&lt;/code&gt;、&lt;code&gt;oltp-dist-res=50&lt;/code&gt;两个子选项，代表有50%的查询落在1%的行（即热点数据）上，另外50%均匀的(sample uniformly)落在另外99%的记录行上。&lt;/p&gt;
&lt;p&gt;再比如&lt;code&gt;oltp-test-mode=nontrx&lt;/code&gt;时, 就可以有&lt;code&gt;oltp-nontrx-mode&lt;/code&gt;，可选值有select（默认）, update_key, update_nokey, insert, delete，代表非事务式模式下使用的测试sql类型。&lt;/p&gt;
&lt;p&gt;以上代表的是一个只读的例子，可以把&lt;code&gt;num-threads&lt;/code&gt;依次递增（16,36,72,128,256,512），或者调整my.cnf参数，比较效果。另外需要注意的是，大部分mysql中间件对事务的处理，默认都是把sql发到主库执行，所以只读测试需要加上&lt;code&gt;oltp-skip-trx=on&lt;/code&gt;来跳过测试中的显式事务。&lt;/p&gt;
&lt;p&gt;ps1: 只读测试也可以使用&lt;code&gt;share/tests/db/select.lua&lt;/code&gt;进行，但只是简单的point select。&lt;br&gt;ps2: 我在用sysbench压的时候，在mysql后端会话里有时看到大量的query cache lock，如果使用的是uniform取样，最好把查询缓存关掉。当然如果是做两组性能对比压测，因为都受这个因素影响，关心也不大。&lt;/p&gt;
&lt;h3 id=&quot;2-2-混合读写&quot;&gt;&lt;a href=&quot;#2-2-混合读写&quot; class=&quot;headerlink&quot; title=&quot;2.2 混合读写&quot;&gt;&lt;/a&gt;2.2 混合读写&lt;/h3&gt;&lt;p&gt;读写测试还是用oltp.lua，只需把&lt;code&gt;--oltp-read-only&lt;/code&gt;等于&lt;code&gt;off&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/bin/sysbench&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/share/tests/db/oltp&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;lua&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;host=10&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;port=8066&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;user=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;password=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;db=dbtest1a&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;tables&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;count=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;size=500000&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;interval=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;init=on&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;requests=0&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=nontrx&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;nontrx&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=select&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;only=off&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;time=120&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;threads=128&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;prepare&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/bin/sysbench&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/share/tests/db/oltp&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;lua&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;host=10&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;port=8066&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;user=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;password=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;db=dbtest1a&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;tables&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;count=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;size=500000&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;interval=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;init=on&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;requests=0&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=nontrx&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;nontrx&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=select&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;only=off&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;time=120&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;threads=128&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;run&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/bin/sysbench&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/share/tests/db/oltp&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;lua&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;host=10&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;port=8066&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;user=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;password=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;db=dbtest1a&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;tables&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;count=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;size=500000&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;interval=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;init=on&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;requests=0&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=nontrx&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;nontrx&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=select&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;only=off&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;time=120&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;threads=128&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;cleanup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而&lt;code&gt;oltp-test-mode=nontrx&lt;/code&gt;一直没有跟着我预期的去走，在mysql general log里面看到的sql记录与&lt;code&gt;complex&lt;/code&gt;模式相同。所以上面示例中的&lt;code&gt;--oltp-test-mode=nontrx --oltp-nontrx-mode=select&lt;/code&gt;可以删掉。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;update: &lt;/strong&gt;&lt;br&gt;sysbench作者 akopytov 对我这个疑问有了回复：&lt;a href=&quot;https://github.com/akopytov/sysbench/issues/34&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/akopytov/sysbench/issues/34&lt;/a&gt; ，原来sysbench 0.5版本去掉了这个选项，因为作者正在准备1.0版本，所以也就没有更新0.5版本的doc。网上的博客漫天飞，就没有一个提出来的，也是没谁了。&lt;/p&gt;
&lt;p&gt;分析一下oltp.lua脚本内容，可以清楚单个事务各操作的默认比例：select:update_key:update_non_key:delete:insert = 14:1:1:1:1，可通过&lt;code&gt;oltp-point-selects&lt;/code&gt;、&lt;code&gt;oltp-simple-ranges&lt;/code&gt;、&lt;code&gt;oltp-sum-ranges&lt;/code&gt;、&lt;code&gt;oltp-order-ranges&lt;/code&gt;、&lt;code&gt;oltp-distinct-ranges&lt;/code&gt;，&lt;code&gt;oltp-index-updates&lt;/code&gt;、&lt;code&gt;oltp-non-index-updates&lt;/code&gt;这些选项去调整读写权重。&lt;/p&gt;
&lt;p&gt;同只读测试一样，在atlas,mycat这类中间件测试中如果不加&lt;code&gt;oltp-skip-trx=on&lt;/code&gt;，那么所有查询都会发往主库，但如果在有写入的情况下使用&lt;code&gt;--oltp-skip-trx=on&lt;/code&gt;跳过BEGIN和COMMIT，会出现问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ALERT: failed to execute MySQL query: &lt;code&gt;INSERT INTO sbtest4 (id, k, c, pad) VALUES (48228,
47329, &amp;#39;82773802508-44916890724-85859319254-67627358653-96425730419-64102446666-75789993135-91202056934-68463872307-28147315305&amp;#39;, 
&amp;#39;13146850449-23153169696-47584324044-14749610547-34267941374&amp;#39;)&lt;/code&gt;:&lt;br&gt;ALERT: Error 1062 Duplicate entry ‘48228’ for key ‘PRIMARY’&lt;br&gt;FATAL: failed to execute function `event’: (null)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原因也很容易理解，每个线程将选择一个随机的表，不加事务的情况下高并发更新（插入）出现重复key的概率很大，但我们压测不在乎这些数据，所以需要跳过这个错误&lt;code&gt;--mysql-ignore-errors=1062&lt;/code&gt;，这个问题老外有出过打补丁的方案允许&lt;code&gt;--mysql-ignore-duplicates=on&lt;/code&gt;，但作者新加入的忽略错误码这个功能已经取代了它。&lt;code&gt;mysql-ignore-errors&lt;/code&gt;选项是0.5版本加入的，但目前没有文档标明，也是我在github上提的 &lt;a href=&quot;https://github.com/akopytov/sysbench/issues/23&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;issue&lt;/a&gt; 作者回复的。&lt;/p&gt;
&lt;p&gt;这里不得不佩服老外的办事效率和责任心，提个疑惑能立马得到回复，反观国内，比如在atlas,mycat项目里提到问题到现在都没人搭理。。。&lt;/p&gt;
&lt;h3 id=&quot;2-3-只更新&quot;&gt;&lt;a href=&quot;#2-3-只更新&quot; class=&quot;headerlink&quot; title=&quot;2.3 只更新&quot;&gt;&lt;/a&gt;2.3 只更新&lt;/h3&gt;&lt;p&gt;如果基准测试的时候，你只想比较两个项目的update（或insert）效率，那可以不使用oltp脚本，而直接改用&lt;code&gt;update_index.lua&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/bin/sysbench&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/share/tests/db/update_index&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;lua&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;host=10&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;port=8066&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;user=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;password=ecuser&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;db=dbtest1a&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;tables&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;count=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;size=500000&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;interval=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;init=on&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;requests=0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;only=off&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;time=120&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;threads=128&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;prepare&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;cleanup&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时像&lt;code&gt;oltp-read-only=off&lt;/code&gt;许多参数都失效了。需要说明的是这里 (非)索引更新，不是where条件根据索引去查找更新，而是更新索引列上的值。&lt;/p&gt;
&lt;h2 id=&quot;3-结果解读&quot;&gt;&lt;a href=&quot;#3-结果解读&quot; class=&quot;headerlink&quot; title=&quot;3. 结果解读&quot;&gt;&lt;/a&gt;3. 结果解读&lt;/h2&gt;&lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sysbench &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;:  multi-threaded system evaluation benchmark&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Running the test &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; following &lt;span class=&quot;attribute&quot;&gt;options&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;threads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Report intermediate results every &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; second(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Initializing random number generator from timer.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Random number generator seed is &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; and will be ignored&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Initializing worker threads...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Threads started!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[  &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;s] &lt;span class=&quot;attribute&quot;&gt;threads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;tps&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2354.54&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;33035.89&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;writes&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9423.39&lt;/span&gt;, response &lt;span class=&quot;attribute&quot;&gt;time&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;66.80&lt;/span&gt;ms (&lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;%), &lt;span class=&quot;attribute&quot;&gt;errors&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reconnects&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[  &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;s] &lt;span class=&quot;attribute&quot;&gt;threads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;tps&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2377.75&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;33274.26&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;writes&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9507.55&lt;/span&gt;, response &lt;span class=&quot;attribute&quot;&gt;time&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;66.88&lt;/span&gt;ms (&lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;%), &lt;span class=&quot;attribute&quot;&gt;errors&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reconnects&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[  &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;s] &lt;span class=&quot;attribute&quot;&gt;threads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;tps&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2401.35&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;33615.30&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;writes&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9607.40&lt;/span&gt;, response &lt;span class=&quot;attribute&quot;&gt;time&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;66.40&lt;/span&gt;ms (&lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;%), &lt;span class=&quot;attribute&quot;&gt;errors&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reconnects&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[  &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;s] &lt;span class=&quot;attribute&quot;&gt;threads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;tps&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2381.20&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;33331.50&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;writes&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9522.55&lt;/span&gt;, response &lt;span class=&quot;attribute&quot;&gt;time&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;67.30&lt;/span&gt;ms (&lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;%), &lt;span class=&quot;attribute&quot;&gt;errors&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reconnects&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;s] &lt;span class=&quot;attribute&quot;&gt;threads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;tps&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2388.85&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;33446.10&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;writes&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9556.35&lt;/span&gt;, response &lt;span class=&quot;attribute&quot;&gt;time&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;67.00&lt;/span&gt;ms (&lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;%), &lt;span class=&quot;attribute&quot;&gt;errors&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reconnects&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;s] &lt;span class=&quot;attribute&quot;&gt;threads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;tps&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2386.40&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reads&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;33421.35&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;writes&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;9545.35&lt;/span&gt;, response &lt;span class=&quot;attribute&quot;&gt;time&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;66.94&lt;/span&gt;ms (&lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;%), &lt;span class=&quot;attribute&quot;&gt;errors&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;reconnects&lt;/span&gt;:  &lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OLTP test &lt;span class=&quot;attribute&quot;&gt;statistics&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    queries &lt;span class=&quot;attribute&quot;&gt;performed&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;read&lt;/span&gt;:                            &lt;span class=&quot;number&quot;&gt;4003048&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//总select数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;write&lt;/span&gt;:                           &lt;span class=&quot;number&quot;&gt;1143728&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//总update、insert、delete语句数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;other&lt;/span&gt;:                           &lt;span class=&quot;number&quot;&gt;571864&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//commit、unlock tables以及其他mutex的数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;total&lt;/span&gt;:                           &lt;span class=&quot;number&quot;&gt;5718640&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;transactions&lt;/span&gt;:                        &lt;span class=&quot;number&quot;&gt;285932&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;2382.10&lt;/span&gt; per sec.) &lt;span class=&quot;comment&quot;&gt;//通常需要关注的数字(TPS)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    read/write &lt;span class=&quot;attribute&quot;&gt;requests&lt;/span&gt;:                 &lt;span class=&quot;number&quot;&gt;5146776&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;42877.85&lt;/span&gt; per sec.)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    other &lt;span class=&quot;attribute&quot;&gt;operations&lt;/span&gt;:                    &lt;span class=&quot;number&quot;&gt;571864&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;4764.21&lt;/span&gt; per sec.)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ignored &lt;span class=&quot;attribute&quot;&gt;errors&lt;/span&gt;:                      &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;      (&lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt; per sec.) &lt;span class=&quot;comment&quot;&gt;//忽略的错误数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;reconnects&lt;/span&gt;:                          &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;      (&lt;span class=&quot;number&quot;&gt;0.00&lt;/span&gt; per sec.)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;General &lt;span class=&quot;attribute&quot;&gt;statistics&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    total &lt;span class=&quot;attribute&quot;&gt;time&lt;/span&gt;:                          &lt;span class=&quot;number&quot;&gt;120.0334&lt;/span&gt;s &lt;span class=&quot;comment&quot;&gt;//即max-time指定的压测实际&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    total number &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;events&lt;/span&gt;:              &lt;span class=&quot;number&quot;&gt;285932&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//总的事件数，一般与transactions相同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    total time taken by event &lt;span class=&quot;attribute&quot;&gt;execution&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;15362.6623&lt;/span&gt;s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response &lt;span class=&quot;attribute&quot;&gt;time&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;attribute&quot;&gt;min&lt;/span&gt;:                                 &lt;span class=&quot;number&quot;&gt;17.60&lt;/span&gt;ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;attribute&quot;&gt;avg&lt;/span&gt;:                                 &lt;span class=&quot;number&quot;&gt;53.73&lt;/span&gt;ms &lt;span class=&quot;comment&quot;&gt;//95%的语句的平均响应时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;attribute&quot;&gt;max&lt;/span&gt;:                                &lt;span class=&quot;number&quot;&gt;252.90&lt;/span&gt;ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         approx.  &lt;span class=&quot;number&quot;&gt;95&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;percentile&lt;/span&gt;:              &lt;span class=&quot;number&quot;&gt;66.88&lt;/span&gt;ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Threads &lt;span class=&quot;attribute&quot;&gt;fairness&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    events (avg/stddev):           &lt;span class=&quot;number&quot;&gt;2233.8438&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;9.04&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    execution time (avg/stddev):   &lt;span class=&quot;number&quot;&gt;120.0208&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们一般关注的用于绘图的指标主要有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;response time avg: 平均响应时间。（后面的95%的大小可以通过&lt;code&gt;--percentile=98&lt;/code&gt;的方式去更改）&lt;/li&gt;
&lt;li&gt;transactions: 精确的说是这一项后面的TPS 。但如果使用了&lt;code&gt;-oltp-skip-trx=on&lt;/code&gt;，这项事务数恒为0，需要用&lt;code&gt;total number of events&lt;/code&gt; 去除以总时间，得到tps（其实还可以分为读tps和写tps）&lt;/li&gt;
&lt;li&gt;read/write requests: 用它除以总时间，得到吞吐量QPS&lt;/li&gt;
&lt;li&gt;当然还有一些系统层面的cpu,io,mem相关指标&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sysbench还可以对文件系统IO测试，CPU性能测试，以及内存分配与传输速度测试，这里就不介绍了。&lt;/p&gt;
&lt;p&gt;总结起来sysbench的缺点就是，模拟的表结构太简单，不像tpcc-mysql那样完整的事务系统。但对于性能压测对比还是很有用的，因为sysbench使用的环境参数限制是一样的。&lt;/p&gt;
&lt;h2 id=&quot;4-参考&quot;&gt;&lt;a href=&quot;#4-参考&quot; class=&quot;headerlink&quot; title=&quot;4. 参考&quot;&gt;&lt;/a&gt;4. 参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.percona.com/docs/wiki/benchmark:sysbench:olpt.lua&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Percona sysbench oltp.lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://imysql.com/wp-content/uploads/2014/10/sysbench-manual.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sysbench manual 0.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/zbszhangbosen/article/details/8236331&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sysbench介绍与使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://verynull.com/2016/01/29/sysbench%E6%B5%8B%E8%AF%95mysql%E6%80%A7%E8%83%BD/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sysbench测试mysql性能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mingxinglai.com/cn/2013/07/sysbench/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sysbench 0.5使用手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2016/03/28/mysql-sysbench&quot;&gt;http://seanlook.com/2016/03/28/mysql-sysbench&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;sysbench是一个模块化的、跨平台、多线程基准测试工具，主要用于评估测试各种不同系统参数下的数据库负载情况。关于这个项目的详细介绍请看：&lt;a href=&quot;https://github.com/akopytov/sysbench&quot;&gt;https://github.com/akopytov/sysbench&lt;/a&gt; 。&lt;br&gt;它主要包括以下几种方式的测试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;cpu性能&lt;/li&gt;
&lt;li&gt;磁盘io性能&lt;/li&gt;
&lt;li&gt;调度程序性能&lt;/li&gt;
&lt;li&gt;内存分配及传输速度&lt;/li&gt;
&lt;li&gt;POSIX线程性能&lt;/li&gt;
&lt;li&gt;数据库性能(OLTP基准测试)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sysbench的数据库OLTP测试支持MySQL、PostgreSQL、Oracle，目前主要用于Linux操作系统，开源社区已经将sysbench移植到了Windows，并支持SQL Server的基准测试。&lt;/p&gt;
&lt;p&gt;废话不多说，开始。&lt;/p&gt;
&lt;h2 id=&quot;1-sysbench安装&quot;&gt;&lt;a href=&quot;#1-sysbench安装&quot; class=&quot;headerlink&quot; title=&quot;1. sysbench安装&quot;&gt;&lt;/a&gt;1. sysbench安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;mysql版本: mysql-community-server-5.6.29   &lt;/li&gt;
&lt;li&gt;OS: CentOS 6.7 X86_64&lt;/li&gt;
&lt;li&gt;sysbench 0.5相比0.4版本有一些变化，包括oltp测试结合了lua脚本，还多了一些隐藏选项，本文会涉及得到一部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前许多仓库里已编译好的二进制sysbench还是0.4.x版本，不过现在主流也还是github上的0.5，可以从 &lt;a href=&quot;http://www.lefred.be/node/154&quot;&gt;这里&lt;/a&gt;下载0.5版本的rpm包直接安装，不过我选择自己编译，因为只有这个办法是通用的。&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 先安装编译依赖环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo yum install gcc gcc-c++ automake make  libtool mysql-community-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd &lt;span class=&quot;regexp&quot;&gt;/tmp &amp;amp;&amp;amp; git clone https:/&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/github.com/&lt;/span&gt;akopytov/sysbench.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd &lt;span class=&quot;regexp&quot;&gt;/tmp/&lt;/span&gt;sysbench &amp;amp;&amp;amp; ./autogen.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ .&lt;span class=&quot;regexp&quot;&gt;/configure --prefix=/&lt;/span&gt;usr&lt;span class=&quot;regexp&quot;&gt;/local/&lt;/span&gt;sysbench&lt;span class=&quot;number&quot;&gt;-0.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ ./make &amp;amp;&amp;amp; sudo make install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 0.5版本需要oltp.lua测试脚本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 如果是rpm包方式安装的，在 /usr/share/doc/sysbench/tests/db/ 下可找到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd &lt;span class=&quot;regexp&quot;&gt;/usr/&lt;/span&gt;local&lt;span class=&quot;regexp&quot;&gt;/sysbench &amp;amp;&amp;amp; sudo mkdir -p share/&lt;/span&gt;tests/db&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cp &lt;span class=&quot;regexp&quot;&gt;/tmp/&lt;/span&gt;sysbench&lt;span class=&quot;regexp&quot;&gt;/sysbench/&lt;/span&gt;tests&lt;span class=&quot;regexp&quot;&gt;/db/&lt;/span&gt;*.lua share&lt;span class=&quot;regexp&quot;&gt;/tests/&lt;/span&gt;db/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ .&lt;span class=&quot;regexp&quot;&gt;/bin/&lt;/span&gt;sysbench --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sysbench &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果需要测试PostgreSQL、Oracle，则在configure时需要加上 –with-oracle 或者 –with-pgsql 参数&lt;/p&gt;
&lt;h2 id=&quot;2-使用sysbench对mysql压测&quot;&gt;&lt;a href=&quot;#2-使用sysbench对mysql压测&quot; class=&quot;headerlink&quot; title=&quot;2. 使用sysbench对mysql压测&quot;&gt;&lt;/a&gt;2. 使用sysbench对mysql压测&lt;/h2&gt;&lt;h3 id=&quot;2-1-只读示例&quot;&gt;&lt;a href=&quot;#2-1-只读示例&quot; class=&quot;headerlink&quot; title=&quot;2.1 只读示例&quot;&gt;&lt;/a&gt;2.1 只读示例&lt;/h3&gt;&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/bin/sysbench&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test=&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/share/tests/db/oltp&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;lua&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;host=10&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;port=8066&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;user=ecuser&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;password=ecuser&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;db=dbtest1a&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;tables&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;count=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;size=500000&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;report&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;interval=10&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;type=uniform&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;init=on&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;requests=0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=nontrx&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;nontrx&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;mode=select&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;only=on&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;oltp&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;trx=on&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;time=120&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;threads=12&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;prepare|run|cleanup&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://seanlook.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://seanlook.com/tags/mysql/"/>
    
      <category term="sysbench" scheme="http://seanlook.com/tags/sysbench/"/>
    
  </entry>
  
  <entry>
    <title>记一次Mac mini折腾过程（鼠键共享，更换SSD）</title>
    <link href="http://seanlook.com/2016/01/18/mac-mini-zturn/"/>
    <id>http://seanlook.com/2016/01/18/mac-mini-zturn/</id>
    <published>2016-01-18T08:32:49.000Z</published>
    <updated>2016-01-18T08:32:49.000Z</updated>
    
    <content type="html">&lt;p&gt;从公司网管那捣鼓来一个“遗弃” Mac mini，说其它人觉得用起来太卡，正好我的工作PC( CPU 4×i3，MEM 8G, HDD 500G)软件开多了也觉得有些卡，特别是我使用浏览器的习惯不太好，每次搜索统一结果都要打开好多标签页对比，文章性质的觉得有用想将来记录下来就没关闭页面，一两个星期下来只Chrome使用的内存就达到4G多。不用也浪费，于是就拿Mac mini分摊一下压力。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-a1347.jpg&quot; alt=&quot;macmini-a1347.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;刚拿到手时心想得有多不堪配置才使得的Mac mini卡到嫌弃的地步，看了下底面的型号，A1347——这是2014年底出的新款，没有我想象的那么旧，还好。于是找来显示器、鼠键准备开用了（在某宝上买根八字电源线）。&lt;/p&gt;
&lt;p&gt;但是开机密码没有啊！虽然简单重装是个办法，但我还是想看看里面现在是什么样的，杀鸡焉用牛刀。直接Crack root…&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;1-破解Mac-root密码&quot;&gt;&lt;a href=&quot;#1-破解Mac-root密码&quot; class=&quot;headerlink&quot; title=&quot;1. 破解Mac root密码&quot;&gt;&lt;/a&gt;1. 破解Mac root密码&lt;/h1&gt;&lt;p&gt;找到这篇文章 &lt;a href=&quot;http://wowking.blog.51cto.com/1638252/753774&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wowking.blog.51cto.com/1638252/753774&lt;/a&gt; 。我们平头百姓手头哪会有刻录的Mac OS光盘，而且也没移动光驱，所以方法一就不考虑了。方法二是单用户模式，毕竟 OS X 也是*nix血统，命令行几个命令倒难不到我。&lt;/p&gt;
&lt;p&gt;可是众所周知，Mac的键盘跟普通键盘是不一样的，开机启动的时候&lt;code&gt;command + S&lt;/code&gt;在一般美式键盘下到底能不能进入单用户模式呢？嗯，行的，按下mini的开机按钮之后不断 &lt;code&gt;win + S&lt;/code&gt;。进入Single user model之后提示符#root&amp;gt;，逐步输入以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 执行硬盘检测（只读）, 这一步可以省略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/sbin/fsck -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 加载文件系统（读/写）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/sbin/mount -uaw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 删除初始化设置时的OSX生成的隐藏文件”.applesetupdone”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/db/.AppleSetupDone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reboot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;重启后开机画面会指导你创建一个新的&lt;strong&gt;管理员&lt;/strong&gt;账号，然后这个新的账号密码登陆。就是这么简单，接下来删用户抹除一切使用痕迹😄。&lt;/p&gt;
&lt;p&gt;进去之后着实令我窃喜：OS X Yosemite, 2.6 GHZ Intel Core i5, 8G DDR3, Intel Iris 1536 MB, 1TB HDD，就这配置比得上我当前的Win PC了，高兴得捡了块宝似的。优胜美地系统与我自己的Mac Book Pro一样，无缝立马开始用。&lt;/p&gt;
&lt;p&gt;然而面临的一个问题来了，现在2台工作电脑，配有2套鼠标键盘，切换太不方便了。于是我用大腿想了想，嗯，应该有专门的多台电脑间共享鼠键的软件。啪啪啪几下锁定两款&lt;code&gt;Sharemouse&lt;/code&gt;、&lt;code&gt;Synergy&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;2-跨平台共享鼠标键盘-synergy&quot;&gt;&lt;a href=&quot;#2-跨平台共享鼠标键盘-synergy&quot; class=&quot;headerlink&quot; title=&quot;2. 跨平台共享鼠标键盘-synergy&quot;&gt;&lt;/a&gt;2. 跨平台共享鼠标键盘-synergy&lt;/h1&gt;&lt;p&gt;先来简单说一下Sharemouse，收费，但你懂的，但这东西毕竟用的人少，要分别在在windows和Mac两个平台上找到相同版本的破解版是多么不容易。中间折腾就不说了，成功使用 V2.0.53 版本。但号称的拖拽文件我始终没看到，我猜还是不同系统的缘故。sharemouse是有阉割了拖拽和加密功能的免费版的，而且配置超级简单，基本上只要在同一局域网，各自把软件装上，就可以用其中随便哪一电脑的鼠键来回在两个显示器之间滑动，而且还有dimmy效果。（抱歉，因为文章是后写的，没截图）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://synergy-project.org/download/free/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Synergy&lt;/a&gt;也是鼎鼎大名的一款，而且开源、跨平台，也能复制剪切版和拖拽文件，据说它是谷歌工程师标配，因为他们也有在多台主机间控制电脑困扰。&lt;/p&gt;
&lt;p&gt;但synergy公司也很奇葩，工具开源，但最新版的下载不免费，你要支付之后才能看到新版下载页面（旧版本免费开放，但你明知道有bug而且已解决，纠结吧少年）。我想原因大概是synergy既要遵守开源协议，但又要维持收入吧。奇怪的是网上竟然很少有人把它共享下载。当然，如果你不嫌麻烦，可以去 &lt;a href=&quot;https://github.com/symless/synergy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/symless/synergy&lt;/a&gt; 下载源码，自己编译，synergy还很友好的提供了编译指南…点到为止，我也不想再浪费无谓的折腾时间。&lt;/p&gt;
&lt;p&gt;这里分享v1.7.4版本下载，链接: &lt;a href=&quot;http://pan.baidu.com/s/1mhbaLza&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1mhbaLza&lt;/a&gt; 密码: m4d7&lt;/p&gt;
&lt;p&gt;我现在一直使用的是synergy，鼠键接在Windows主机，但有一个问题没解决：synergy即使加入了Mac mini（用户）开机启动，但用户没输密码登陆之前，是不会启动synergy的，所以还是要另外接一套鼠键来输密码，随后synergy接管，衰，不知谁有更好的办法？&lt;/p&gt;
&lt;p&gt;下面简单介绍配置过程。&lt;/p&gt;
&lt;h2 id=&quot;windows作服务端&quot;&gt;&lt;a href=&quot;#windows作服务端&quot; class=&quot;headerlink&quot; title=&quot;windows作服务端&quot;&gt;&lt;/a&gt;windows作服务端&lt;/h2&gt;&lt;p&gt;synergy跟sharemouse很大不同在于，sharemouse是不分Server和Client的，鼠键可以插在任意一台电脑上，而synergy要求鼠键在Server，需要鼠键的其它电脑可以没有。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;勾选 【Server】，可以看到当前ip&lt;br&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-synergy-server.png&quot; alt=&quot;macmini-synergy-server&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击 【设置服务端】，默认最中间显示器代表当前电脑&lt;br&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-synergy-server-settings.png&quot; alt=&quot;macmini-synergy-server-settings&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从右上角拖一个到你想要展示的相对位置，双击编辑 【屏幕名】（即其它电脑的主机名）&lt;/p&gt;
&lt;h2 id=&quot;mac做客户端&quot;&gt;&lt;a href=&quot;#mac做客户端&quot; class=&quot;headerlink&quot; title=&quot;mac做客户端&quot;&gt;&lt;/a&gt;mac做客户端&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在mac【设置】里选择【安全与隐私】，点击【隐私】选项卡，【辅助功能】，勾选右边的 Synergy。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-synergy-client-pre.png&quot; alt=&quot;macmini-synergy-client-pre.jpg&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;勾选【Client】，输入上一节看到的服务端ip。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-synergy-client.png&quot; alt=&quot;macmini-synergy-client.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;同时注意 screen name 就是上一节要填入的屏幕名，也是主机名啦。&lt;br&gt;不要忘了 start，看到 starting cocoa loop 就正常了，享受 “一键” 的快感吧。&lt;/p&gt;
&lt;p&gt;偷偷的往后瞥了一眼，那个同事还说2套鼠键来回用。。。&lt;/p&gt;
&lt;p&gt;多说一句，synergy或sharemouse跟kvm切换器不同，不能实现kvm switch的屏幕扩展、录像等功能，kvm switch显示器也是共用的。&lt;/p&gt;
&lt;p&gt;一切似乎都完美了，开开心心的typing, browsing了2个星期，卡！一直盯着那个圈转啊转啊。Mac mini上任务也不算多，活动监视器也没看到CPU消耗大户。&lt;/p&gt;
&lt;p&gt;这就是这台Mac mini被抛弃的原因吗？难道我也要放弃它吗？我陷入了深深的沉思。&lt;/p&gt;
&lt;p&gt;网上查了查“Mac mini 换固态硬盘”，有大批的文章。一不做二不休，给Mac mini拆机换SSD ！&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;3-Mac-mini换SSD&quot;&gt;&lt;a href=&quot;#3-Mac-mini换SSD&quot; class=&quot;headerlink&quot; title=&quot;3. Mac mini换SSD&quot;&gt;&lt;/a&gt;3. Mac mini换SSD&lt;/h1&gt;&lt;p&gt;跟小吴关系好，要来一个SATA接口的128G三星固态硬盘850 EVO，查了3篇文章对着看，精确每一步，这么mini的mini，拆坏一个零件或者掉个螺丝，赔不起…&lt;/p&gt;
&lt;p&gt;就是这几篇了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.feng.com/iPhone/news/2015-08-12/Match-the-Mac-mini-tutorial-2014-low-SSD-solid-state-drives_621487.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;教程：2014款低配Mac mini换SSD固态硬盘&lt;/a&gt;  (主要看这个，作者好有耐心)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.feng.com/read-htm-tid-9010944.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2014款mac mini 拆机 更换ssd 升级硬盘 固态硬盘 记录教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;这还有个不是2014款的&lt;a href=&quot;http://www.tudou.com/programs/view/Y25qE4t8kNY/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;拆解视频&lt;/a&gt; (没看过，写文章的时候才搜到)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是有个问题，旧的HDD换下来，新的SSD装上去，系统资料什么的可都没了。&lt;/p&gt;
&lt;p&gt;解决这个问题方法可多了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有硬盘盒的话最方便。用Superduper或者Carbon Copy Cloner工具直接把源OSX系统+数据整盘镜像到你的SSD中，换好之后开机直接可以用了。&lt;/li&gt;
&lt;li&gt;先手动备份（拷贝）文件到其它系统/硬盘，换上SSD后用U盘全新安装OSX，恢复数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好吧，好像也没有那么多方法。虽然第一种比较通用而且技术含量高，但因为这台Mac并没用多久，文稿和软件不多，备份恢复容易，于是我选择了第2种。&lt;/p&gt;
&lt;p&gt;另外又多说一句，Mac mini因为零部件排版紧密，没有台式机或笔记本那么多插拔的口子，CPU和内存是焊死在主板上的，所以是换不了滴。&lt;/p&gt;
&lt;p&gt;接下来就是心灵手巧的我，漫长的两个小时的肢解和还原过程了，此处略去一万字。&lt;/p&gt;
&lt;p&gt;拆的时候&lt;strong&gt;螺丝按顺序分开放&lt;/strong&gt;，脑子记好零件位置，不确定之前先拍个照好还原，其它也没什么了。附图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-ssd-1.jpg&quot; alt=&quot;macmini-change-ssd-1&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-ssd-2.jpg&quot; alt=&quot;macmini-change-ssd-2&quot;&gt;&lt;/p&gt;
&lt;p&gt;几点说明：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一步打开黑色后盖，用刀口起子或者硬薄片轻轻在下方撬动。早前一直想转开它（老版）&lt;/li&gt;
&lt;li&gt;用到两种螺丝刀 T6H和T9，JK 6089-A&lt;/li&gt;
&lt;li&gt;第3步取下wifi天线，有3根线各自连接的圆圈比较难取，我是用镊子夹住网上提的。取天线的时候往后小幅度摇摆拉拽。&lt;/li&gt;
&lt;li&gt;第4步说的取风扇排线，我是用手一边向上空提排线，一边镊子的小尖尖在下面翘。它的排线是从上空往下“按”的，跟平常印象里的“插”不一样。这个地方堵了好久&lt;/li&gt;
&lt;li&gt;第六步把主板撬出来很关键了。千万注意啊，是&lt;strong&gt;水平&lt;/strong&gt;的往出口方向使劲，“推”出来，文中说“撬”有点误导。我是以下面做支点撬，那两个孔让我给弄坏了😓，还好不太要紧。&lt;/li&gt;
&lt;li&gt;装回去文章倒着往前看就是了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不得不说换完之后，很有成就感。下面就是装系统，感受一下要上天的ssd了。&lt;/p&gt;
&lt;h1 id=&quot;4-U盘安装OS-X&quot;&gt;&lt;a href=&quot;#4-U盘安装OS-X&quot; class=&quot;headerlink&quot; title=&quot;4. U盘安装OS X&quot;&gt;&lt;/a&gt;4. U盘安装OS X&lt;/h1&gt;&lt;p&gt;跟用U盘安装windows还是有点不同的，要先在一台Mac电脑上格式化U盘。参考这里&lt;a href=&quot;http://www.iplaysoft.com/osx-yosemite-usb-install-drive.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;U盘全新安装OS X&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载苹果官方 OS X Yosemite 正式版，解压得到 “Install OS X Yosemite.app”，拷贝到【应用程序】目录中&lt;/li&gt;
&lt;li&gt;使用Mac的【磁盘工具】，将U盘分区划成“Mac OS扩展(日志式)”、“GUID分区表”&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在终端里执行下面的命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo /Applications/Install\ OS\ X\ Yosemite.app/Contents/Resources/createinstallmedia --volume \
/Volumes/Untitled --applicationpath /Applications/Install\ OS\ X\ Yosemite.app --nointeraction
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 上面&lt;code&gt;/Volumes/Untitled&lt;/code&gt;是U盘的名字。回车后，系统会提示你输入管理员密码，接下来就是等待系统开始制作启动盘了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从U盘启动安装 OS X&lt;br&gt;在Mac mini上插上U盘，启动Mac，然后一直按住【option】键（即Alt键，不行就重启多试几次）。&lt;br&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-osx-u-install.jpg&quot; alt=&quot;macmini-osx-u-install.jpg&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在进入刚进入安装过程后，要先对ssd盘格式化才能看到它。接下来就按照 &lt;a href=&quot;http://tu.pcpop.com/all-771688.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;向导&lt;/a&gt; 就可以完成安装了。建议appleID完成后再添加。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2016/01/18/mac-mini-zturn/&quot;&gt;http://seanlook.com/2016/01/18/mac-mini-zturn/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从公司网管那捣鼓来一个“遗弃” Mac mini，说其它人觉得用起来太卡，正好我的工作PC( CPU 4×i3，MEM 8G, HDD 500G)软件开多了也觉得有些卡，特别是我使用浏览器的习惯不太好，每次搜索统一结果都要打开好多标签页对比，文章性质的觉得有用想将来记录下来就没关闭页面，一两个星期下来只Chrome使用的内存就达到4G多。不用也浪费，于是就拿Mac mini分摊一下压力。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/macmini-a1347.jpg&quot; alt=&quot;macmini-a1347.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;刚拿到手时心想得有多不堪配置才使得的Mac mini卡到嫌弃的地步，看了下底面的型号，A1347——这是2014年底出的新款，没有我想象的那么旧，还好。于是找来显示器、鼠键准备开用了（在某宝上买根八字电源线）。&lt;/p&gt;
&lt;p&gt;但是开机密码没有啊！虽然简单重装是个办法，但我还是想看看里面现在是什么样的，杀鸡焉用牛刀。直接Crack root…&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;1-破解Mac-root密码&quot;&gt;&lt;a href=&quot;#1-破解Mac-root密码&quot; class=&quot;headerlink&quot; title=&quot;1. 破解Mac root密码&quot;&gt;&lt;/a&gt;1. 破解Mac root密码&lt;/h1&gt;&lt;p&gt;找到这篇文章 &lt;a href=&quot;http://wowking.blog.51cto.com/1638252/753774&quot;&gt;http://wowking.blog.51cto.com/1638252/753774&lt;/a&gt; 。我们平头百姓手头哪会有刻录的Mac OS光盘，而且也没移动光驱，所以方法一就不考虑了。方法二是单用户模式，毕竟 OS X 也是*nix血统，命令行几个命令倒难不到我。&lt;/p&gt;
&lt;p&gt;可是众所周知，Mac的键盘跟普通键盘是不一样的，开机启动的时候&lt;code&gt;command + S&lt;/code&gt;在一般美式键盘下到底能不能进入单用户模式呢？嗯，行的，按下mini的开机按钮之后不断 &lt;code&gt;win + S&lt;/code&gt;。进入Single user model之后提示符#root&amp;gt;，逐步输入以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 执行硬盘检测（只读）, 这一步可以省略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/sbin/fsck -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 加载文件系统（读/写）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/sbin/mount -uaw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 删除初始化设置时的OSX生成的隐藏文件”.applesetupdone”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/db/.AppleSetupDone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reboot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Mac OSX" scheme="http://seanlook.com/categories/Mac-OSX/"/>
    
    
      <category term="Mac" scheme="http://seanlook.com/tags/Mac/"/>
    
      <category term="鼠标键盘" scheme="http://seanlook.com/tags/%E9%BC%A0%E6%A0%87%E9%94%AE%E7%9B%98/"/>
    
      <category term="synergy" scheme="http://seanlook.com/tags/synergy/"/>
    
  </entry>
  
  <entry>
    <title>生产环境使用 pt-table-checksum 检查MySQL数据一致性</title>
    <link href="http://seanlook.com/2015/12/29/mysql_replica_pt-table-checksum/"/>
    <id>http://seanlook.com/2015/12/29/mysql_replica_pt-table-checksum/</id>
    <published>2015-12-29T02:21:25.000Z</published>
    <updated>2015-12-28T16:46:23.000Z</updated>
    
    <content type="html">&lt;p&gt;公司数据中心从托管机房迁移到阿里云，需要对mysql迁移（Replication）后的数据一致性进行校验，但又不能对生产环境使用造成影响，pt-table-checksum 成为了绝佳也是唯一的检查工具。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pt-table-checksum&lt;/code&gt; 是 Percona-Toolkit 的组件之一，用于检测MySQL主、从库的数据是否一致。其原理是在主库执行基于statement的sql语句来生成主库数据块的checksum，把相同的sql语句传递到从库执行，并在从库上计算相同数据块的checksum，最后，比较主从库上相同数据块的checksum值，由此判断主从数据是否一致。检测过程根据唯一索引将表按row切分为块（chunk），以为单位计算，可以避免锁表。检测时会自动判断复制延迟、 master的负载， 超过阀值后会自动将检测暂停，减小对线上服务的影响。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pt-table-checksum&lt;/code&gt; 默认情况下可以应对绝大部分场景，官方说，即使上千个库、上万亿的行，它依然可以很好的工作，这源自于设计很简单，一次检查一个表，不需要太多的内存和多余的操作；必要时，&lt;code&gt;pt-table-checksum&lt;/code&gt; 会根据服务器负载动态改变 chunk 大小，减少从库的延迟。&lt;/p&gt;
&lt;p&gt;为了减少对数据库的干预，&lt;code&gt;pt-table-checksum&lt;/code&gt;还会自动侦测并连接到从库，当然如果失败，可以指定&lt;code&gt;--recursion-method&lt;/code&gt;选项来告诉从库在哪里。它的易用性还体现在，复制若有延迟，在从库 checksum 会暂停直到赶上主库的计算时间点（也通过选项&lt;code&gt;--&lt;/code&gt;设定一个可容忍的延迟最大值，超过这个值也认为不一致）。 &lt;/p&gt;
&lt;p&gt;为了保证主数据库服务的安全，该工具实现了许多保护措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自动设置 &lt;code&gt;innodb_lock_wait_timeout&lt;/code&gt; 为1s，避免引起&lt;/li&gt;
&lt;li&gt;默认当数据库有25个以上的并发查询时，&lt;code&gt;pt-table-checksum&lt;/code&gt;会暂停。可以设置 &lt;code&gt;--max-load&lt;/code&gt; 选项来设置这个阀值&lt;/li&gt;
&lt;li&gt;当用 Ctrl+C 停止任务后，工具会正常的完成当前 chunk 检测，下次使用 &lt;code&gt;--resume&lt;/code&gt; 选项启动可以恢复继续下一个 chunk&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;工作过程&quot;&gt;&lt;a href=&quot;#工作过程&quot; class=&quot;headerlink&quot; title=&quot;工作过程&quot;&gt;&lt;/a&gt;工作过程&lt;/h2&gt;&lt;p&gt;直接看 &lt;a href=&quot;http://www.nettedfish.com/blog/2013/06/04/check-replication-consistency-by-pt-table-checksum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nettedfish&lt;/a&gt; 的说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1. 连接到主库：pt工具连接到主库，然后自动发现主库的所有从库。默认采用show full processlist来查找从库，但是这只有在主从实例端口相同的情况下才有效。&lt;br&gt;3. 查找主库或者从库是否有复制过滤规则：这是为了安全而默认检查的选项。你可以关闭这个检查，但是这可能导致checksum的sql语句要么不会同步到从库，要么到了从库发现从库没有要被checksum的表，这都会导致从库同步卡库。&lt;br&gt;5. 开始获取表，一个个的计算。&lt;br&gt;6. 如果是表的第一个chunk，那么chunk-size一般为1000；如果不是表的第一个chunk，那么采用19步中分析出的结果。&lt;br&gt;7. 检查表结构，进行数据类型转换等，生成checksum的sql语句。&lt;br&gt;8. 根据表上的索引和数据的分布，选择最合适的split表的方法。&lt;br&gt;9. 开始checksum表。&lt;br&gt;10. 默认在chunk一个表之前，先删除上次这个表相关的计算结果。除非–resume。&lt;br&gt;14. 根据explain的结果，判断chunk的size是否超过了你定义的chunk-size的上限。如果超过了，为了不影响线上性能，这个chunk将被忽略。&lt;br&gt;15. 把要checksum的行加上for update锁，并计算。&lt;br&gt;17-18. 把计算结果存储到master_crc master_count列中。&lt;br&gt;19. 调整下一个chunk的大小。&lt;br&gt;20. 等待从库追上主库。如果没有延迟备份的从库在运行，最好检查所有的从库，如果发现延迟最大的从库延迟超过max-lag秒，pt工具在这里将暂停。&lt;br&gt;21. 如果发现主库的max-load超过某个阈值，pt工具在这里将暂停。&lt;br&gt;22. 继续下一个chunk，直到这个table被chunk完毕。&lt;br&gt;23-24. 等待从库执行完checksum，便于生成汇总的统计结果。每个表汇总并统计一次。&lt;br&gt;25-26. 循环每个表，直到结束。&lt;br&gt;校验结束后，在每个从库上，执行如下的sql语句即可看到是否有主从不一致发生： &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; percona.checksums &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; master_cnt &amp;lt;&amp;gt; this_cnt &lt;span class=&quot;keyword&quot;&gt;OR&lt;/span&gt; master_crc &amp;lt;&amp;gt; this_crc &lt;span class=&quot;keyword&quot;&gt;OR&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ISNULL&lt;/span&gt;(master_crc) &amp;lt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;ISNULL&lt;/span&gt;(this_crc) \G&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;你需要知道的选项&quot;&gt;&lt;a href=&quot;#你需要知道的选项&quot; class=&quot;headerlink&quot; title=&quot;你需要知道的选项&quot;&gt;&lt;/a&gt;你需要知道的选项&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--replicate-check&lt;/code&gt;：执行完 checksum 查询在percona.checksums表中，不一定马上查看结果呀 —— yes则马上比较chunk的crc32值并输出DIFFS列，否则不输出。默认yes，如果指定为&lt;code&gt;--noreplicate-check&lt;/code&gt;，一般后续使用下面的&lt;code&gt;--replicate-check-only&lt;/code&gt;去输出DIFF结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--replicate-check-only&lt;/code&gt;：不在主从库做 checksum 查询，只在原有 &lt;code&gt;percona.checksums&lt;/code&gt; 表中查询结果，并输出数据不一致的信息。周期性的检测一致性时可能用到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--nocheck-binlog-format&lt;/code&gt;：不检测日志格式。这个选项对于 ROW 模式的复制很重要，因为&lt;code&gt;pt-table-checksum&lt;/code&gt;会在 Master和Slave 上设置&lt;code&gt;binlog_format=STATEMENT&lt;/code&gt;（确保从库也会执行 checksum SQL），MySQL限制从库是无法设置的，所以假如行复制从库，再作为主库复制出新从库时（A-&amp;gt;B-&amp;gt;C），B的checksums数据将无法传输。（没验证）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--replicate=&lt;/code&gt; 指定 checksum 计算结果存到哪个库表里，如果没有指定，默认是 percona.checksums 。&lt;br&gt;但是我们检查使用的mysql用户一般是没有 create table 权限的，所以你可能需要先手动创建：&lt;/p&gt;
  &lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;EXISTS&lt;/span&gt; percona;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;EXISTS&lt;/span&gt; percona.checksums (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    db &lt;span class=&quot;built_in&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tbl &lt;span class=&quot;built_in&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;chunk&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chunk_time &lt;span class=&quot;built_in&quot;&gt;FLOAT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chunk_index &lt;span class=&quot;built_in&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lower_boundary &lt;span class=&quot;built_in&quot;&gt;TEXT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    upper_boundary &lt;span class=&quot;built_in&quot;&gt;TEXT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this_crc &lt;span class=&quot;built_in&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this_cnt &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    master_crc &lt;span class=&quot;built_in&quot;&gt;CHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;) &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    master_cnt &lt;span class=&quot;built_in&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ts &lt;span class=&quot;keyword&quot;&gt;TIMESTAMP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (db,tbl,&lt;span class=&quot;keyword&quot;&gt;chunk&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;INDEX&lt;/span&gt; ts_db_tbl(ts,db,tbl)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生产环境中数据库用户权限一般都是有严格管理的，假如连接用户是&lt;code&gt;repl_user&lt;/code&gt;（即直接用复制用户来检查），它应该额外赋予对其它库的 SELECT ，LOCK TABLES 权限，如果后续要用 pt-table-sync 就就需要写权限了。对percona库有写权限：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GRANT ALL PRIVILEGEES on percona.* to repl_user@&amp;apos;%&amp;apos; IDENTIFIED BY &amp;apos;repl_pass&amp;apos;;
GRANT SELECT,LOCK TABLES,PROCESS,SUPER on *.* to repl_user@&amp;apos;%&amp;apos;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为了减少不必要的麻烦，确保你的 repl_user@’xxx’ 用户能同时登陆主库和从库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--create-replicate-table&lt;/code&gt; 选项会自动创建 percona.checksums 表，但也意味着赋予额外的 &lt;code&gt;CREATE TABLE&lt;/code&gt;权限给 percona_tk@’xxx’ 用户。默认yes&lt;/li&gt;
&lt;li&gt;PROCESS用于自动发现从库信息，SUPER权限用于set binlog_format。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--no-check-replication-filters&lt;/code&gt; 表示不需要检查 Master 配置里是否指定了 Filter。 默认会检查，如果配置了 Filter，如 replicate_do_db,replicate-wild-ignore-table,binlog_ignore_db 等，在从库checksum就与遇到表不存在而报错退出，所以官方默认是yes（&lt;code&gt;--check-replication-filters&lt;/code&gt;）但我们实际在检测中时指定&lt;code&gt;--databases=&lt;/code&gt;，所以就不存在这个问题，干脆不检测&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--empty-replicate-table&lt;/code&gt;：每个表checksum开始前，清空它之前的检测数据（不影响其它表的checksum数据），默认yes。当然如果使用&lt;code&gt;--resume&lt;/code&gt;启动检测数据不会清空。&lt;br&gt;当启用&lt;code&gt;--noempty-replicate-table&lt;/code&gt;即不清空时，不计算计算chunk,只计算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--databases=&lt;/code&gt;，&lt;code&gt;-d&lt;/code&gt;：要检查的数据库，逗号分隔。用脚趾头想也知道 &lt;code&gt;--databases-regex&lt;/code&gt; 正则匹配要检测的数据库，&lt;code&gt;--ignore-databases[-regex]&lt;/code&gt;忽略检查的库。Filter选项。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--tables=&lt;/code&gt;，&lt;code&gt;-t&lt;/code&gt;：要检查的表，逗号分隔。如果要检查的表分布在不同的db中，可以用&lt;code&gt;--tables=dbname1.table1,dbnamd2.table2&lt;/code&gt;的形式。同理有&lt;code&gt;--tables-regex&lt;/code&gt;，&lt;code&gt;--ignore-tables&lt;/code&gt;，&lt;code&gt;--ignore-tables-regex&lt;/code&gt;。&lt;code&gt;--replicate&lt;/code&gt;指定的checksum表始终会被过滤。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;--recursion-method&lt;/code&gt;：发现从库的方式。pt-table-checksum 默认可以在主库的 &lt;code&gt;processlist&lt;/code&gt; 中找到从库复制进程，从而识别出有哪些从库，但如果使用是非标准3306端口，会导致找不到从库信息。此时就会自动采用&lt;code&gt;host&lt;/code&gt;方式，但需要提前在从库 my.cnf 里面配置&lt;code&gt;report_host&lt;/code&gt;、&lt;code&gt;report_port&lt;/code&gt;信息，如：&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;report_host&lt;/span&gt; = MASTER_HOST&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;report_port&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;13306&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最终极的办法是&lt;code&gt;dsn&lt;/code&gt;，dsn指定的是某个表（如 percona.dsns ），表行记录是改主库的（多个）从库的连接信息。适用以下任一情形：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主库不能自动发现从库&lt;/li&gt;
&lt;li&gt;不想在从库添加额外配置（因为要重启）&lt;/li&gt;
&lt;li&gt;主从检测连接用户信息不一样&lt;/li&gt;
&lt;li&gt;多个从库时只想验证指定从库的一致&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我比较倾向使用DSN的方式。这个dsns表只需要在执行 &lt;code&gt;pt-table-checksum&lt;/code&gt; 命令的服务器上能够访问到就行。这里纠正一个认识，网上很多人说 pt-table-checksum 要在主库上执行，其实不是的，我的mysql实例比较多，只需在某一台服务器上安装percona-toolkit，这台服务能够同时访问主库和从库就行了。具体用法见后面实例。&lt;/p&gt;
&lt;h2 id=&quot;检测实例&quot;&gt;&lt;a href=&quot;#检测实例&quot; class=&quot;headerlink&quot; title=&quot;检测实例&quot;&gt;&lt;/a&gt;检测实例&lt;/h2&gt;&lt;h3 id=&quot;同网段间主从一致检查&quot;&gt;&lt;a href=&quot;#同网段间主从一致检查&quot; class=&quot;headerlink&quot; title=&quot;同网段间主从一致检查&quot;&gt;&lt;/a&gt;同网段间主从一致检查&lt;/h3&gt;&lt;p&gt;场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标准端口3306，只检查某一个库的关键表&lt;/li&gt;
&lt;li&gt;一主一从，binlog&lt;strong&gt;不&lt;/strong&gt;是ROW模式&lt;/li&gt;
&lt;li&gt;同网段复制，percona_tk@’192.168.5.%’ 具备该有的权限：&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; ALL PRIVILEGEES &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; repl_user.* &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; repl_user@&lt;span class=&quot;string&quot;&gt;&#39;192.168.5.%&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;repl_pass&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;LOCK&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLES&lt;/span&gt;,PROCESS,SUPER &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; *.* &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; repl_user@&lt;span class=&quot;string&quot;&gt;&#39;192.168.5.%&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是最简单的方式，把要连接和检查的信息交代就行了：&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# pt-&lt;span class=&quot;keyword&quot;&gt;table&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;checksum&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;h&lt;/span&gt;=MASTER_HOST,&lt;span class=&quot;keyword&quot;&gt;u&lt;/span&gt;=repl_user,p=&#39;repl_pass&#39;,P=3306 \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--databases=d_ts_profile --tables=t_user,t_user_detail,t_user_group --nocheck-replication-filters&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果是首次运行，会在主库自动创建 percona.checksums 表。&lt;/p&gt;
&lt;p&gt;输出结果：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Replica&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;lag&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;is&lt;/span&gt; 2307 &lt;span class=&quot;selector-tag&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;mysql-5&lt;/span&gt;.  &lt;span class=&quot;selector-tag&quot;&gt;Waiting&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Checksumming&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;d_ts_profile&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.t_user_account&lt;/span&gt;:   3% 54&lt;span class=&quot;selector-pseudo&quot;&gt;:48&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;remain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;selector-tag&quot;&gt;TS&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ERRORS&lt;/span&gt;  &lt;span class=&quot;selector-tag&quot;&gt;DIFFS&lt;/span&gt;     &lt;span class=&quot;selector-tag&quot;&gt;ROWS&lt;/span&gt;  &lt;span class=&quot;selector-tag&quot;&gt;CHUNKS&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;SKIPPED&lt;/span&gt;    &lt;span class=&quot;selector-tag&quot;&gt;TIME&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;TABLE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;span class=&quot;selector-tag&quot;&gt;-18T16&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:07&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:48&lt;/span&gt;      0      0   313641       9       0 146&lt;span class=&quot;selector-class&quot;&gt;.417&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;d_ts_profile&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.t_user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;span class=&quot;selector-tag&quot;&gt;-18T16&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:08&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:00&lt;/span&gt;      0      0   397734      12       0  11&lt;span class=&quot;selector-class&quot;&gt;.747&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;d_ts_profile&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.t_user_detail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;span class=&quot;selector-tag&quot;&gt;-18T16&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:08&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:24&lt;/span&gt;      0      0  1668327      20       0  23&lt;span class=&quot;selector-class&quot;&gt;.941&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;d_ts_profile&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.t_user_group&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;TS ：完成检查的时间戳。&lt;/li&gt;
&lt;li&gt;ERRORS ：检查时候发生错误和警告的数量。 &lt;/li&gt;
&lt;li&gt;DIFFS ：不一致的chunk数量。当指定 &lt;code&gt;--no-replicate-check&lt;/code&gt; 即检查完但不立即输出结果时，会一直为0；当指定 &lt;code&gt;--replicate-check-only&lt;/code&gt; 即不检查只从checksums表中计算crc32，且只显示不一致的信息（毕竟输出的大部分应该是一致的，容易造成干扰）。&lt;/li&gt;
&lt;li&gt;ROWS ：比对的表行数。&lt;/li&gt;
&lt;li&gt;CHUNKS ：被划分到表中的块的数目。&lt;/li&gt;
&lt;li&gt;SKIPPED ：由于错误或警告或过大，则跳过块的数目。&lt;/li&gt;
&lt;li&gt;TIME ：执行的时间。&lt;/li&gt;
&lt;li&gt;TABLE ：被检查的表名&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用dsn跨数据中心检测&quot;&gt;&lt;a href=&quot;#使用dsn跨数据中心检测&quot; class=&quot;headerlink&quot; title=&quot;使用dsn跨数据中心检测&quot;&gt;&lt;/a&gt;使用dsn跨数据中心检测&lt;/h3&gt;&lt;p&gt;场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;非标准端口13306，只检查以 d_ts 开头的所有库&lt;/li&gt;
&lt;li&gt;一主二从，binlog&lt;strong&gt;是&lt;/strong&gt;ROW模式，其中一从在阿里云ECS上，主库是无法直接访问该从库的&lt;/li&gt;
&lt;li&gt;检测用的账号因为不是%，所以不一样&lt;/li&gt;
&lt;li&gt;以下是我环境的情况&lt;br&gt;MASTER_HOST:13306 主库&lt;br&gt;REPLICA_HOST:3306    从库&lt;br&gt;PTCHECK_HOST pt-table-checksum所在服务器&lt;br&gt;DSN_DBHOST，记录从库（连接）dsns的数据库&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最优的方式就是dsn指定从库了。在从库或从库同网段主机里装上 percona-toolkit。&lt;/p&gt;
&lt;p&gt;在DSN_DBHOST 数据库实例上创建DSNs表：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;database&lt;/span&gt; percona;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`percona`&lt;/span&gt;.&lt;span class=&quot;string&quot;&gt;`dsns`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;`parent_id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;`dsn`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; ALL PRIVILEGEES &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; percona.* &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; percona_tk@&lt;span class=&quot;string&quot;&gt;&#39;PTCHECK_HOST&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;percona_pass&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果有多个实例要检查，可以创建多个类似的dsns表。上面的percona_tk用户只是用来访问dsn库。插入从库信息：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; percona;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;into&lt;/span&gt; dsns(dsn) &lt;span class=&quot;keyword&quot;&gt;values&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;h=REPLICA_HOST,P=3306,u=repl_user,p=repl_pass&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DSNs记录 dsn 列格式如 &lt;code&gt;h=REPLICA_HOST,u=repl_user,p=repl_pass&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 PTCHECK_HOST 上执行检查命令：&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# pt-table-checksum --replicate=percona.checksums --nocheck-replication-filters --no-check-binlog-format \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h=&lt;span class=&quot;type&quot;&gt;MASTER_HOST&lt;/span&gt;,u=repl_user,p=&#39;repl_pass&#39;,P=&lt;span class=&quot;number&quot;&gt;13306&lt;/span&gt; --databases-regex=d_ts.* \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--recursion-&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt; dsn=h=&lt;span class=&quot;type&quot;&gt;DSN_DBHOST&lt;/span&gt;,u=percona_tk,p=&#39;percona_pass&#39;,P=&lt;span class=&quot;number&quot;&gt;3306&lt;/span&gt;,D=percona,t=dsn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;选项的意思就不多说了。&lt;/p&gt;
&lt;p&gt;检测完如果一致，其实是求个心安，特别是在做数据迁移的时候。如果不一致，那就需要借助 &lt;code&gt;pt-table-sync&lt;/code&gt; 工具了，不作介绍。&lt;/p&gt;
&lt;h2 id=&quot;常见错误&quot;&gt;&lt;a href=&quot;#常见错误&quot; class=&quot;headerlink&quot; title=&quot;常见错误&quot;&gt;&lt;/a&gt;常见错误&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Diffs cannot be detected because no slaves were found&lt;br&gt;不能自动找到从库，确认processlist或host或dsns方式用对了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cannot connect to h=slave1.&lt;em&gt;*&lt;/em&gt;.com,p=…,u=percona_user&lt;br&gt;可以在&lt;code&gt;pt-table-checksum&lt;/code&gt;命令前加&lt;code&gt;PTDEBUG=1&lt;/code&gt;来看详细的执行过程，如端口、用户名、权限错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Waiting for the –replicate table to replicate to XXX&lt;br&gt;问题出在 percona.checksums 表在从库不存在，根本原因是没有从主库同步过来，所以看一下从库是否延迟严重。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pausing because Threads_running=25&lt;br&gt;反复打印出类似上面停止检查的信息。这是因为当前数据库正在运行的线程数大于默认25，pt-table-checksum 为了减少对库的压力暂停检查了。等数据库压力过了就好了，或者也可以直接 Ctrl+C 终端，下一次加上&lt;code&gt;--resume&lt;/code&gt;继续执行，或者加大&lt;code&gt;--max-load=&lt;/code&gt;值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符集问题&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Error checksumming table Error executing checksum query: DBD::mysql::st execute failed: Illegal mix of collations&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12-17T14:48:04 Error checksumming table d&lt;span class=&quot;emphasis&quot;&gt;_ec_&lt;/span&gt;cs.t&lt;span class=&quot;emphasis&quot;&gt;_online_&lt;/span&gt;cs: Error executing checksum query: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DBD::mysql::st execute failed: Illegal mix of collations for operation &#39;concat_ws&#39; [for Statement &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;REPLACE INTO &lt;span class=&quot;code&quot;&gt;`percona`&lt;/span&gt;.&lt;span class=&quot;code&quot;&gt;`ali_checksum`&lt;/span&gt; (db, tbl, chunk, chunk&lt;span class=&quot;emphasis&quot;&gt;_index, lower_&lt;/span&gt;boundary, upper&lt;span class=&quot;emphasis&quot;&gt;_boundary, this_&lt;/span&gt;cnt, this&lt;span class=&quot;emphasis&quot;&gt;_crc) SELECT ?, ?, ?, ?, ?, ?, COUNT(*) AS cnt, COALESCE(LOWER(CONV(BIT_&lt;/span&gt;XOR(CAST(CRC32(CONCAT&lt;span class=&quot;emphasis&quot;&gt;_WS(&#39;#&#39;, `f_&lt;/span&gt;cs&lt;span class=&quot;emphasis&quot;&gt;_id`, `f_&lt;/span&gt;corp&lt;span class=&quot;emphasis&quot;&gt;_id`, `f_&lt;/span&gt;valid&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_show_&lt;/span&gt;name&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_online_&lt;/span&gt;msg&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_offline_&lt;/span&gt;msg&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_show_&lt;/span&gt;mobile&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_group_&lt;/span&gt;id&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_qq`, `f_&lt;/span&gt;show&lt;span class=&quot;emphasis&quot;&gt;_qq`, `f_&lt;/span&gt;msn&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_show_&lt;/span&gt;msn&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_sms_&lt;/span&gt;online&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_scheme`, `f_&lt;/span&gt;tel&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_telno`, `f_&lt;/span&gt;show&lt;span class=&quot;emphasis&quot;&gt;_tel`, `f_&lt;/span&gt;contact&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_mobile`, `f_&lt;/span&gt;position&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_other1`, `f_&lt;/span&gt;other2&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_other_&lt;/span&gt;text1&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_other_&lt;/span&gt;text2&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_email`, `f_&lt;/span&gt;qq&lt;span class=&quot;emphasis&quot;&gt;_first`, `f_&lt;/span&gt;qq&lt;span class=&quot;emphasis&quot;&gt;_first_&lt;/span&gt;type&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;open&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;qq&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;crmqq&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;yahoo&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;skype&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;aliww&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;msn&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;alibaba&lt;span class=&quot;code&quot;&gt;`, `&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_aids_&lt;/span&gt;alitrade&lt;span class=&quot;code&quot;&gt;`, CONCAT(ISNULL(`&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_show_&lt;/span&gt;name&lt;span class=&quot;code&quot;&gt;`), ISNULL(`&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_group_&lt;/span&gt;id&lt;span class=&quot;code&quot;&gt;`), ISNULL(`&lt;/span&gt;f&lt;span class=&quot;emphasis&quot;&gt;_qq`), ISNULL(`f_&lt;/span&gt;show&lt;span class=&quot;emphasis&quot;&gt;_qq`), ISNULL(`f_&lt;/span&gt;sms&lt;span class=&quot;emphasis&quot;&gt;_online`), ISNULL(`f_&lt;/span&gt;other&lt;span class=&quot;emphasis&quot;&gt;_text1`), ISNULL(`f_&lt;/span&gt;other&lt;span class=&quot;emphasis&quot;&gt;_text2`), ISNULL(`f_&lt;/span&gt;email&lt;span class=&quot;code&quot;&gt;`)) )) AS UNSIGNED)), 10, 16)), 0) AS crc FROM `&lt;/span&gt;d&lt;span class=&quot;emphasis&quot;&gt;_ec_&lt;/span&gt;cs&lt;span class=&quot;code&quot;&gt;`.`&lt;/span&gt;t&lt;span class=&quot;emphasis&quot;&gt;_online_&lt;/span&gt;cs` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;emphasis&quot;&gt;*checksum table*&lt;/span&gt;/&quot; with ParamValues: 0=&#39;d&lt;span class=&quot;emphasis&quot;&gt;_ts_&lt;/span&gt;profile&#39;, 1=&#39;t&lt;span class=&quot;emphasis&quot;&gt;_user_&lt;/span&gt;account&#39;, 2=1, 3=undef, 4=undef, 5=undef] at /usr/bin/pt-table-checksum line 10520.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;是个bug，暂时无法解决，&lt;a href=&quot;https://bugs.launchpad.net/percona-toolkit/+bug/1427552&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Illegal mix of collations for operation ‘concat_ws’&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.percona.com/doc/percona-toolkit/2.2/pt-table-checksum.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pt-table-checksum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nettedfish.com/blog/2013/06/04/check-replication-consistency-by-pt-table-checksum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用pt-table-checksum校验数据一致性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/melody_mr/article/details/45224249&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用pt-table-checksum及pt-table-sync校验复制一致性详细介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://imysql.com/2015/04/19/mysql-faq-pt-table-checksum-use-case.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pausing because Threads_running=0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2015/12/29/mysql_replica_pt-table-checksum/&quot;&gt;http://seanlook.com/2015/12/29/mysql_replica_pt-table-checksum/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;公司数据中心从托管机房迁移到阿里云，需要对mysql迁移（Replication）后的数据一致性进行校验，但又不能对生产环境使用造成影响，pt-table-checksum 成为了绝佳也是唯一的检查工具。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pt-table-checksum&lt;/code&gt; 是 Percona-Toolkit 的组件之一，用于检测MySQL主、从库的数据是否一致。其原理是在主库执行基于statement的sql语句来生成主库数据块的checksum，把相同的sql语句传递到从库执行，并在从库上计算相同数据块的checksum，最后，比较主从库上相同数据块的checksum值，由此判断主从数据是否一致。检测过程根据唯一索引将表按row切分为块（chunk），以为单位计算，可以避免锁表。检测时会自动判断复制延迟、 master的负载， 超过阀值后会自动将检测暂停，减小对线上服务的影响。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pt-table-checksum&lt;/code&gt; 默认情况下可以应对绝大部分场景，官方说，即使上千个库、上万亿的行，它依然可以很好的工作，这源自于设计很简单，一次检查一个表，不需要太多的内存和多余的操作；必要时，&lt;code&gt;pt-table-checksum&lt;/code&gt; 会根据服务器负载动态改变 chunk 大小，减少从库的延迟。&lt;/p&gt;
&lt;p&gt;为了减少对数据库的干预，&lt;code&gt;pt-table-checksum&lt;/code&gt;还会自动侦测并连接到从库，当然如果失败，可以指定&lt;code&gt;--recursion-method&lt;/code&gt;选项来告诉从库在哪里。它的易用性还体现在，复制若有延迟，在从库 checksum 会暂停直到赶上主库的计算时间点（也通过选项&lt;code&gt;--&lt;/code&gt;设定一个可容忍的延迟最大值，超过这个值也认为不一致）。 &lt;/p&gt;
&lt;p&gt;为了保证主数据库服务的安全，该工具实现了许多保护措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自动设置 &lt;code&gt;innodb_lock_wait_timeout&lt;/code&gt; 为1s，避免引起&lt;/li&gt;
&lt;li&gt;默认当数据库有25个以上的并发查询时，&lt;code&gt;pt-table-checksum&lt;/code&gt;会暂停。可以设置 &lt;code&gt;--max-load&lt;/code&gt; 选项来设置这个阀值&lt;/li&gt;
&lt;li&gt;当用 Ctrl+C 停止任务后，工具会正常的完成当前 chunk 检测，下次使用 &lt;code&gt;--resume&lt;/code&gt; 选项启动可以恢复继续下一个 chunk&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;工作过程&quot;&gt;&lt;a href=&quot;#工作过程&quot; class=&quot;headerlink&quot; title=&quot;工作过程&quot;&gt;&lt;/a&gt;工作过程&lt;/h2&gt;&lt;p&gt;直接看 &lt;a href=&quot;http://www.nettedfish.com/blog/2013/06/04/check-replication-consistency-by-pt-table-checksum/&quot;&gt;nettedfish&lt;/a&gt; 的说明：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1. 连接到主库：pt工具连接到主库，然后自动发现主库的所有从库。默认采用show full processlist来查找从库，但是这只有在主从实例端口相同的情况下才有效。&lt;br&gt;3. 查找主库或者从库是否有复制过滤规则：这是为了安全而默认检查的选项。你可以关闭这个检查，但是这可能导致checksum的sql语句要么不会同步到从库，要么到了从库发现从库没有要被checksum的表，这都会导致从库同步卡库。&lt;br&gt;5. 开始获取表，一个个的计算。&lt;br&gt;6. 如果是表的第一个chunk，那么chunk-size一般为1000；如果不是表的第一个chunk，那么采用19步中分析出的结果。&lt;br&gt;7. 检查表结构，进行数据类型转换等，生成checksum的sql语句。&lt;br&gt;8. 根据表上的索引和数据的分布，选择最合适的split表的方法。&lt;br&gt;9. 开始checksum表。&lt;br&gt;10. 默认在chunk一个表之前，先删除上次这个表相关的计算结果。除非–resume。&lt;br&gt;14. 根据explain的结果，判断chunk的size是否超过了你定义的chunk-size的上限。如果超过了，为了不影响线上性能，这个chunk将被忽略。&lt;br&gt;15. 把要checksum的行加上for update锁，并计算。&lt;br&gt;17-18. 把计算结果存储到master_crc master_count列中。&lt;br&gt;19. 调整下一个chunk的大小。&lt;br&gt;20. 等待从库追上主库。如果没有延迟备份的从库在运行，最好检查所有的从库，如果发现延迟最大的从库延迟超过max-lag秒，pt工具在这里将暂停。&lt;br&gt;21. 如果发现主库的max-load超过某个阈值，pt工具在这里将暂停。&lt;br&gt;22. 继续下一个chunk，直到这个table被chunk完毕。&lt;br&gt;23-24. 等待从库执行完checksum，便于生成汇总的统计结果。每个表汇总并统计一次。&lt;br&gt;25-26. 循环每个表，直到结束。&lt;br&gt;校验结束后，在每个从库上，执行如下的sql语句即可看到是否有主从不一致发生： &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; percona.checksums &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; master_cnt &amp;lt;&amp;gt; this_cnt &lt;span class=&quot;keyword&quot;&gt;OR&lt;/span&gt; master_crc &amp;lt;&amp;gt; this_crc &lt;span class=&quot;keyword&quot;&gt;OR&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ISNULL&lt;/span&gt;(master_crc) &amp;lt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;ISNULL&lt;/span&gt;(this_crc) \G&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://seanlook.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://seanlook.com/tags/mysql/"/>
    
      <category term="主从复制" scheme="http://seanlook.com/tags/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    
      <category term="percona" scheme="http://seanlook.com/tags/percona/"/>
    
  </entry>
  
  <entry>
    <title>使用 Xtrabackup 在线对MySQL做主从复制</title>
    <link href="http://seanlook.com/2015/12/14/mysql-replicas/"/>
    <id>http://seanlook.com/2015/12/14/mysql-replicas/</id>
    <published>2015-12-14T02:21:25.000Z</published>
    <updated>2015-12-13T16:46:23.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-说明&quot;&gt;&lt;a href=&quot;#1-说明&quot; class=&quot;headerlink&quot; title=&quot;1. 说明&quot;&gt;&lt;/a&gt;1. 说明&lt;/h2&gt;&lt;h3 id=&quot;1-1-xtrabackup&quot;&gt;&lt;a href=&quot;#1-1-xtrabackup&quot; class=&quot;headerlink&quot; title=&quot;1.1 xtrabackup&quot;&gt;&lt;/a&gt;1.1 xtrabackup&lt;/h3&gt;&lt;p&gt;mysqldump对于导出10G以下的数据库或几个表，还是适用的，而且更快捷。一旦数据量达到100-500G，无论是对原库的压力还是导出的性能，mysqldump就力不从心了。Percona-Xtrabackup备份工具，是实现MySQL在线热备工作的不二选择，可进行全量、增量、单表备份和还原。（但当数据量更大时，可能需要考虑分库分表，或使用 LVM 快照来加快备份速度了）&lt;/p&gt;
&lt;p&gt;2.2版本 xtrabackup 能对InnoDB和XtraDB存储引擎的数据库非阻塞地备份，innobackupex通过perl封装了一层xtrabackup，对MyISAM的备份通过加表读锁的方式实现。2.3版本 xtrabackup 命令直接支持MyISAM引擎。&lt;/p&gt;
&lt;p&gt;XtraBackup优势 ：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无需停止数据库进行InnoDB热备&lt;/li&gt;
&lt;li&gt;增量备份MySQL&lt;/li&gt;
&lt;li&gt;流压缩到传输到其它服务器&lt;/li&gt;
&lt;li&gt;能比较容易地创建主从同步&lt;/li&gt;
&lt;li&gt;备份MySQL时不会增大服务器负载&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;1-2-replication&quot;&gt;&lt;a href=&quot;#1-2-replication&quot; class=&quot;headerlink&quot; title=&quot;1.2 replication&quot;&gt;&lt;/a&gt;1.2 replication&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;为什么要做主从复制？&lt;/strong&gt;&lt;br&gt;我想这是要在实施以前要想清楚的问题。是为了实现读写分离，减轻主库负载或数据分析？ 为了数据安全，做备份恢复？主从切换做高可用？&lt;br&gt;大部分场景下，以上三个问号一主一从都能够解决，而且任何生产环境都建议你至少要有一个从库，假如你的读操作压力特别大，甚至要做一主多从，还可以不同的slave扮演不同的角色，例如使用不同的索引，或者不同的存储引擎，或使用一个小内存server做slave只用于备份。（当然slave太多也会对master的负载和网络带宽造成压力，此时可以考虑级联复制，即 A-&amp;gt;B-&amp;gt;C ）&lt;/p&gt;
&lt;p&gt; 还有需要考虑的是，一主一从，一旦做了主从切换，不通过其它HA手段干预的话，业务访问的还是原IP，而且原主库很容易就作废了。于是 主-主 复制就产生了，凭借各自不同的 server-id ，可以避免 “A的变化同步到B，B应用变化又同步到A” 这样循环复制的问题。但建议是，主主复制，其中一个主库强制设置为只读，主从切换后架构依然是可用的。&lt;/p&gt;
&lt;p&gt; 复制过程是slave主动向master拉取，而不是master去推的，所以理想情况下做搭建主从时不需要master做出任何改变甚至停服，slave失败也不影响主库。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;复制类型&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于语句的复制：&lt;code&gt;STATEMENT&lt;/code&gt;，在主服务器上执行的SQL语句，在从服务器上执行同样的语句，有可能会由于SQL执行上下文环境不同而是数据不一致，例如调用NOW()函数。MySQL在5.7.7以前默认采用基于语句的复制，在 5.7.7 及以后版本默认改用 row-based。   &lt;/li&gt;
&lt;li&gt;基于行的复制：&lt;code&gt;ROW&lt;/code&gt;，把改变的内容复制过去，而不是把命令在从服务器上执行一遍。从mysql5.0开始支持，能够严格保证数据完全一致，但此时用&lt;code&gt;mysqlbinlog&lt;/code&gt;去分析日志就没啥意义。因为任何一条update语句，都会把涉及到的行数据全部set值，所以binlog文件会比较大。&lt;br&gt;（遇到的一个坑是，迁移时，从库改正了字段默认值定义，但数据在主库更改后，即使产生的新数据默认值是正确的，但基于行的复制依然用不正确的值字段全部更新了）&lt;/li&gt;
&lt;li&gt;混合类型的复制: &lt;code&gt;MIXED&lt;/code&gt;，默认采用基于语句的复制，一旦发现基于语句的无法精确的复制时，就会采用基于行的复制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mysql系统库&lt;code&gt;mysql&lt;/code&gt;库里面表的日志记录格式需要说明：在通过如INSERT、UPDATE、DELETE、TRUNCATE等方式直接修改数据的语句，使用&lt;code&gt;binlog_format&lt;/code&gt;指定的方式记录，但使用GRANT、ALTER、CREATE、RENAME等改动的mysql库里数据的，会强制使用&lt;code&gt;statement-based&lt;/code&gt;方式记录binlog。&lt;/p&gt;
&lt;p&gt;可以在线修改二进制日志类型，如&lt;code&gt;SET SESSION binlog_format=MIXED;&lt;/code&gt;，需要&lt;code&gt;SUPER&lt;/code&gt;权限。&lt;/p&gt;
&lt;p&gt; 复制类型还可以分为 异步复制和半同步复制。&lt;br&gt; 通常没说明指的都是异步，即主库执行完Commit后，在主库写入Binlog日志后即可成功返回客户端，无需等等Binlog日志传送给从库，一旦主库宕机，有可能会丢失日志。而半同步复制，是等待其中一个从库也接收到Binlog事务并成功写入Relay Log之后，才返回Commit操作成功给客户端；如此半同步就保证了事务成功提交后至少有两份日志记录，一份在主库Binlog上，另一份在从库的Relay Log上，从而进一步保证数据完整性；半同步复制很大程度取决于主从网络RTT（往返时延），以插件 semisync_master/semisync_slave 形式存在。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;原理&lt;/strong&gt;&lt;br&gt;(1) master将改变记录到二进制日志(binary log)中（这些记录叫做二进制日志事件，binary log events）；&lt;br&gt;(2) slave将master的binary log events拷贝到它的中继日志(relay log)；&lt;br&gt;(3) slave重做中继日志中的事件，将改变反映它自己的数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/mysql-replica-concept.jpg&quot; alt=&quot;mysql-replication&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该过程的第一部分就是master记录二进制日志。在每个事务更新数据完成之前，master在二进制日志记录这些改变。MySQL将事务串行的写入二进制日志，即使事务中的语句都是交叉执行的。在事件写入二进制日志完成后，master通知存储引擎提交事务。&lt;/li&gt;
&lt;li&gt;下一步将master的binary log拷贝到它自己的中继日志。首先，slave开始一个工作线程——I/O线程。I/O线程在master上打开一个普通的连接，请求从指定日志文件的指定位置之后的日志内容，然后开始binlog dump process。Binlog dump process从master的二进制日志中读取事件，如果已经跟上master，它会睡眠并等待master产生新的事件。I/O线程将这些事件写入中继日志。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SQL slave thread（SQL从线程）处理该过程的最后一步。SQL线程从中继日志读取事件，并重放其中的事件而更新slave的数据，使其与master中的数据一致。只要该线程与I/O线程保持一致，中继日志通常会位于OS的缓存中，所以中继日志的开销很小。&lt;/p&gt;
&lt;p&gt;此外，在master中也有一个工作线程：和其它MySQL的连接一样，slave在master中打开一个连接也会使得master开始一个线程。复制过程有一个很重要的限制——复制在slave上是串行化的，也就是说master上的并行更新操作不能在slave上并行操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;补充:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mysql 5.7开始加入了多源复制，这个特性对同时有很多个mysql实例是很有用的，阿里云RDS（迁移）实现了类似的方式。&lt;/li&gt;
&lt;li&gt;从MySQL 5.6.2开始，mysql binlog支持checksum校验，并且5.6.6默认启用（CRC32），这对自己模拟实现mysql复制的场景有影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下面开始配置主从&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;　　主从版本一致—&amp;gt;主库授权复制帐号—&amp;gt;确保开启binlog及主从server_id唯一—&amp;gt;xtrabackup恢复到从库—&amp;gt;记录xtrabackup_binlog_info中binlog名称及偏移量—&amp;gt;从库change master to —&amp;gt;slave start—&amp;gt;检查两个yes&lt;/p&gt;
&lt;h2 id=&quot;2-创建复制账号&quot;&gt;&lt;a href=&quot;#2-创建复制账号&quot; class=&quot;headerlink&quot; title=&quot;2. 创建复制账号&quot;&gt;&lt;/a&gt;2. 创建复制账号&lt;/h2&gt;&lt;p&gt;在主库上&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt; GRANT REPLICATION SLAVE ON *.* TO &amp;apos;slave_ali&amp;apos;@&amp;apos;192.168.5.%&amp;apos; IDENTIFIED BY &amp;apos;slave_ali_pass&amp;apos;;  
mysql&amp;gt; FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;3-使用Percona-Xtrabackup恢复数据&quot;&gt;&lt;a href=&quot;#3-使用Percona-Xtrabackup恢复数据&quot; class=&quot;headerlink&quot; title=&quot;3. 使用Percona-Xtrabackup恢复数据&quot;&gt;&lt;/a&gt;3. 使用Percona-Xtrabackup恢复数据&lt;/h2&gt;&lt;p&gt;这里假设比较简单的情况：全量备份，全量恢复，不涉及增量。&lt;/p&gt;
&lt;p&gt;安装和具体使用，见&lt;a href=&quot;&quot;&gt;文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;赋予备份用户权限：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; CREATE USER &lt;span class=&quot;string&quot;&gt;&#39;bkpuser&#39;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&#39;localhost&#39;&lt;/span&gt; IDENTIFIED BY &lt;span class=&quot;string&quot;&gt;&#39;bkppass&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; GRANT RELOAD, LOCK TABLES, REPLICATION CLIENT,PROCESS,SUPER &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; *.* TO &lt;span class=&quot;string&quot;&gt;&#39;bkpuser&#39;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&#39;localhost&#39;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql&amp;gt; FLUSH PRIVILEGES&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;完整的选项使用请执行innobackupex –-help，这里只介绍使用常用的选项进行完整备份及增量备份和还原。&lt;/p&gt;
&lt;p&gt;这一节是把数据恢复到从库，借此记录一下xtrabackup的使用（用了云之后，备份技能都丢了~）。生产环境你应该是早就有了xtrabackup的备份，做从库时只需要把备份拷过来，解压恢复。&lt;/p&gt;
&lt;p&gt;假设 MySQL 安装目录在&lt;code&gt;/opt/mysql&lt;/code&gt;，my.cnf配置文件&lt;code&gt;/opt/mysql/my.cnf&lt;/code&gt;，端口3306，数据目录&lt;code&gt;/opt/mysql_data&lt;/code&gt;，sock位于&lt;code&gt;/opt/mysql_data/mysql.sock&lt;/code&gt;。备份数据放在&lt;code&gt;/data/backup/mysql/&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;3-1-全量备份&quot;&gt;&lt;a href=&quot;#3-1-全量备份&quot; class=&quot;headerlink&quot; title=&quot;3.1 全量备份&quot;&gt;&lt;/a&gt;3.1 全量备份&lt;/h3&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;export BKP_PASS=&lt;span class=&quot;string&quot;&gt;&quot;bkppass&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$ &lt;/span&gt;innobackupex --defaults-file=&lt;span class=&quot;regexp&quot;&gt;/opt/mysql&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/my.cnf --host=localhost --port=3306 --user=bkpuser --password=$&amp;#123;BKP_PASS&amp;#125; /data&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/backup/mysql&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;默认会以当天 日期+时间 戳命名备份目录，如 2015-09-16_00-00-02。一般会对它进行tar压缩，由于tar只能单进程，所以往往这个压缩过程会比备份过程耗时2倍还多。拷贝到需要恢复（做从库）的目录。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;如果手头有一份未压缩的全备数据，要在另一台恢复，其实还不如直接 rsync 过来，将近400G的数据压缩与解压缩过程特别漫长。
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;3-2-全量恢复&quot;&gt;&lt;a href=&quot;#3-2-全量恢复&quot; class=&quot;headerlink&quot; title=&quot;3.2 全量恢复&quot;&gt;&lt;/a&gt;3.2 全量恢复&lt;/h3&gt;&lt;p&gt;在恢复的数据库服务器（从库）上：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;恢复准备&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ innobackupex --&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;memory&lt;/span&gt;=16G --apply-&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt; 2015-09-16_00-00-02&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;确认数据库是关闭的，并且datadir，目录下为空&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ innobackupex --defaults-&lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;=/opt/mysql/my.cnf --&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;memory&lt;/span&gt;=16G --&lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;-back 2015-09-16_00-00-02&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

第一步是恢复准备，apply-log应用全备时 log sequence number 之后的数据，完了后会输出类似 InnoDB: Last MySQL binlog file position 0 262484673, file name ./mysql-bin.000135 的信息，告诉我们了后面的从库应该从哪个地方开始复制。时间不会很长，但最好用screen之类的软件放到后台执行，以免终端断开，功亏一篑。

第二步使用新的my.cnf文件，将完整的mysql数据文件拷贝到datadir下。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;4-做从库&quot;&gt;&lt;a href=&quot;#4-做从库&quot; class=&quot;headerlink&quot; title=&quot;4. 做从库&quot;&gt;&lt;/a&gt;4. 做从库&lt;/h2&gt;&lt;p&gt;上面恢复过程最后一步&lt;code&gt;apply-log&lt;/code&gt;完成之后，会得到一个lsn position 和binlog文件名：262484673、mysql-bin.000135。下面开始从库制作。&lt;/p&gt;
&lt;p&gt;一般在&lt;code&gt;copy-back&lt;/code&gt;之后需要修改数据文件目录的属性：&lt;br&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# chown -R mysql.mysql /opt/mysql_data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-1-my-cnf&quot;&gt;&lt;a href=&quot;#4-1-my-cnf&quot; class=&quot;headerlink&quot; title=&quot;4.1 my.cnf&quot;&gt;&lt;/a&gt;4.1 my.cnf&lt;/h3&gt;&lt;p&gt;从库的配置文件简单一点可以从主库拷贝过来，但根据需要，要注意以下几处&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;server-id一定不能与主库相同&lt;br&gt;否则，会出现如下错误：&lt;br&gt;Slave: received end packet FROM server, apparent master shutdown&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从库一般作为只读库使用，所以为安全起见，设置只读 &lt;code&gt;set global read_only=1&lt;/code&gt;;&lt;br&gt;可以在从服务器的 my.cnf 里加入&lt;code&gt;read-only&lt;/code&gt;参数来实现这一点，唯一需要注意的一点事read-only仅对没有super权限的用户有效。所以最好核对一下连接从服务器的用户，确保其没有super权限。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于从库的事件&lt;br&gt;MYSQL Replication 可以很好的达到你的预期：从库的事件不会自己去执行，主库会把event执行的结果直接同步。在statement模式下，复制的是 event BODY 里的SQL，在row模式下是主库事件执行完成后影响的行精确复制。&lt;/p&gt;
&lt;p&gt;  从库 event_scheduler 参数是被忽略的，并且每个event 状态会是 SLAVESIDE_DISABLED ，但CREATE/ALTER EVENT等操作语句是会复制。主从切换后，从库事件状态会变成ENABLE。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;参数调整&lt;br&gt;从库是不允许写入的，否则数据就不一致了。从库实例的配置可以不要主库那么高，比如原16G的buffer pool，根据用途，从库可以设到4-8G（当时前提是将来你也不打算把它切换为主库用）。&lt;br&gt;相应的，read_buffer_size，sort_buffer_size, query_cache_size 这些读相关参数可以略微增大。当然我一般都懒得去改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;skip-slave-start&lt;br&gt;主从创建完成后，默认情况下次启动从库，会自动启动复制进程，一般这也正是我们需要的，但在维护阶段时你可能不想从库启动后立即开始复制，&lt;code&gt;--skip-slave-start&lt;/code&gt;选项可以帮到你。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;log-slave-updates&lt;br&gt;正常情况从库是不需要写回放日志产生的binlog，无形中增加服务器压力。但如果你想要实现级联复制即 &lt;code&gt;A -&amp;gt; B -&amp;gt; C&lt;/code&gt; ，B同时是A的从库，也是C的主库，就需要开启 log-bin 和 log-slave-updates 。&lt;/p&gt;
&lt;p&gt;  另外，建议显示设置 &lt;code&gt;log-bin=mysql-bin&lt;/code&gt; 确保主从正常切换。 &lt;code&gt;show variables like &amp;#39;log%&amp;#39;&lt;/code&gt; 查看当前值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关于过滤表见&lt;a href=&quot;&quot;&gt;mysql-replica-filter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sync_binlog&lt;br&gt;For the greatest possible durability and consistency in a replication setup using InnoDB with transactions, you should use innodb_flush_log_at_trx_commit=1 and sync_binlog=1 in the master my.cnf file.&lt;/p&gt;
&lt;p&gt;  上面的话同时也意味着性能最低。可以在这埋点，假如出现慢的情况，把两参数调成2。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4-2-启动从库&quot;&gt;&lt;a href=&quot;#4-2-启动从库&quot; class=&quot;headerlink&quot; title=&quot;4.2 启动从库&quot;&gt;&lt;/a&gt;4.2 启动从库&lt;/h3&gt;&lt;p&gt;启动数据库，注意看日志&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;regexp&quot;&gt;/opt/my&lt;/span&gt;sql&lt;span class=&quot;regexp&quot;&gt;/bin/my&lt;/span&gt;sqld_safe --defaults-&lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;=&lt;span class=&quot;regexp&quot;&gt;/opt/my&lt;/span&gt;sql&lt;span class=&quot;regexp&quot;&gt;/my.cnf &amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;提示：如果你不确定这个库是谁的从库，保守起见加上&lt;code&gt;--skip-slave-start&lt;/code&gt;启动，兴许能防止数据不一致。&lt;/p&gt;
&lt;h3 id=&quot;4-3-change-master&quot;&gt;&lt;a href=&quot;#4-3-change-master&quot; class=&quot;headerlink&quot; title=&quot;4.3 change master&quot;&gt;&lt;/a&gt;4.3 change master&lt;/h3&gt;&lt;p&gt;在从库上&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mysql -uslave_ali -p&amp;apos;slave_ali_pass&amp;apos; -S /opt/mysql_data/mysql.sock
mysql&amp;gt; change master to master_host=MASTER_HOST, master_port=3306, 
       master_user=&amp;apos;slave_ali&amp;apos;,master_password=&amp;apos;slave_ali_pass&amp;apos;,
       master_log_file=&amp;apos;mysql-bin.000135&amp;apos;, master_log_pos=262484673;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的 master_log_file 和 master_log_pos 即是输出的值，也可以在新的数据目录下&lt;code&gt;xtrabackup_binlog_info&lt;/code&gt;找到信息。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt; show slave status\G
mysql&amp;gt; start slave;
mysql&amp;gt; show slave status\G
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;4-4-验证同步延迟&quot;&gt;&lt;a href=&quot;#4-4-验证同步延迟&quot; class=&quot;headerlink&quot; title=&quot;4.4 验证同步延迟&quot;&gt;&lt;/a&gt;4.4 验证同步延迟&lt;/h3&gt;&lt;p&gt;从库执行 show slave status\G&lt;br&gt;节选：&lt;br&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      Slave_IO_State:&lt;/span&gt; Waiting for master to send event&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      Master_Log_File:&lt;/span&gt; mysql-bin&lt;span class=&quot;number&quot;&gt;.000004&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  Read_Master_Log_Pos:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;931&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;       Relay_Log_File:&lt;/span&gt; slave1-relay-bin&lt;span class=&quot;number&quot;&gt;.000056&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;        Relay_Log_Pos:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;950&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;Relay_Master_Log_File:&lt;/span&gt; mysql-bin&lt;span class=&quot;number&quot;&gt;.000004&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;     Slave_IO_Running:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;Yes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;    Slave_SQL_Running:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;Yes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;   Exec_Master_Log_Pos:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;931&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;      Relay_Log_Space:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;408&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;Seconds_Behind_Master:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Master_Log_File&lt;/code&gt;： I/O线程当前正在读取的主服务器二进制日志文件的名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Read_Master_Log_Pos&lt;/code&gt;：本机I/O线程读取主服务器二进制日志位置&lt;br&gt;上面2各值，与在主库执行&lt;code&gt;show master status;&lt;/code&gt;看到的值如果基本接近，说明从库&lt;em&gt;IO线程&lt;/em&gt;已经赶上了主库的binlog。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Relay_Master_Log_File&lt;/code&gt;: 由SQL线程执行的包含多数近期事件的主服务器二进制日志文件的名称&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Exec_Master_Log_Pos&lt;/code&gt;: SQL线程执行来自master的二进制日志最后一个事件位置&lt;br&gt;与上面的&lt;code&gt;Relay_Master_Log_File&lt;/code&gt;一起，同&lt;code&gt;Master_Log_File&lt;/code&gt;、&lt;code&gt;Read_Master_Log_Pos&lt;/code&gt;比较，能看到&lt;em&gt;SQL线程&lt;/em&gt;是否已经赶上从库本地的IO线程。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Slave_IO_Running&lt;/code&gt;：I/O线程是否启动并成功连接到主服务器上&lt;br&gt;一般和下面的&lt;code&gt;Slave_IO_Running&lt;/code&gt;和&lt;code&gt;Seconds_Behind_Master&lt;/code&gt;一起监控主从健康状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Slave_SQL_Running&lt;/code&gt;：SQL线程是否启动&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Seconds_Behind_Master&lt;/code&gt;: 从属服务器“落后”多少秒&lt;br&gt;官网的解释是：The number of seconds that the slave SQL thread is behind processing the master binary log。但是当 SBM 为 0 时也不代表一定没有延迟，因为可能因为网络慢的缘故，从库的IO线程传输binlog太慢，它的SQL线程应用日志很容易就赶上relay log，但实际主库产生的binlog比传输的快，就会造成为0的假象。&lt;br&gt;有时你反复status会发现 Seconds_Behind_Master 的值在0与一个很大的数之间波动，有可能是主库上执行了一个非常大的event，没执行完毕的时候从库SBM显示为0，event执行完成并传输完binlog后，就会显示SBM非常巨大。（我在从机房迁移mysql到阿里云上部分库老出现这种情况，应该跟网络和大event都有关系）。&lt;br&gt;另外，relay log 中event记录的时间戳是主库上的时间戳，而SQL thread的时间戳是从库上的，如果主库和从库的时间偏差较大，那么这个SBM的意义就基本不存在了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-参考&quot;&gt;&lt;a href=&quot;#5-参考&quot; class=&quot;headerlink&quot; title=&quot;5. 参考&quot;&gt;&lt;/a&gt;5. 参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/hguisu/article/details/7325124&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;高性能Mysql主从架构的复制原理及配置详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.percona.com/blog/2013/01/09/how-does-mysql-replication-really-work/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How does MySQL Replication really work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000003063874&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;XtraBackup不停机不锁表搭建MySQL主从同步实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.simlinux.com/archives/236.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL复制原理与配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.6/en/replication-administration-status.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;许多模糊的内容还是看官网的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2015/12/14/mysql-replicas/&quot;&gt;http://seanlook.com/2015/12/14/mysql-replicas/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-说明&quot;&gt;&lt;a href=&quot;#1-说明&quot; class=&quot;headerlink&quot; title=&quot;1. 说明&quot;&gt;&lt;/a&gt;1. 说明&lt;/h2&gt;&lt;h3 id=&quot;1-1-xtrabackup&quot;&gt;&lt;a href=&quot;#1-1-xtrabackup&quot; class=&quot;headerlink&quot; title=&quot;1.1 xtrabackup&quot;&gt;&lt;/a&gt;1.1 xtrabackup&lt;/h3&gt;&lt;p&gt;mysqldump对于导出10G以下的数据库或几个表，还是适用的，而且更快捷。一旦数据量达到100-500G，无论是对原库的压力还是导出的性能，mysqldump就力不从心了。Percona-Xtrabackup备份工具，是实现MySQL在线热备工作的不二选择，可进行全量、增量、单表备份和还原。（但当数据量更大时，可能需要考虑分库分表，或使用 LVM 快照来加快备份速度了）&lt;/p&gt;
&lt;p&gt;2.2版本 xtrabackup 能对InnoDB和XtraDB存储引擎的数据库非阻塞地备份，innobackupex通过perl封装了一层xtrabackup，对MyISAM的备份通过加表读锁的方式实现。2.3版本 xtrabackup 命令直接支持MyISAM引擎。&lt;/p&gt;
&lt;p&gt;XtraBackup优势 ：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无需停止数据库进行InnoDB热备&lt;/li&gt;
&lt;li&gt;增量备份MySQL&lt;/li&gt;
&lt;li&gt;流压缩到传输到其它服务器&lt;/li&gt;
&lt;li&gt;能比较容易地创建主从同步&lt;/li&gt;
&lt;li&gt;备份MySQL时不会增大服务器负载&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;1-2-replication&quot;&gt;&lt;a href=&quot;#1-2-replication&quot; class=&quot;headerlink&quot; title=&quot;1.2 replication&quot;&gt;&lt;/a&gt;1.2 replication&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;为什么要做主从复制？&lt;/strong&gt;&lt;br&gt;我想这是要在实施以前要想清楚的问题。是为了实现读写分离，减轻主库负载或数据分析？ 为了数据安全，做备份恢复？主从切换做高可用？&lt;br&gt;大部分场景下，以上三个问号一主一从都能够解决，而且任何生产环境都建议你至少要有一个从库，假如你的读操作压力特别大，甚至要做一主多从，还可以不同的slave扮演不同的角色，例如使用不同的索引，或者不同的存储引擎，或使用一个小内存server做slave只用于备份。（当然slave太多也会对master的负载和网络带宽造成压力，此时可以考虑级联复制，即 A-&amp;gt;B-&amp;gt;C ）&lt;/p&gt;
&lt;p&gt; 还有需要考虑的是，一主一从，一旦做了主从切换，不通过其它HA手段干预的话，业务访问的还是原IP，而且原主库很容易就作废了。于是 主-主 复制就产生了，凭借各自不同的 server-id ，可以避免 “A的变化同步到B，B应用变化又同步到A” 这样循环复制的问题。但建议是，主主复制，其中一个主库强制设置为只读，主从切换后架构依然是可用的。&lt;/p&gt;
&lt;p&gt; 复制过程是slave主动向master拉取，而不是master去推的，所以理想情况下做搭建主从时不需要master做出任何改变甚至停服，slave失败也不影响主库。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://seanlook.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://seanlook.com/tags/mysql/"/>
    
      <category term="主从复制" scheme="http://seanlook.com/tags/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    
      <category term="备份" scheme="http://seanlook.com/tags/%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>南山南</title>
    <link href="http://seanlook.com/2015/11/01/nan-shan-hike/"/>
    <id>http://seanlook.com/2015/11/01/nan-shan-hike/</id>
    <published>2015-11-01T03:59:31.000Z</published>
    <updated>2015-11-01T03:59:31.000Z</updated>
    
    <content type="html">&lt;p&gt;今天11月1号，深圳的天气正好从这一天凉了起来，傍晚回住处的公交车上给家里打了个电话，是爸爸接的，说家里已经有点冷了。&lt;/p&gt;
&lt;p&gt;现在对冷没什么概念了，深圳是一个没有冬天的城市，一件外套就能过冬。也就是今天起风了出门才稍稍感觉到凉，昨天还热的不行呢——那是因为去爬山了。&lt;/p&gt;
&lt;p&gt;南山，2年前来这里的第一个月就听说过，但两次上过梧桐山，上半年爬过凤凰山，就偏偏离自己最近的南山未曾到访。山虽然不高，但一直放着不去还能再找到人陪我去不成，于是就响应党组织号召，登山去。&lt;/p&gt;
&lt;p&gt;周六下午，小明从公司过去，而我从家里坐公交过去，照计划的时间应该2点半可以集合，无奈在深大转车多等了20分钟，结果是小明跟其他人一起先从海关登山口上山，先到山顶者有奖，我晚十分钟到出发点，去追他们。出乎意料，迈进登山口就一直上台阶，上啊上啊上，T恤已经全湿了，我竟然还穿着紧身牛仔裤！（其实主要考虑到晚上吃饭方便）。由于平时也打打球，体力不算太差，20分钟上到了全程海拔一半的样子，还没追上，双腿力量也下降了，正好碰到没跟上大部队的两个人，就一起走了。后半程坡也小了很多，吹来一丝微风能感觉到背上一阵凉意。此时群里已经有人到观景台发图了，但奇怪的是那么一大波上去怎么才有2个人发图，原来拼的不仅仅是体力，还有手机信号……&lt;/p&gt;
&lt;p&gt;三点半时基本上都到顶了，风景还不错，能看到深圳湾大桥（据说晚上很美），和对面的香港。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nan-hilltop.jpg&quot; alt=&quot;nan-hilltop.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;团体里大部分我是认识的，有我以前的同事，和球场上认识的伙伴。虽然我已离职近4个月，但我党组织关系还在TP，也交了党费，这才有机会和他们一起出来。还有经费，号召大家买书，于是买了《摄影的艺术》《皮囊》等，小明也为他单反买了本，我看中的是他那本室内装饰和川菜食谱，嘿嘿。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;爬完山当然还有活动，自助餐——不是平时想象的哪种自助餐。蛇口是富人区，自助的当然是海鲜之类的，与大饱口福和四海一家有点像，除了种类没有后面两家多，味道和环境都还不错，感受一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nan-food.jpg&quot; alt=&quot;nan-food.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;原本以为5点半开吃，顶多2小时回去了（因为人多而且还有些不熟的），结果听说海上世界就在附近，反正刚刚为了吃回本，肚子都撑了，就走着去了。哦，想起原来当天是万圣节，可不热闹了。&lt;/p&gt;
&lt;p&gt;常去的南山腐败地，一个海岸城，一个欢乐海岸，怎么能漏了海上世界，也是早有听说却没来过。一路望去，好多歪果仁，而且装扮忒吓人。海上世界最中心有一艘“船”叫明华号，当然甲板上开着各种餐厅。无意听到人说8点整有水秀表演，几个大男人在一顿狂拍后，终于等来了 water show 。短短的三分钟！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nan-show.jpg&quot; alt=&quot;nan-show.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;周六算是疯了一天，周日计划还是学点东西，上午9点起来看了看puppet视频，下午去公司简单加了个班。上周经理不在，杂事一大堆，也是身不由己，也是欠了很多技术债。&lt;/p&gt;
&lt;p&gt;最后，晚上做了顿饭，忙活2个小时——可是三个人的两顿饭菜啊，不过挺有成就感的，因为吃完了……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;11月，你好！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址： &lt;a href=&quot;http://seanlook.com/2015/11/01/nan-shan-hike/&quot;&gt;http://seanlook.com/2015/11/01/nan-shan-hike/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天11月1号，深圳的天气正好从这一天凉了起来，傍晚回住处的公交车上给家里打了个电话，是爸爸接的，说家里已经有点冷了。&lt;/p&gt;
&lt;p&gt;现在对冷没什么概念了，深圳是一个没有冬天的城市，一件外套就能过冬。也就是今天起风了出门才稍稍感觉到凉，昨天还热的不行呢——那是因为去爬山了。&lt;/p&gt;
&lt;p&gt;南山，2年前来这里的第一个月就听说过，但两次上过梧桐山，上半年爬过凤凰山，就偏偏离自己最近的南山未曾到访。山虽然不高，但一直放着不去还能再找到人陪我去不成，于是就响应党组织号召，登山去。&lt;/p&gt;
&lt;p&gt;周六下午，小明从公司过去，而我从家里坐公交过去，照计划的时间应该2点半可以集合，无奈在深大转车多等了20分钟，结果是小明跟其他人一起先从海关登山口上山，先到山顶者有奖，我晚十分钟到出发点，去追他们。出乎意料，迈进登山口就一直上台阶，上啊上啊上，T恤已经全湿了，我竟然还穿着紧身牛仔裤！（其实主要考虑到晚上吃饭方便）。由于平时也打打球，体力不算太差，20分钟上到了全程海拔一半的样子，还没追上，双腿力量也下降了，正好碰到没跟上大部队的两个人，就一起走了。后半程坡也小了很多，吹来一丝微风能感觉到背上一阵凉意。此时群里已经有人到观景台发图了，但奇怪的是那么一大波上去怎么才有2个人发图，原来拼的不仅仅是体力，还有手机信号……&lt;/p&gt;
&lt;p&gt;三点半时基本上都到顶了，风景还不错，能看到深圳湾大桥（据说晚上很美），和对面的香港。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nan-hilltop.jpg&quot; alt=&quot;nan-hilltop.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;团体里大部分我是认识的，有我以前的同事，和球场上认识的伙伴。虽然我已离职近4个月，但我党组织关系还在TP，也交了党费，这才有机会和他们一起出来。还有经费，号召大家买书，于是买了《摄影的艺术》《皮囊》等，小明也为他单反买了本，我看中的是他那本室内装饰和川菜食谱，嘿嘿。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="随记" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="生活" scheme="http://seanlook.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>周末腐败地</title>
    <link href="http://seanlook.com/2015/10/25/weekends-badminton-ktv/"/>
    <id>http://seanlook.com/2015/10/25/weekends-badminton-ktv/</id>
    <published>2015-10-25T07:44:31.000Z</published>
    <updated>2015-10-25T07:44:31.000Z</updated>
    
    <content type="html">&lt;p&gt;下午一点钟才起来，今天本来也没什么安排，算不上睡懒觉，毕竟昨晚四点钟才睡。&lt;/p&gt;
&lt;p&gt;昨天（周六）公司写字楼的物业举办了一届羽毛球赛，七点钟就起来坐地铁来到侨城东，看来公司包的场地是华侨城锦绣花园的一个社区羽毛球馆，果然住着一群有钱人。我八点35到场，热个身，大概9点钟开始抽签，抽了个7号，也就是其他谁也抽到7号那就与我对打。运气太背了，一个估计有170斤的对手笑呵呵的站在我面前。人家力气大，专打我后场球，我手臂疼痛感还没恢复，被秒了。&lt;/p&gt;
&lt;p&gt;剩下没事只给我司的人拍照了。哎，虽然我手机拍照效果一般，但也不差，pp拍出来噪点严重，不清晰。然后觉得反正现在也没事，物业方也没找到合适的裁判，我就顺口应了句“我来吧”，裁女单。额，场面有多和谐我就不讲了，双方是挽着手上场的。本以为完事了，结果，又要裁男单，裁复赛，最后决赛。当时我想现在空下这么多场地，好好练几个球，可大家都不愿意顶替我去裁。最后前三甲决赛，就我一个喊着，“13比11，这一局比赛结束”——决赛果然精彩，双方咬着分不放。因为是循环赛，按最后每人赢的局数定名次，三人打了七局。这还是我第一次当裁判呢。&lt;/p&gt;
&lt;p&gt;回来时都12点多了，又困又累，一同事顺路就开车送我到了西乡。本以为可以冲个澡，睡四五个小时，结果，公司客户在投诉网站使用很慢，远程到公司找了一个小时原因没结果，还趴在桌上睡着了。（程序员节还出事情呢？）&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;等我醒来，室友几个约好了去民治聚餐，公司催命电话又打过来了，好在运维现在不止我一个，就让星星（我领导）去解决了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;真的很庆幸能有这么一群玩耍的朋友，我们七个是13年一同进TP的，离职只剩2个了，每次好久没约，就在群里吼一句，大家都不约而同的来了。乔帮主说的对，平时工作压力大，到了这，咱们就吹牛逼，自黑，互相调侃。好家伙，一顿饭能从下午五点半吃到十点，然后转战楼上KTV。我向来不喜欢唱歌这样的场所，但去也就去了，大家都自己人，不会唱歌瞎吼也没事（雷军的Are you OK都有人点，我还怕什么），玩玩骰子也可以。&lt;/p&gt;
&lt;p&gt;玩的真的很疯，但也很开心。几个人里面，有一对已经领证了，我们都看过他们的分分合合，在桌上听他吹自己的理想规划，心想结婚了就是不一样；另一个也是我理工同届了，经常一起开玩笑，他刚从TP离职去了一加；还有威哥，互相说对方做的饭不好吃；还有勤快的小明，善于自黑强哥，花痴文，正在创业的韦爷。&lt;/p&gt;
&lt;p&gt;到凌晨1点半实在是困了，一晚上嗓子哑了，芥末也吃了，圆满了。打个优步回到家，看似还清醒，贫民窟的百万富翁，没5分钟我就睡着了，醒来就一点了。&lt;/p&gt;
&lt;p&gt;晚上又去蹭原公司场地打球，不想宅家，提前把晚上的汤煲好——这样的周末过得才有意义。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址： &lt;a href=&quot;http://seanlook.com/2015/10/25/weekends-badminton-ktv/&quot;&gt;http://seanlook.com/2015/10/25/weekends-badminton-ktv/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;下午一点钟才起来，今天本来也没什么安排，算不上睡懒觉，毕竟昨晚四点钟才睡。&lt;/p&gt;
&lt;p&gt;昨天（周六）公司写字楼的物业举办了一届羽毛球赛，七点钟就起来坐地铁来到侨城东，看来公司包的场地是华侨城锦绣花园的一个社区羽毛球馆，果然住着一群有钱人。我八点35到场，热个身，大概9点钟开始抽签，抽了个7号，也就是其他谁也抽到7号那就与我对打。运气太背了，一个估计有170斤的对手笑呵呵的站在我面前。人家力气大，专打我后场球，我手臂疼痛感还没恢复，被秒了。&lt;/p&gt;
&lt;p&gt;剩下没事只给我司的人拍照了。哎，虽然我手机拍照效果一般，但也不差，pp拍出来噪点严重，不清晰。然后觉得反正现在也没事，物业方也没找到合适的裁判，我就顺口应了句“我来吧”，裁女单。额，场面有多和谐我就不讲了，双方是挽着手上场的。本以为完事了，结果，又要裁男单，裁复赛，最后决赛。当时我想现在空下这么多场地，好好练几个球，可大家都不愿意顶替我去裁。最后前三甲决赛，就我一个喊着，“13比11，这一局比赛结束”——决赛果然精彩，双方咬着分不放。因为是循环赛，按最后每人赢的局数定名次，三人打了七局。这还是我第一次当裁判呢。&lt;/p&gt;
&lt;p&gt;回来时都12点多了，又困又累，一同事顺路就开车送我到了西乡。本以为可以冲个澡，睡四五个小时，结果，公司客户在投诉网站使用很慢，远程到公司找了一个小时原因没结果，还趴在桌上睡着了。（程序员节还出事情呢？）&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="随记" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="生活" scheme="http://seanlook.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>在女性眼里，男人会做饭是种什么体验？</title>
    <link href="http://seanlook.com/2015/10/21/what-do-women-think-of-men-who-can-cook/"/>
    <id>http://seanlook.com/2015/10/21/what-do-women-think-of-men-who-can-cook/</id>
    <published>2015-10-21T15:56:25.000Z</published>
    <updated>2015-10-21T15:56:25.000Z</updated>
    
    <content type="html">&lt;p&gt;原文地址：&lt;a href=&quot;https://www.quora.com/What-do-women-think-of-men-who-can-cook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.quora.com/What-do-women-think-of-men-who-can-cook&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.quora.com/Shambhavi-Tripathi&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shambhavi Tripathi&lt;/a&gt;&lt;br&gt;翻译：&lt;a href=&quot;http://seanlook.com&quot;&gt;Seanlook&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;What-do-women-think-of-men-who-can-cook&quot;&gt;&lt;a href=&quot;#What-do-women-think-of-men-who-can-cook&quot; class=&quot;headerlink&quot; title=&quot;What do women think of men who can cook?&quot;&gt;&lt;/a&gt;What do women think of men who can cook?&lt;/h1&gt;&lt;p&gt;这个问题很有意思，我想我可以很好的回答这个问题，因为我有幸认识这些人。&lt;/p&gt;
&lt;p&gt;我的弟弟和我的两个好朋友都很擅长做饭，所以我将以他们为原型来回答。&lt;/p&gt;
&lt;p&gt;在我回答之前呢，我想提一下我自己算得上是一个极度偏执的人，因为我很爱吃。我就是个吃货（素食），我的味蕾从未被满足过，并且7×24小时不间断的寻找美食。然而，我自己对下厨一无所知，甚至麦琪面都下不好。好了，接下来让我来开始回答，在我看来男人会做饭是怎样的。&lt;br&gt;   &lt;img src=&quot;https://qph.is.quoracdn.net/main-qimg-add9126874364a433c43fef58eca6ea9?convert_to_webp=true&quot; alt=&quot;&quot;&gt;&lt;br&gt;   (Image Credits: &lt;a href=&quot;http://blog.sembrodesigns.com/tag/fathers-day/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fathers day Archives | Kitchen Remodeling&lt;/a&gt;)&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;他们对很小的细节感兴趣&lt;br&gt;大部分人去餐厅时会怎样做？好吧，我来告诉你我一般怎么做。要么根据我自己喜好点几种特定成分的菜（例如奶酪），要么心情好的时候，根据菜单上的图片来点一些新菜式。是的，这就是我点菜的水平。现在当我和我弟或者喜欢做饭的朋友一起出去时，他们会这样做：大声念出菜名，同时也会念出它包含些什么（无论菜名后面的括号里写的是什么）。他们会尝试想象一下如果自己做出来会是什么味道。如果他们还不满足于念出菜名，有可能还会叫来服务员，询问各种细节，比如制作的过程，那道菜通常要提前准备什么。他们对这个太感兴趣了！与此同时，我只好不耐烦的看这看那，心想，为什么他就不能随便点任何想吃的东西呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们极度追求完美&lt;br&gt;当他们为你刚做好一道鲜汁四溢佳肴，你如狼似虎的吃着，“天呐，不能更好吃了，太美味了，简直了！”。但当他们尝了一下，脸上摆出的奇怪的表情，我至今都没理解什么意思，他们会然后点评了一下小的不足并记在脑子里避免将来还犯同样的错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们很性感&lt;br&gt;我们很爱看一个男人在做饭，真的很难不爱上一个厨房里的男人。看着他用双手创造出精美的一道菜，如此动人。它超过了其它赏赐，他们做饭的姿态透着某种性感。看着他们为你准备一顿早餐或者一杯咖啡，绝对可以大幅度拉高性感指数。&lt;br&gt;&lt;img src=&quot;https://qph.is.quoracdn.net/main-qimg-dd5b1ae907feed29ebf3d60fdef322cd?convert_to_webp=true&quot; alt=&quot;&quot;&gt;&lt;br&gt;(Image Credits: &lt;a href=&quot;http://howardfalco.com/08/7-powerful-things-to-say-to-your-spouse-or-significant-other/istock_000018935400large/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;istock_000018935400large - Howard Falco&lt;/a&gt;) &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们经常给你的生活带来新体验&lt;br&gt;他们总乐意去发明新的菜式，也会学习各种你可能从没听过的烹饪方法。他们给你的生活带来新花样，这是可遇不可求的品质。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们觉得“做饭是女人的工作”这种想法很荒谬&lt;br&gt;这些人理解的下厨，是没有那么多局限的，这件事不仅仅限制只有女性才能做，他们完全打破这个令人愤怒的事实（印度除外），他们乐意并且为做出爱心饭菜的行为感到高兴。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们可以时刻为你做吃的&lt;br&gt;无论是中午还是半夜，只要你在他们面前表达意愿，想要他做东西给你吃，放心吧，他绝对不会拒绝你。甚至半夜在家里，我的胃由于饿在咕咕叫的时候，我请求正在忙其它事情的弟弟做点吃的，他从未说一个不字。相反，他总能带来你怎么也想不通他是如何利用以前一样的食材，做出完全超乎意料的东西来。谢谢老弟：P&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们身体比我们健康&lt;br&gt;拥有大量关于各式食物的知识，他们知道哪种食物是健康的，哪种可能对身体不好甚至是有害的。所以他们通过推荐相对均衡、健康的饮食习惯，让自己和身边的人也安全健康起来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们很擅长打开一个话题，特别是在陌生场合&lt;br&gt;全世界到处遍布食物，当你以一名游客或者其它身份出现在一个陌生地点时，这些会做饭的人会很轻易的跟当地人搭上话，和他们一起旅游会感到很轻松，因为他们总知道怎样不会冷场，不感到尴尬，跟陌生人可以很友好的交流。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们是天底下所有妈妈的“菜”&lt;br&gt;把他们介绍给你妈妈认识，并告诉说他会做饭，恐怕她听不进其它事情了。你妈妈将会对他印象深刻，甚至开始讨论关于菜式做法之类的事情。几乎每位母亲都爱这一点，你妈妈可能还会对你吼道：“向他学习！你甚至连杯茶都泡不好。”。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;他们绝不会要求我进厨房（最后但我喜欢）&lt;br&gt;由于他们知道我对做饭没有一点概念，所以我可以很舒适的待在任意地方。他们从不会指指点点，也不会让你上前帮忙，依然总是会做出美味佳肴来满足我和身边的人。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;MEN WHO CAN COOK ARE AMAZING AND A BLESSING. THEY ARE INTERNATIONALLY IN DEMAND AND TOTALLY RESPECTE.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2015/10/21/what-do-women-think-of-men-who-can-cook/&quot;&gt;http://seanlook.com/2015/10/21/what-do-women-think-of-men-who-can-cook/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文地址：&lt;a href=&quot;https://www.quora.com/What-do-women-think-of-men-who-can-cook&quot;&gt;https://www.quora.com/What-do-women-think-of-men-who-can-cook&lt;/a&gt;&lt;br&gt;作者：&lt;a href=&quot;https://www.quora.com/Shambhavi-Tripathi&quot;&gt;Shambhavi Tripathi&lt;/a&gt;&lt;br&gt;翻译：&lt;a href=&quot;http://seanlook.com&quot;&gt;Seanlook&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;What-do-women-think-of-men-who-can-cook&quot;&gt;&lt;a href=&quot;#What-do-women-think-of-men-who-can-cook&quot; class=&quot;headerlink&quot; title=&quot;What do women think of men who can cook?&quot;&gt;&lt;/a&gt;What do women think of men who can cook?&lt;/h1&gt;&lt;p&gt;这个问题很有意思，我想我可以很好的回答这个问题，因为我有幸认识这些人。&lt;/p&gt;
&lt;p&gt;我的弟弟和我的两个好朋友都很擅长做饭，所以我将以他们为原型来回答。&lt;/p&gt;
&lt;p&gt;在我回答之前呢，我想提一下我自己算得上是一个极度偏执的人，因为我很爱吃。我就是个吃货（素食），我的味蕾从未被满足过，并且7×24小时不间断的寻找美食。然而，我自己对下厨一无所知，甚至麦琪面都下不好。好了，接下来让我来开始回答，在我看来男人会做饭是怎样的。&lt;br&gt;   &lt;img src=&quot;https://qph.is.quoracdn.net/main-qimg-add9126874364a433c43fef58eca6ea9?convert_to_webp=true&quot; alt=&quot;&quot;&gt;&lt;br&gt;   (Image Credits: &lt;a href=&quot;http://blog.sembrodesigns.com/tag/fathers-day/&quot;&gt;Fathers day Archives | Kitchen Remodeling&lt;/a&gt;)&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://seanlook.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="翻译" scheme="http://seanlook.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
      <category term="做饭" scheme="http://seanlook.com/tags/%E5%81%9A%E9%A5%AD/"/>
    
  </entry>
  
  <entry>
    <title>回家看看（国庆）</title>
    <link href="http://seanlook.com/2015/09/30/the-way-home-20151001/"/>
    <id>http://seanlook.com/2015/09/30/the-way-home-20151001/</id>
    <published>2015-09-30T03:59:31.000Z</published>
    <updated>2015-09-30T03:59:31.000Z</updated>
    
    <content type="html">&lt;p&gt;汽车在公路上一路奔驰，车厢内很安静，大部分人闭目休息，能确定的是司机是清醒的，而我在后面靠窗的位置，取掉眼镜，不太清晰的望着窗外。一片片无人问津小树林，一片片因下雨而污浊的池塘水，一片片村庄、农田……﻿&lt;/p&gt;
&lt;p&gt;是的，老毛病又犯了，又要发感慨了。﻿﻿&lt;/p&gt;
&lt;p&gt;昨天这个时候还在深圳地铁上，忙忙碌碌，人挤人。每天朝七晚九，周末睡不醒，完全没有7月份换工作那会儿打了鸡血一样，与自己的约定也始终没坚持。早在一个月前，实在想不到国庆去哪，也是因为种种压力，澳门的计划，四川的计划，没法任性的说走就走，于是就选择了回家，去见见老同学们，去参加婚礼，去看看父母，去看看自己。﻿﻿&lt;/p&gt;
&lt;p&gt;昨天在列车上，看完了『侣行1』，作者带我们去探寻索马里的恐怖之都摩加迪沙，体验被枪抵住胸膛的心跳；带我们去北极的奥伊米亚康，在地冻天寒的雪地上露营；还深入乌克兰切尔诺贝利核电站，挑战核辐射恐惧；最后去感受毁灭与美学兼具的马鲁姆火山，看岩浆翻滚，体验生死，把命交给爱人。当然，不必羡慕，不必自悔，但哪怕我们生活做出他们百分之一的改变，至少深藏一颗不羁的内心，不要再一成不变，不要再泥潭深陷，就会变得不再慵懒，变得有趣。﻿﻿&lt;/p&gt;
&lt;p&gt;能折腾，有信仰，这是我对他们四人团队的极简总结。而这正是我还没走出的迷途，Yes和No用错地方。﻿﻿&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;人一生会遇到形形色色的人，相信每个人背后都有故事。这些人会对你产生重大影响的人，一双手都可以数的过来，而时常能陪在身边的更是屈指可数。与他们去经历欢笑与泪水，去经历生死与难忘，这样才懂得珍惜，不会恶语相向。很喜欢道士下山范伟讲的那段话，“人生七十古来稀，十年少小，十年老弱，还有五十年，五十年再分成日夜，只有二十五年的光景了，再加上 刮风下雨，三灾六病，人这一辈子 还能剩下多少好日子。”。工作，努力尽心就好，对自己做的事情负责；生活，本应多样。(写完这段，良辰都想吐了)﻿﻿&lt;/p&gt;
&lt;p&gt;火车上还看电影『遗弃』，差一点陷入平常悬疑片的路子，特别是女主开始怀疑自己的时候，好了，不剧透了，小电影里值得一看。﻿﻿&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/child-school.jpg&quot; alt=&quot;child-school.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;凌晨1点到的九江，以亲友马上过来接我为由，逃离出站口过分“热烈”的拉客仪式，不下十个说有小妹儿的，“我们这都这么叫”，终于在一公里开外的地方找到一个宾馆，尼玛，还是双标。抓紧时间睡了四个小时就滚了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址： &lt;a href=&quot;http://seanlook.com/2015/09/30/the-way-home-20151001/&quot;&gt;http://seanlook.com/2015/09/30/the-way-home-20151001/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;汽车在公路上一路奔驰，车厢内很安静，大部分人闭目休息，能确定的是司机是清醒的，而我在后面靠窗的位置，取掉眼镜，不太清晰的望着窗外。一片片无人问津小树林，一片片因下雨而污浊的池塘水，一片片村庄、农田……﻿&lt;/p&gt;
&lt;p&gt;是的，老毛病又犯了，又要发感慨了。﻿﻿&lt;/p&gt;
&lt;p&gt;昨天这个时候还在深圳地铁上，忙忙碌碌，人挤人。每天朝七晚九，周末睡不醒，完全没有7月份换工作那会儿打了鸡血一样，与自己的约定也始终没坚持。早在一个月前，实在想不到国庆去哪，也是因为种种压力，澳门的计划，四川的计划，没法任性的说走就走，于是就选择了回家，去见见老同学们，去参加婚礼，去看看父母，去看看自己。﻿﻿&lt;/p&gt;
&lt;p&gt;昨天在列车上，看完了『侣行1』，作者带我们去探寻索马里的恐怖之都摩加迪沙，体验被枪抵住胸膛的心跳；带我们去北极的奥伊米亚康，在地冻天寒的雪地上露营；还深入乌克兰切尔诺贝利核电站，挑战核辐射恐惧；最后去感受毁灭与美学兼具的马鲁姆火山，看岩浆翻滚，体验生死，把命交给爱人。当然，不必羡慕，不必自悔，但哪怕我们生活做出他们百分之一的改变，至少深藏一颗不羁的内心，不要再一成不变，不要再泥潭深陷，就会变得不再慵懒，变得有趣。﻿﻿&lt;/p&gt;
&lt;p&gt;能折腾，有信仰，这是我对他们四人团队的极简总结。而这正是我还没走出的迷途，Yes和No用错地方。﻿﻿&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="随记" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="生活" scheme="http://seanlook.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>nice is not nice</title>
    <link href="http://seanlook.com/2015/07/14/nice-is-not-nice/"/>
    <id>http://seanlook.com/2015/07/14/nice-is-not-nice/</id>
    <published>2015-07-13T16:49:31.000Z</published>
    <updated>2015-07-13T16:49:31.000Z</updated>
    
    <content type="html">&lt;p&gt;看到身边朋友在玩一个叫 nice 的应用，也试用了一把。&lt;/p&gt;
&lt;p&gt;从下载量来说它是LOFTER的2倍，它们都可以划分为图片社交。这样说对于网易乐乎来说是不公平的，lofter定位是轻博客，类似于国外的tumblr，生产高质量的内容，尤其是图片。（jianshu倾向于文字，类似国外的medium）&lt;/p&gt;
&lt;p&gt;而nice呢，注重图片几乎到放弃文字的地步，简单的通过打标签来注解图片，炫耀的意思不言而喻，而恰好它打的是陌生人社交的牌，大家都互相不认识，不会引起熟人间拉仇恨的嫌疑。陌生人之间也丝毫不吝啬自己的赞，这种低成本却又能给对方带来好感的点赞行为，实际都是虚伪在作怪。我因为应用要求上传了一个阿狸的头像，几分钟内也能收到十多个赞，我当时都蒙了。但是确实喜欢听到被点赞的通知，这大概能解释为什么女生偏爱这个app——全nice内容无非就是自拍照、吃的什么、逛街——无特效，不发图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nice-app.jpg&quot; alt=&quot;nice-app.jpg&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在nice里，你会发现所有人都过着小资生活。它不是一个发泄的场地，也不适合记录生活，因为它是短暂的，一个人可能接触nice一到两个月基本就淡出了。有时候想想用nice的人其实是自私的，因为你的图（背后）往往不止你一人，但因为几乎全来自陌生人点赞，满足的是个人的虚荣心，而图中那一刻的其他人无非是个陪衬。不然为何不发惹朋友圈呢……&lt;/p&gt;
&lt;p&gt;可能有人出来批判我了，女生爱美怎么啦，注孤生。也许我喜欢的只是对生活一种简简单单的表达。你为何不愿在朋友圈发同样的，难道是因为缺少标签的功能吗，no！ 难道是文艺青年号称要逃离朋友圈，也不对！一万个哈姆雷特！&lt;/p&gt;
&lt;p&gt;在nice久了，刷够了别人的美图，忍不住自己也要上图。要有上图的资本，就要打破原来的计划去寻找“素材”，会不会对身边平凡的生活感到厌倦——我YY的。&lt;/p&gt;
&lt;p&gt;人人都有爱美之心，无可厚非，但吸取更有营养的内容，增加自己的涵养，戒除浮躁，懂心交流，才是高情商的选择。&lt;/p&gt;
&lt;p&gt;–&lt;br&gt;玛德，在dropbox上下个插图搞了一个小时&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址： &lt;a href=&quot;http://seanlook.com/2015/07/14/nice-is-not-nice/&quot;&gt;http://seanlook.com/2015/07/14/nice-is-not-nice/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;看到身边朋友在玩一个叫 nice 的应用，也试用了一把。&lt;/p&gt;
&lt;p&gt;从下载量来说它是LOFTER的2倍，它们都可以划分为图片社交。这样说对于网易乐乎来说是不公平的，lofter定位是轻博客，类似于国外的tumblr，生产高质量的内容，尤其是图片。（jianshu倾向于文字，类似国外的medium）&lt;/p&gt;
&lt;p&gt;而nice呢，注重图片几乎到放弃文字的地步，简单的通过打标签来注解图片，炫耀的意思不言而喻，而恰好它打的是陌生人社交的牌，大家都互相不认识，不会引起熟人间拉仇恨的嫌疑。陌生人之间也丝毫不吝啬自己的赞，这种低成本却又能给对方带来好感的点赞行为，实际都是虚伪在作怪。我因为应用要求上传了一个阿狸的头像，几分钟内也能收到十多个赞，我当时都蒙了。但是确实喜欢听到被点赞的通知，这大概能解释为什么女生偏爱这个app——全nice内容无非就是自拍照、吃的什么、逛街——无特效，不发图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nice-app.jpg&quot; alt=&quot;nice-app.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="随记" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="生活" scheme="http://seanlook.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>EC的第一天</title>
    <link href="http://seanlook.com/2015/07/07/ec-the-first-day/"/>
    <id>http://seanlook.com/2015/07/07/ec-the-first-day/</id>
    <published>2015-07-06T16:49:31.000Z</published>
    <updated>2015-07-06T16:49:31.000Z</updated>
    
    <content type="html">&lt;p&gt;第一天入职 &lt;a href=&quot;www.scrm.com&quot;&gt;EC&lt;/a&gt;，总体感觉还不错，就是不知道日后的工作怎样。eva给我们五个介绍了公司的制度和福利，公共免费wifi，下午四点下午茶有水果，办公电脑不限网（中午休息时间竟然有人直接打dota，还有看动漫的）。sunny跟我们签的2年合同。好了夸完说说其他的感受。&lt;/p&gt;
&lt;p&gt;公司产品——EC营客通。主要这一个产品，有web、PC、android、IOS平台，而且主要卖点是与腾讯qq无缝连接，同时也能连接手机通讯录、邮箱、excel，号称“连接一切”，不然怎么叫 Easy Connection 。试用了移动端，其实功能很简单:支持各种数据来源的导入，加比较全的手机通讯录功能，，再加定时提醒功能（这不是最近我在试用的 『滴答清单』的功能吗），最后是外勤签到和统计的功能。并没有多少先进的科学方法，或令人眼前一亮的新功能。&lt;/p&gt;
&lt;p&gt;PC端的功能稍微复杂一点，但界面简直就是qq的副本，没了qq秀和游戏广告。这不禁让我想到了企业qq RTX，四像四不像。我想ec存在的价值在于，让员工有意识的通过工具去区分工作和生活。至于要做中国的Salesforce，路途还非常非常遥远，因为它“不止连接”。&lt;/p&gt;
&lt;p&gt;至于我很早就了解到的纷享销客，内部培训的时候除了说方向不一样外，还有贬低对手的意思，什么操作性crm与分析型crm。试用了一把，纷享销客也有分析统计预测的功能，走的路线确实完全不一样，似乎fxiaoke更注重于流程审批、知识共享、外勤签到等功能。究竟哪一个是以后的方向，还是各自结合，还很难说。salesforce估值400多亿肯定是有它的道理，如果2年之内没达到sf现在的原型，就很难有更大发展了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;晕，怎么上班第一天胡乱评价自家产品。&lt;/p&gt;
&lt;p&gt;以后上下班要挤地铁高峰期了，告别了班车福利，似乎以前坐班车从窗户旁看到了公车上的自己。&lt;/p&gt;
&lt;p&gt;现在在想，第二份工作要给自己角色上一个怎样的转变呢，我隐约的感觉到不在甘于这个小弟的角色，而是需要主动在运维团队里推进工作、提出建设性意见的人。听桂哥和超哥的意思，以后工作的关键词大概是kvm, docker, zabbix, saltstack，还是希望能够接触到数据库、开发和架构方面的内容。加油↖(^ω^)↗！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址： &lt;a href=&quot;http://seanlook.com/2015/07/07/ec-the-first-day/&quot;&gt;http://seanlook.com/2015/07/07/ec-the-first-day/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第一天入职 &lt;a href=&quot;www.scrm.com&quot;&gt;EC&lt;/a&gt;，总体感觉还不错，就是不知道日后的工作怎样。eva给我们五个介绍了公司的制度和福利，公共免费wifi，下午四点下午茶有水果，办公电脑不限网（中午休息时间竟然有人直接打dota，还有看动漫的）。sunny跟我们签的2年合同。好了夸完说说其他的感受。&lt;/p&gt;
&lt;p&gt;公司产品——EC营客通。主要这一个产品，有web、PC、android、IOS平台，而且主要卖点是与腾讯qq无缝连接，同时也能连接手机通讯录、邮箱、excel，号称“连接一切”，不然怎么叫 Easy Connection 。试用了移动端，其实功能很简单:支持各种数据来源的导入，加比较全的手机通讯录功能，，再加定时提醒功能（这不是最近我在试用的 『滴答清单』的功能吗），最后是外勤签到和统计的功能。并没有多少先进的科学方法，或令人眼前一亮的新功能。&lt;/p&gt;
&lt;p&gt;PC端的功能稍微复杂一点，但界面简直就是qq的副本，没了qq秀和游戏广告。这不禁让我想到了企业qq RTX，四像四不像。我想ec存在的价值在于，让员工有意识的通过工具去区分工作和生活。至于要做中国的Salesforce，路途还非常非常遥远，因为它“不止连接”。&lt;/p&gt;
&lt;p&gt;至于我很早就了解到的纷享销客，内部培训的时候除了说方向不一样外，还有贬低对手的意思，什么操作性crm与分析型crm。试用了一把，纷享销客也有分析统计预测的功能，走的路线确实完全不一样，似乎fxiaoke更注重于流程审批、知识共享、外勤签到等功能。究竟哪一个是以后的方向，还是各自结合，还很难说。salesforce估值400多亿肯定是有它的道理，如果2年之内没达到sf现在的原型，就很难有更大发展了。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="随记" scheme="http://seanlook.com/categories/%E7%94%9F%E6%B4%BB/%E9%9A%8F%E8%AE%B0/"/>
    
    
      <category term="EC" scheme="http://seanlook.com/tags/EC/"/>
    
      <category term="生活" scheme="http://seanlook.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>解答一个关于日志系统的思路</title>
    <link href="http://seanlook.com/2015/06/09/gongshi-logsystem-elk-preview/"/>
    <id>http://seanlook.com/2015/06/09/gongshi-logsystem-elk-preview/</id>
    <published>2015-06-09T08:32:49.000Z</published>
    <updated>2015-06-10T08:32:49.000Z</updated>
    
    <content type="html">&lt;p&gt;在一个群里看到一个面试题，试着去解答一下，毕竟正好花时间了解过日志这方面的内容。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;希望能达到的使用场景：&lt;/p&gt;
&lt;p&gt;在写业务逻辑时也能进行结构化的log, 并且log被转移到一个数据库， 一个UI前端以这个log数据库为支持， 可以可视化各种指标， 并且保留未来可以对指标进行alarm的可能性&lt;/p&gt;
&lt;p&gt;希望从两个方面考虑这个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;技术通路实现。 在每一步会用些什么技术?  一些核心组件比如log采集和log数据库有哪些已有方案， 是否有优劣？&lt;/li&gt;
&lt;li&gt;从运维角度看， 这套系统可能在哪些方面有需要考量的地方。 比如log采集是否会影响业务进程？ log数据库的运维可能遇到哪些问题？&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看出问题提出者比较在意解决这些问题过程中的思维方式和学习能力，弱化实践经验的要求。&lt;/p&gt;
&lt;p&gt;首先根据要求确认一下要达到效果：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;log日志采集&lt;/li&gt;
&lt;li&gt;log存储&lt;/li&gt;
&lt;li&gt;log展示&lt;/li&gt;
&lt;li&gt;alarm报警(附加)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;1-确定日志流向-架构&quot;&gt;&lt;a href=&quot;#1-确定日志流向-架构&quot; class=&quot;headerlink&quot; title=&quot;1 确定日志流向/架构&quot;&gt;&lt;/a&gt;1 确定日志流向/架构&lt;/h2&gt;&lt;p&gt;因为一开始脑海里也不知道原型是怎样的，就是以前用过linux自带的rsyslog功能感觉很类似：在日志服务器上通过配置rsyslog存入mysql的插件，而其它的各个服务器上默认rsyslog都是开启的，修改conf的系统日志、mail、cron等不输出到本地，而是指向mysql数据库。前端通过loganalyzer从数据库获取数据，图形化显示（简陋到不想说了。。。），但是显示的柱形图/饼图没有什么意义，默认对系统messages处理比较方便，要记录nginx或业务逻辑的log还需做其它额外操作。&lt;/p&gt;
&lt;p&gt;但rsyslog并不是一无是处，它的整个架构特别是消息队列的设计，跟后面要讲的许多分布式日志系统是很像的。所以脑海里日记采集的原型出来了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务逻辑的日志输出到文件file，服务上的日志采集客户端agent实时监控这个logfile，作为输入；日志中心服务器server接受来自agent的消息，存入后端数据库。另有一个UI从这个数据库取得数据显示，并提供搜索、统计图表。&lt;/li&gt;
&lt;li&gt;然而有以下几个问题需要考虑，这也就是为什么出现各种开源解决方案：&lt;ol&gt;
&lt;li&gt;日志产生数量过大，不能及时发送到server怎么办&lt;br&gt;可以使用队列或redis来缓冲&lt;/li&gt;
&lt;li&gt;日志中心服务器server故障怎么办，肯定不能丢失日志，即可靠性&lt;br&gt;有的解决办法是对 log server 做集群，通过zookeeper来同步配置；有的是在agent上本地暂时存放，等恢复后重新传输，redis就可以承担这个角色&lt;/li&gt;
&lt;li&gt;考虑到这个日志平台的可扩展性，新的日志来源input不一定是file，比如rsyslog&lt;br&gt;至少需要支持常用的input&lt;/li&gt;
&lt;li&gt;是否支持过滤功能&lt;br&gt;filter可以在日志发送之前就把不匹配的日志内容排除掉&lt;/li&gt;
&lt;li&gt;log结构化&lt;br&gt;收集的日志初始是一长字符串，为了后面使用方便，需要将日志结构化存储（后面会有说明）&lt;/li&gt;
&lt;li&gt;存储采用关系型数据库对海量日志存储，性能肯定很大问题&lt;br&gt;log日志存储没有一致性的要求，甚至可以说一条日志根本就没意义，而是需要通过大量的日志，通过分析、比较趋势具备用处。于是日志的存储各显大招，主流有两种：hadoop分布式文件系统HDFS，elasticsearch（后面简称es）全文搜索引擎，它们都具备很强的可伸缩性和多节点高可用性&lt;/li&gt;
&lt;li&gt;由于存储方式的不同，数据分析与展示也就有各自的阵营&lt;br&gt;HDFS一般采用MapReduce处理数据，es既可以通过其丰富的插件显示或搜索数据，也可以通过推荐使用的kibana来展示数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结下来大致流程图如下：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/gongshi-log-elk-preview.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-log结构化&quot;&gt;&lt;a href=&quot;#2-log结构化&quot; class=&quot;headerlink&quot; title=&quot;2 log结构化&quot;&gt;&lt;/a&gt;2 log结构化&lt;/h2&gt;&lt;p&gt;当然可能你一直存在这样一个疑问：log的结构化问题处理&lt;/p&gt;
&lt;p&gt;代码里logger的内容大概是timestamp,log_level,module,message… ，一下是nginx的access示例：&lt;/p&gt;
&lt;figure class=&quot;highlight accesslog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;172.16.30.88&lt;/span&gt; - &lt;span class=&quot;string&quot;&gt;[08/Jun/2015:00:08:38 +0800]&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;keyword&quot;&gt;POST&lt;/span&gt; /notice/statement_findStatementVByPage.htm?1433637553824 HTTP/1.1&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;114&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;http://service.tp-link.net/&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;处理这条非结构话的字符串或消息，无非就是在它发送到日志中心之前格式化，像最简单的rsyslog处理方法是通过数据库表字段Mapping来存放，而es则是通过编写Grok规则来结构化，如将IP、日期、请求方式、响应状态码、响应时间等组合成json字符串。（然而Grok写起来是非常痛苦的，以至于官方github上专门维护了一份通用规则表）&lt;/p&gt;
&lt;p&gt;可以说上面提到的各项内容从采集、存储、分析、展示，几乎在所有大型分布式日志系统中都可以找到各自的实现。而具体开源项目的选型，主要根据侧重功能、数据量级、管理复杂度、社区或文档的完善程度等来决定。&lt;/p&gt;
&lt;h2 id=&quot;3-对运维带来的影响&quot;&gt;&lt;a href=&quot;#3-对运维带来的影响&quot; class=&quot;headerlink&quot; title=&quot;3 对运维带来的影响&quot;&gt;&lt;/a&gt;3 对运维带来的影响&lt;/h2&gt;&lt;p&gt;是否选用这一套日志管理系统，从运维角度看，需要考虑以下因素&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;日志采集是否影响原有进程&lt;br&gt;应该这样说，业务代码的log是记录到文件的，日志采集进程也是是直接从文件读取，所以外部是不会影响（不包括占用系统资源）。但，记录日志势必会损耗一定的性能，建议做法是通过配置文件设定是否打开日志，优化做法是日志缓存、异步记录、仅记录有价值的日志。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;log数据库的运维可能会遇到的问题&lt;br&gt;比较容易出现问题的就是log数据存储出现单点故障、性能不达标，这两方面顾虑都可以通过多节点集群来解决，而且要能够实现添加或去除节点对外透明（即可扩展性）。HDFS和es都可以满足这个要求。&lt;br&gt;具体到es，还可能遇到索引分区的问题，定义以timestamp或module或日志类型等索引，这个需要具体深入了解业务需求了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运维成本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;维护复杂程度，包括学习成本，文档是否完善，能否自定义插件，社区是否成熟涉及到出异常能否快速解决&lt;/li&gt;
&lt;li&gt;部署是否方便，通过salt或docker能否方便的完成部署&lt;/li&gt;
&lt;li&gt;资源，即引入这一套系统，所需要投入的基础设施&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;与docker结合的使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日志默认是写到docker自己的文件系统上，记录或收集方式需要考虑&lt;/li&gt;
&lt;li&gt;在host映射volume，日志写到host，日志收集方法不变&lt;/li&gt;
&lt;li&gt;docker自身提供日志写入host的系统日志messages功能，日志改收集message&lt;/li&gt;
&lt;li&gt;或者, 写插件，agent直接从docker stdout输入&lt;/li&gt;
&lt;li&gt;将日志收集agent端封装在docker images里，统一从registry拉取运行，达到自动化部署&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可靠性与伸缩性&lt;br&gt;上面也已经提到，agent日志传输失败需要能够暂时存在本地，等待重传；存储查询遇到性能问题有叫成熟的优化方案，如添加节点或优化es索引&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对日志系统进行监控&lt;br&gt;日志收集（进程）出现异常，能通过系统本身或其它监控平台报警。还要考虑恢复所用的时间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;日志系统里定义阈值，能否及时告警&lt;br&gt;系统自带当然更好，如果没有实现指标告警的难易程度。（不幸的是，logstash有告警插件。。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实时性分析要求&lt;br&gt;即提交一个查询log请求，能够在秒级响应请求结果，图示化显示趋势。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;日志保留周期&lt;br&gt;对日志存储端来说这是个小问题，但是在agent服务器上日志文件是持续增大的，是否需要定期echo一下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;认证访问&lt;br&gt;我们不会把日志数据公布给任何人，架设在内网还要，如果在公网，一是最好能ssl加密，而是有登录验证。这个在logstash没有看到相关的内容，可能需要自己实现&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;后话&quot;&gt;&lt;a href=&quot;#后话&quot; class=&quot;headerlink&quot; title=&quot;后话&quot;&gt;&lt;/a&gt;后话&lt;/h2&gt;&lt;p&gt;因为曾经在一次技术沙龙上听到有人分享过logstash，所以一提日志管理时就想到了它，从而比较方便了知道了一个日志采集、存储、分析、展示系统的一个大致技术和架构。然后问google “logstash alternative”发现类似的开源/商业的技术可谓是百花齐放，flume，kafka，chukwa，fluent等（上面几个都有了解比较过，架构与上面的图片相似，有的是采用消息订阅的方式，有的结合hadoop使用分析TB级数据的）。&lt;/p&gt;
&lt;p&gt;一开始也是为了避免过早的陷入细节，就把上面几个框架记录了下各自的偏重的适用场景、优缺点、管理复杂度，然后自己搭了一套LEK（Logstash、Elasticsearch、Kibana）环境体验了一把，比起枯燥的看架构原理，更有成就感。从功能上来LEK说刚好可以达到所提要求，而且在github上的logstash的star有4000多个，大有一统江湖之势，新浪有结合docker在使用logstash，在一个交流群里问到也有人在用。（因为各版本兼容性问题，官网原文文档是最完善的。但logstash也有诸如内存占用偏高等问题，都有积极维护的插件来解决）&lt;/p&gt;
&lt;p&gt;最后结合自己以前的经验，思考了一下日后运维工作中可能会涉及到的问题，包括监控和自动化、高可用等方面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;补充&lt;/strong&gt;&lt;br&gt;后来知道还有使用OpenTSDB这种时间序列数据库去存放日志的方案，有机会研究一下。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本文链接地址：&lt;a href=&quot;http://seanlook.com/2015/06/09/gongshi-logsystem-elk-preview/&quot;&gt;http://seanlook.com/2015/06/09/gongshi-logsystem-elk-preview/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在一个群里看到一个面试题，试着去解答一下，毕竟正好花时间了解过日志这方面的内容。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;希望能达到的使用场景：&lt;/p&gt;
&lt;p&gt;在写业务逻辑时也能进行结构化的log, 并且log被转移到一个数据库， 一个UI前端以这个log数据库为支持， 可以可视化各种指标， 并且保留未来可以对指标进行alarm的可能性&lt;/p&gt;
&lt;p&gt;希望从两个方面考虑这个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;技术通路实现。 在每一步会用些什么技术?  一些核心组件比如log采集和log数据库有哪些已有方案， 是否有优劣？&lt;/li&gt;
&lt;li&gt;从运维角度看， 这套系统可能在哪些方面有需要考量的地方。 比如log采集是否会影响业务进程？ log数据库的运维可能遇到哪些问题？&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看出问题提出者比较在意解决这些问题过程中的思维方式和学习能力，弱化实践经验的要求。&lt;/p&gt;
&lt;p&gt;首先根据要求确认一下要达到效果：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;log日志采集&lt;/li&gt;
&lt;li&gt;log存储&lt;/li&gt;
&lt;li&gt;log展示&lt;/li&gt;
&lt;li&gt;alarm报警(附加)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;1-确定日志流向-架构&quot;&gt;&lt;a href=&quot;#1-确定日志流向-架构&quot; class=&quot;headerlink&quot; title=&quot;1 确定日志流向/架构&quot;&gt;&lt;/a&gt;1 确定日志流向/架构&lt;/h2&gt;&lt;p&gt;因为一开始脑海里也不知道原型是怎样的，就是以前用过linux自带的rsyslog功能感觉很类似：在日志服务器上通过配置rsyslog存入mysql的插件，而其它的各个服务器上默认rsyslog都是开启的，修改conf的系统日志、mail、cron等不输出到本地，而是指向mysql数据库。前端通过loganalyzer从数据库获取数据，图形化显示（简陋到不想说了。。。），但是显示的柱形图/饼图没有什么意义，默认对系统messages处理比较方便，要记录nginx或业务逻辑的log还需做其它额外操作。&lt;/p&gt;
&lt;p&gt;但rsyslog并不是一无是处，它的整个架构特别是消息队列的设计，跟后面要讲的许多分布式日志系统是很像的。所以脑海里日记采集的原型出来了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务逻辑的日志输出到文件file，服务上的日志采集客户端agent实时监控这个logfile，作为输入；日志中心服务器server接受来自agent的消息，存入后端数据库。另有一个UI从这个数据库取得数据显示，并提供搜索、统计图表。&lt;/li&gt;
&lt;li&gt;然而有以下几个问题需要考虑，这也就是为什么出现各种开源解决方案：&lt;ol&gt;
&lt;li&gt;日志产生数量过大，不能及时发送到server怎么办&lt;br&gt;可以使用队列或redis来缓冲&lt;/li&gt;
&lt;li&gt;日志中心服务器server故障怎么办，肯定不能丢失日志，即可靠性&lt;br&gt;有的解决办法是对 log server 做集群，通过zookeeper来同步配置；有的是在agent上本地暂时存放，等恢复后重新传输，redis就可以承担这个角色&lt;/li&gt;
&lt;li&gt;考虑到这个日志平台的可扩展性，新的日志来源input不一定是file，比如rsyslog&lt;br&gt;至少需要支持常用的input&lt;/li&gt;
&lt;li&gt;是否支持过滤功能&lt;br&gt;filter可以在日志发送之前就把不匹配的日志内容排除掉&lt;/li&gt;
&lt;li&gt;log结构化&lt;br&gt;收集的日志初始是一长字符串，为了后面使用方便，需要将日志结构化存储（后面会有说明）&lt;/li&gt;
&lt;li&gt;存储采用关系型数据库对海量日志存储，性能肯定很大问题&lt;br&gt;log日志存储没有一致性的要求，甚至可以说一条日志根本就没意义，而是需要通过大量的日志，通过分析、比较趋势具备用处。于是日志的存储各显大招，主流有两种：hadoop分布式文件系统HDFS，elasticsearch（后面简称es）全文搜索引擎，它们都具备很强的可伸缩性和多节点高可用性&lt;/li&gt;
&lt;li&gt;由于存储方式的不同，数据分析与展示也就有各自的阵营&lt;br&gt;HDFS一般采用MapReduce处理数据，es既可以通过其丰富的插件显示或搜索数据，也可以通过推荐使用的kibana来展示数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结下来大致流程图如下：&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://seanlook.com/categories/Linux/"/>
    
    
      <category term="linux" scheme="http://seanlook.com/tags/linux/"/>
    
      <category term="logsystem" scheme="http://seanlook.com/tags/logsystem/"/>
    
  </entry>
  
  <entry>
    <title>nginx做负载均衡器以及proxy缓存配置</title>
    <link href="http://seanlook.com/2015/06/02/nginx-cache-check/"/>
    <id>http://seanlook.com/2015/06/02/nginx-cache-check/</id>
    <published>2015-06-01T17:21:25.000Z</published>
    <updated>2015-06-01T16:46:23.000Z</updated>
    
    <content type="html">&lt;p&gt;关于nginx的安装和基本配置请参考&lt;a href=&quot;http://seanlook.com/2015/05/17/nginx-install-and-config&quot;&gt;nginx&lt;/a&gt;，本文在原基础上完成以下几个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结合proxy和upstream模块实现nginx负载均衡&lt;/li&gt;
&lt;li&gt;结合&lt;code&gt;nginx_upstream_check_module&lt;/code&gt;模块实现后端服务器的健康检查&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;nginx-sticky-module&lt;/code&gt;扩展模块实现Cookie会话黏贴（session-sticky效果）&lt;/li&gt;
&lt;li&gt;使用proxy模块实现静态文件缓存&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;ngx_cache_purge&lt;/code&gt;实现更强大的缓存清除功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;1-安装及模块说明&quot;&gt;&lt;a href=&quot;#1-安装及模块说明&quot; class=&quot;headerlink&quot; title=&quot;1. 安装及模块说明&quot;&gt;&lt;/a&gt;1. 安装及模块说明&lt;/h1&gt;&lt;p&gt;上面提到的3个模块都属于第三方扩展模块，需要提前下好源码，然后编译时通过&lt;code&gt;--add-moudle=src_path&lt;/code&gt;一起安装。&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 nginx_upstream_check_module(简记为m1) 时要先为nginx打上相应版本的patch，我的nginx版本为 1.6.3，所以patch对应 m1 解压后目录下的&lt;code&gt;check_1.5.12+.patch&lt;/code&gt;，所以进入nginx源码目录，执行 patch -p1 …（见下方示例）&lt;/li&gt;
&lt;li&gt;nginx-sticky-module-ng(简记为m2) 模块可以单独使用，但是因为m1监控检查的方式是依赖于m2的，所以要使用m2，还要对m1打上patch，进入m2源码目录，执行 patch -p0…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编译示例：（CentOS 6.5 x86_64, nginx 1.6.3）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# yum -y install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl--devel pcre pcre-devel

# cd nginx-1.6.3
# patch -p1 &amp;lt; ../nginx_upstream_check_module-0.3.0/check_1.5.12+.patch

# cd ../nginx-sticky-module-ng-1.2.5
# patch -p0 &amp;lt; ../nginx_upstream_check_module-0.3.0/nginx-sticky-module.patch

# ./configure --prefix=/usr/local/nginx-1.6 --with-pcre 
--with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-http_realip_module 
--add-module=../nginx_upstream_check_module-0.3.0 --add-module=../nginx-sticky-module-ng-1.2.5 --add-module=../ngx_cache_purge-2.3
# make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你想在已安装好的nginx上添加第三方模块，依然需要重新编译，但为了不覆盖你原有的配置，请不要make install，而是直接拷贝可执行文件：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# nginx -V              &lt;span class=&quot;comment&quot;&gt;//可以看到原来的编译选项，下面用到&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# ./configure ... --add-&lt;span class=&quot;meta-keyword&quot;&gt;module&lt;/span&gt;=..       &lt;span class=&quot;comment&quot;&gt;//你的第三方模块&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# make           &lt;span class=&quot;comment&quot;&gt;//make后不要install，改用手动拷贝。先备份&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# cp objs/nginx /usr/local/nginx&lt;span class=&quot;number&quot;&gt;-1.6&lt;/span&gt;/sbin/nginx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-nginx-sticky-module&quot;&gt;&lt;a href=&quot;#2-nginx-sticky-module&quot; class=&quot;headerlink&quot; title=&quot;2. nginx-sticky-module&quot;&gt;&lt;/a&gt;2. nginx-sticky-module&lt;/h1&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;这个模块的作用是通过cookie黏贴的方式将来自同一个客户端（浏览器）的请求发送到同一个后端服务器上处理，这样一定程度上可以解决多个backend servers的session同步的问题 —— 因为不再需要同步，而RR轮询模式必须要运维人员自己考虑session同步的实现。&lt;/p&gt;
&lt;p&gt;另外内置的 ip_hash 也可以实现根据客户端IP来分发请求，但它很容易造成负载不均衡的情况，而如果nginx前面有CDN网络或者来自同一局域网的访问，它接收的客户端IP是一样的，容易造成负载不均衡现象。淘宝Tengine的 ngx_http_upstream_session_sticky_module 也是类似的功能。nginx-sticky-module的cookie过期时间，默认浏览器关闭就过期，也就是会话方式。&lt;/p&gt;
&lt;p&gt;这个模块并不合适不支持 Cookie 或手动禁用了cookie的浏览器，此时默认sticky就会切换成RR。它不能与ip_hash同时使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-lb-sticky.jpg&quot; alt=&quot;nginx-lb-sticky.jpg&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;2-1-sticky配置&quot;&gt;&lt;a href=&quot;#2-1-sticky配置&quot; class=&quot;headerlink&quot; title=&quot;2.1 sticky配置&quot;&gt;&lt;/a&gt;2.1 sticky配置&lt;/h2&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;upstream backend &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.226&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; weight=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.227&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; weight=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sticky&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置起来超级简单，一般来说一个&lt;code&gt;sticky&lt;/code&gt;指令就够了。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sticky [name=route] [domain=.foo.bar] [path=/] [expires=1h] [hash=index|md5|sha1] [no_fallback];&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;: 可以为任何的 string 字符,默认是 route&lt;/li&gt;
&lt;li&gt;&lt;code&gt;domain&lt;/code&gt;：哪些域名下可以使用这个 cookie &lt;/li&gt;
&lt;li&gt;&lt;code&gt;path&lt;/code&gt;：哪些路径对启用 sticky，例如 path/test，那么只有 test 这个目录才会使用 sticky 做负载均衡&lt;/li&gt;
&lt;li&gt;&lt;code&gt;expires&lt;/code&gt;：cookie 过期时间，默认浏览器关闭就过期，也就是会话方式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;no_fallbackup&lt;/code&gt;：如果设置了这个，cookie 对应的服务器宕机了，那么将会返回502（bad gateway 或者 proxy error），建议不启用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你在查看&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_upstream_module.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;可能会注意到里面也有个 sticky 指令，要说它们的作用几乎是一样的，但是你可能注意到&lt;code&gt;This directive is available as part of our commercial subscription.&lt;/code&gt;的说明 —— 这是nginx商业版本里才有的特性。包括后面的&lt;code&gt;check&lt;/code&gt;指令，在nginx的商业版本里也有对应的&lt;code&gt;health_check&lt;/code&gt;（配在 location ）实现几乎一样的监控检查功能。&lt;/p&gt;
&lt;h2 id=&quot;2-2-load-balance其它调度方案&quot;&gt;&lt;a href=&quot;#2-2-load-balance其它调度方案&quot; class=&quot;headerlink&quot; title=&quot;2.2 load-balance其它调度方案&quot;&gt;&lt;/a&gt;2.2 load-balance其它调度方案&lt;/h2&gt;&lt;p&gt;这里顺带介绍一下nginx的负载均衡模块支持的其它调度算法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;轮询&lt;/code&gt;（默认） ： 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端某台服务器宕机，故障系统被自动剔除，使用户访问不受影响。Weight 指定轮询权值，Weight值越大，分配到的访问机率越高，主要用于后端每个服务器性能不均的情况下。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ip_hash&lt;/code&gt; ： 每个请求按访问IP的hash结果分配，这样来自同一个IP的访客固定访问一个后端服务器，有效解决了动态网页存在的session共享问题。当然如果这个节点不可用了，会发到下个节点，而此时没有session同步的话就注销掉了。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;least_conn&lt;/code&gt; ： 请求被发送到当前活跃连接最少的realserver上。会考虑weight的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url_hash&lt;/code&gt; ： 此方法按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，可以进一步提高后端缓存服务器的效率。Nginx本身是不支持url_hash的，如果需要使用这种调度算法，必须安装Nginx 的hash软件包 nginx_upstream_hash 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fair&lt;/code&gt; ： 这是比上面两个更加智能的负载均衡算法。此种算法可以依据页面大小和加载时间长短智能地进行负载均衡，也就是根据后端服务器的响应时间来分配请求，响应时间短的优先分配。Nginx本身是不支持fair的，如果需要使用这种调度算法，必须下载Nginx的 upstream_fair 模块。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;3-负载均衡与健康检查&quot;&gt;&lt;a href=&quot;#3-负载均衡与健康检查&quot; class=&quot;headerlink&quot; title=&quot;3. 负载均衡与健康检查&quot;&gt;&lt;/a&gt;3. 负载均衡与健康检查&lt;/h1&gt;&lt;p&gt;严格来说，nginx自带是没有针对负载均衡后端节点的健康检查的，但是可以通过默认自带的 ngx_http_proxy_module 模块和 ngx_http_upstream_module 模块中的相关指令来完成当后端节点出现故障时，自动切换到下一个节点来提供访问。&lt;/p&gt;
&lt;h2 id=&quot;3-1-load-balance示例&quot;&gt;&lt;a href=&quot;#3-1-load-balance示例&quot; class=&quot;headerlink&quot; title=&quot;3.1 load-balance示例&quot;&gt;&lt;/a&gt;3.1 load-balance示例&lt;/h2&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;upstream backend &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ip_hash&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.226&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; weight &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.226&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; weight=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; max_fails=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; fail_timeout=&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;s &lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.227&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; backup&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass http://backend&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt; ： 轮询权值也是可以用在ip_hash的，默认值为1&lt;/li&gt;
&lt;li&gt;&lt;code&gt;max_fails&lt;/code&gt; ： 允许请求失败的次数，默认为1。当超过最大次数时，返回proxy_next_upstream 模块定义的错误。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fail_timeout&lt;/code&gt; ： 有两层含义，一是在 30s 时间内最多容许 2 次失败；二是在经历了 2 次失败以后，30s时间内不分配请求到这台服务器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;backup&lt;/code&gt; ： 预留的备份机器。当其他所有的非backup机器出现故障的时候，才会请求backup机器，因此这台机器的压力最轻。（为什么我的1.6.3版本里配置backup启动nginx时说&lt;code&gt;invalid parameter &amp;quot;backup&amp;quot;&lt;/code&gt;？）&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;max_conns&lt;/code&gt;： 限制同时连接到某台后端服务器的连接数，默认为0即无限制。因为&lt;code&gt;queue&lt;/code&gt;指令是commercial，所以还是保持默认吧。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;proxy_next_upstream&lt;/code&gt; ： 这个指令属于 http_proxy 模块的，指定后端返回什么样的异常响应时，使用另一个realserver&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-2-nginx-upstream-check-module&quot;&gt;&lt;a href=&quot;#3-2-nginx-upstream-check-module&quot; class=&quot;headerlink&quot; title=&quot;3.2 nginx_upstream_check_module&quot;&gt;&lt;/a&gt;3.2 nginx_upstream_check_module&lt;/h2&gt;&lt;p&gt;nginx_upstream_check_module 是专门提供负载均衡器内节点的健康检查的外部模块，由淘宝的姚伟斌大神开发，通过它可以用来检测后端 realserver 的健康状态。如果后端 realserver 不可用，则后面的请求就不会转发到该节点上，并持续检查几点的状态。在淘宝自己的 tengine 上是自带了该模块。项目地址：&lt;a href=&quot;https://github.com/yaoweibin/nginx_upstream_check_module&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/yaoweibin/nginx_upstream_check_module&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;下面的是一个带后端监控检查的 nginx.conf 配置：&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;upstream backend &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sticky&lt;span class=&quot;comment&quot;&gt;;     # or simple round-robin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.226&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; weight=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.226&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8081&lt;/span&gt; weight=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; max_fails=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; fail_timeout=&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;s &lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.227&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt; weight=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; max_fails=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; fail_timeout=&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;s &lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &lt;span class=&quot;number&quot;&gt;172.29.88.227&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;8081&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check interval=&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt; rise=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; fall=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; timeout=&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; type=http&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_http_send &quot;HEAD / HTTP/&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;\r\n\r\n&quot;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_http_expect_alive http_2xx http_3xx&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass http://backend&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location /status &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        check_status&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        access_log   off&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        allow &lt;span class=&quot;number&quot;&gt;172.29.73.23&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        deny all&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面配置的意思是，对name这个负载均衡条目中的所有节点，每个5秒检测一次，请求2次正常则标记 realserver状态为up，如果检测 3 次都失败，则标记 realserver的状态为down，超时时间为1秒。&lt;/p&gt;
&lt;p&gt;check指令只能出现在upstream中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;interval&lt;/code&gt; ： 向后端发送的健康检查包的间隔。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fall&lt;/code&gt; ： 如果连续失败次数达到fall_count，服务器就被认为是down。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rise&lt;/code&gt; ： 如果连续成功次数达到rise_count，服务器就被认为是up。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt; ： 后端健康请求的超时时间。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default_down&lt;/code&gt; ： 设定初始时服务器的状态，如果是true，就说明默认是down的，如果是false，就是up的。默认值是true，也就是一开始服务器认为是不可用，要等健康检查包达到一定成功次数以后才会被认为是健康的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;：健康检查包的类型，现在支持以下多种类型&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tcp&lt;/code&gt;：简单的tcp连接，如果连接成功，就说明后端正常。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http&lt;/code&gt;：发送HTTP请求，通过后端的回复包的状态来判断后端是否存活。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ajp&lt;/code&gt;：向后端发送AJP协议的Cping包，通过接收Cpong包来判断后端是否存活。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_hello&lt;/code&gt;：发送一个初始的SSL hello包并接受服务器的SSL hello包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mysql&lt;/code&gt;: 向mysql服务器连接，通过接收服务器的greeting包来判断后端是否存活。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fastcgi&lt;/code&gt;：发送一个fastcgi请求，通过接受解析fastcgi响应来判断后端是否存活&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;port&lt;/code&gt;: 指定后端服务器的检查端口。你可以指定不同于真实服务的后端服务器的端口，比如后端提供的是443端口的应用，你可以去检查80端口的状态来判断后端健康状况。默认是0，表示跟后端server提供真实服务的端口一样。该选项出现于Tengine-1.4.0。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果 type 为 http ，你还可以使用&lt;code&gt;check_http_send&lt;/code&gt;来配置http监控检查包发送的请求内容，为了减少传输数据量，推荐采用 HEAD 方法。当采用长连接进行健康检查时，需在该指令中添加keep-alive请求头，如： &lt;code&gt;HEAD / HTTP/1.1\r\nConnection: keep-alive\r\n\r\n&lt;/code&gt; 。当采用 GET 方法的情况下，请求uri的size不宜过大，确保可以在1个interval内传输完成，否则会被健康检查模块视为后端服务器或网络异常。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;check_http_expect_alive&lt;/code&gt;指定HTTP回复的成功状态，默认认为 2XX 和 3XX 的状态是健康的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-check-upstream.png&quot; alt=&quot;nginx-check-upstream&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-sticky-cookie.png&quot; alt=&quot;nginx-sticky-cookie.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;4-nginx的proxy缓存使用&quot;&gt;&lt;a href=&quot;#4-nginx的proxy缓存使用&quot; class=&quot;headerlink&quot; title=&quot;4. nginx的proxy缓存使用&quot;&gt;&lt;/a&gt;4. nginx的proxy缓存使用&lt;/h1&gt;&lt;p&gt;nginx的页面缓存功能与上面的负载均衡和健康检查是没有关系的，放在这里一是因为懒得再起一篇文章，二是再有load-balance的地方一般都会启用缓存的。&lt;/p&gt;
&lt;p&gt;缓存也就是将js、css、image等静态文件从tomcat缓存到nginx指定的缓存目录下，既可以减轻tomcat负担，也可以加快访问速度，但这样缓存及时清理成为了一个问题，所以需要 &lt;code&gt;ngx_cache_purge&lt;/code&gt; 这个模块来在过期时间未到之前，手动清理缓存。（这里有篇 &lt;a href=&quot;http://quenlang.blog.51cto.com/4813803/1570671&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;，对比使用缓存、不使用缓存、使用动静分离三种情况下，高并发性能比较。使用代理缓存功能性能会高出很多倍）&lt;/p&gt;
&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ... // $upstream_cache_status记录缓存命中率&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log_format  main  &lt;span class=&quot;string&quot;&gt;&#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&#39;&quot;$upstream_cache_status&quot;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_temp_path   /usr/local/nginx-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;/proxy_temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_cache_path /usr/local/nginx-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;/proxy_cache levels=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; keys_zone=cache_one:&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;m inactive=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;d max_size=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;g;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen       &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server_name  ittest.example.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        root   html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index  index.html index.htm index.jsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location ~ .*\.(gif|jpg|png|html|css|js|ico|swf|pdf)(.*) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_pass  http://backend;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_redirect off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_set_header Host $host;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_set_header   X-Real-IP   $remote_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_cache cache_one;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            add_header Nginx-Cache $upstream_cache_status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_cache_valid  &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;304&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;302&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;h;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_cache_valid &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_cache_valid  any &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_cache_key $host$uri$is_args$args;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            expires &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location ~ /purge(/.*) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            #设置只允许指定的IP或IP段才可以清除URL缓存。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            allow   &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            allow   &lt;span class=&quot;number&quot;&gt;172.29&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;73.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deny    all;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proxy_cache_purge  cache_one $host$1$is_args$args;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            error_page &lt;span class=&quot;number&quot;&gt;405&lt;/span&gt; =&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; /purge$1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;proxy_temp_path&lt;/code&gt; ： 缓存临时目录。后端的响应并不直接返回客户端，而是先写到一个临时文件中，然后被rename一下当做缓存放在 proxy_cache_path 。0.8.9版本以后允许temp和cache两个目录在不同文件系统上（分区），然而为了减少性能损失还是建议把它们设成一个文件系统上。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;proxy_cache_path ...&lt;/code&gt; ： 设置缓存目录，目录里的文件名是 cache_key 的MD5值。&lt;br&gt;&lt;code&gt;levels=1:2 keys_zone=cache_one:50m&lt;/code&gt;表示采用2级目录结构，Web缓存区名称为cache_one，内存缓存空间大小为100MB，这个缓冲zone可以被多次使用。文件系统上看到的缓存文件名类似于 /usr/local/nginx-1.6/proxy_cache/&lt;strong&gt;c&lt;/strong&gt;/&lt;strong&gt;29&lt;/strong&gt;/b7f54b2df7773722d382f4809d650&lt;strong&gt;29c&lt;/strong&gt; 。&lt;br&gt;&lt;code&gt;inactive=2d max_size=2g&lt;/code&gt;表示2天没有被访问的内容自动清除，硬盘最大缓存空间为2GB，超过这个大学将清除最近最少使用的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;proxy_cache&lt;/code&gt; ： 引用前面定义的缓存区 cache_one&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proxy_cache_key&lt;/code&gt; ： 定义cache_key&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proxy_cache_valid&lt;/code&gt; ： 为不同的响应状态码设置不同的缓存时间，比如200、302等正常结果可以缓存的时间长点，而404、500等缓存时间设置短一些，这个时间到了文件就会过期，而不论是否刚被访问过。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;expires&lt;/code&gt; ： 在响应头里设置&lt;code&gt;Expires:&lt;/code&gt;或&lt;code&gt;Cache-Control:max-age&lt;/code&gt;，返回给客户端的浏览器缓存失效时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于缓存的失效期限上面有三个选项：&lt;code&gt;X-Accel-Expires&lt;/code&gt;、&lt;code&gt;inactive&lt;/code&gt;、&lt;code&gt;proxy_cache_valid&lt;/code&gt;、&lt;code&gt;expires&lt;/code&gt;，它们之间是有优先级的，按上面的顺序如果在header里设置 X-Accel-Expires 则它的优先级最高，否则inactive优先级最高。更多资料请参考 &lt;a href=&quot;http://www.ttlsa.com/nginx/nginx-cache-priority/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nginx缓存优先级&lt;/a&gt; 或&lt;a href=&quot;http://fann.im/blog/2014/12/09/nginx-proxy_cache_valid/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;br&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-cache-hit.png&quot; alt=&quot;nginx-cache-hit.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;清除缓存&quot;&gt;&lt;a href=&quot;#清除缓存&quot; class=&quot;headerlink&quot; title=&quot;清除缓存&quot;&gt;&lt;/a&gt;清除缓存&lt;/h2&gt;&lt;p&gt;上述配置的&lt;code&gt;proxy_cache_purge&lt;/code&gt;指令用于方便的清除缓存，但必须按照第三方的 ngx_cache_purge 模块才能使用，项目地址：&lt;a href=&quot;https://github.com/FRiCKLE/ngx_cache_purge/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/FRiCKLE/ngx_cache_purge/&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;使用 ngx_cache_purge 模块清除缓存有2种办法（直接删除缓存目录下的文件也算一种办法）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;echo发送PURGE指令&lt;br&gt;&lt;code&gt;proxy_cache_purge PURGE from 127.0.0.1&lt;/code&gt;表示只允许在来自本地的清除指令&lt;/p&gt;
&lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# echo -e &lt;span class=&quot;string&quot;&gt;&#39;PURGE / HTTP/1.0\r\n&#39;&lt;/span&gt; | nc 127.0.0.1 80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GET方式请求URL&lt;br&gt;即使用配置文件中的&lt;code&gt;location ~ /purge(/.*)&lt;/code&gt;，浏览器访问&lt;code&gt;http://ittest.example.com/purge/your/may/path&lt;/code&gt;来清除缓存，或者&lt;code&gt;echo -e &amp;#39;GET /purge/ HTTP/1.0\r\n&amp;#39; | nc ittest.example.com 80&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-cache-purge.png&quot; alt=&quot;nginx-cache-purge.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_upstream_module.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nolinux.blog.51cto.com/4824967/1594029&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nginx实战系列之功能篇—-后端节点健康检查&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tengine.taobao.org/document_cn/http_upstream_check_cn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tengine nginx_upstream_check_module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://quenlang.blog.51cto.com/4813803/1570352&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nginx反向代理tomcat集群做负载均衡缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ttlsa.com/nginx/nginx-high-performance-caching/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;web内容缓存 nginx高性能缓存详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ttlsa.com/nginx/nginx-modules-nginx-sticky-module/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用nginx sticky实现基于cookie的负载均衡&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;原文链接地址：&lt;a href=&quot;http://seanlook.com/2015/05/22/nginx-cache-check/&quot;&gt;http://seanlook.com/2015/05/22/nginx-cache-check/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;关于nginx的安装和基本配置请参考&lt;a href=&quot;http://seanlook.com/2015/05/17/nginx-install-and-config&quot;&gt;nginx&lt;/a&gt;，本文在原基础上完成以下几个功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;结合proxy和upstream模块实现nginx负载均衡&lt;/li&gt;
&lt;li&gt;结合&lt;code&gt;nginx_upstream_check_module&lt;/code&gt;模块实现后端服务器的健康检查&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;nginx-sticky-module&lt;/code&gt;扩展模块实现Cookie会话黏贴（session-sticky效果）&lt;/li&gt;
&lt;li&gt;使用proxy模块实现静态文件缓存&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;ngx_cache_purge&lt;/code&gt;实现更强大的缓存清除功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;1-安装及模块说明&quot;&gt;&lt;a href=&quot;#1-安装及模块说明&quot; class=&quot;headerlink&quot; title=&quot;1. 安装及模块说明&quot;&gt;&lt;/a&gt;1. 安装及模块说明&lt;/h1&gt;&lt;p&gt;上面提到的3个模块都属于第三方扩展模块，需要提前下好源码，然后编译时通过&lt;code&gt;--add-moudle=src_path&lt;/code&gt;一起安装。&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 nginx_upstream_check_module(简记为m1) 时要先为nginx打上相应版本的patch，我的nginx版本为 1.6.3，所以patch对应 m1 解压后目录下的&lt;code&gt;check_1.5.12+.patch&lt;/code&gt;，所以进入nginx源码目录，执行 patch -p1 …（见下方示例）&lt;/li&gt;
&lt;li&gt;nginx-sticky-module-ng(简记为m2) 模块可以单独使用，但是因为m1监控检查的方式是依赖于m2的，所以要使用m2，还要对m1打上patch，进入m2源码目录，执行 patch -p0…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编译示例：（CentOS 6.5 x86_64, nginx 1.6.3）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# yum -y install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl--devel pcre pcre-devel

# cd nginx-1.6.3
# patch -p1 &amp;lt; ../nginx_upstream_check_module-0.3.0/check_1.5.12+.patch

# cd ../nginx-sticky-module-ng-1.2.5
# patch -p0 &amp;lt; ../nginx_upstream_check_module-0.3.0/nginx-sticky-module.patch

# ./configure --prefix=/usr/local/nginx-1.6 --with-pcre 
--with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-http_realip_module 
--add-module=../nginx_upstream_check_module-0.3.0 --add-module=../nginx-sticky-module-ng-1.2.5 --add-module=../ngx_cache_purge-2.3
# make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你想在已安装好的nginx上添加第三方模块，依然需要重新编译，但为了不覆盖你原有的配置，请不要make install，而是直接拷贝可执行文件：&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# nginx -V              &lt;span class=&quot;comment&quot;&gt;//可以看到原来的编译选项，下面用到&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# ./configure ... --add-&lt;span class=&quot;meta-keyword&quot;&gt;module&lt;/span&gt;=..       &lt;span class=&quot;comment&quot;&gt;//你的第三方模块&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# make           &lt;span class=&quot;comment&quot;&gt;//make后不要install，改用手动拷贝。先备份&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# cp objs/nginx /usr/local/nginx&lt;span class=&quot;number&quot;&gt;-1.6&lt;/span&gt;/sbin/nginx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-nginx-sticky-module&quot;&gt;&lt;a href=&quot;#2-nginx-sticky-module&quot; class=&quot;headerlink&quot; title=&quot;2. nginx-sticky-module&quot;&gt;&lt;/a&gt;2. nginx-sticky-module&lt;/h1&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng&quot;&gt;https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;这个模块的作用是通过cookie黏贴的方式将来自同一个客户端（浏览器）的请求发送到同一个后端服务器上处理，这样一定程度上可以解决多个backend servers的session同步的问题 —— 因为不再需要同步，而RR轮询模式必须要运维人员自己考虑session同步的实现。&lt;/p&gt;
&lt;p&gt;另外内置的 ip_hash 也可以实现根据客户端IP来分发请求，但它很容易造成负载不均衡的情况，而如果nginx前面有CDN网络或者来自同一局域网的访问，它接收的客户端IP是一样的，容易造成负载不均衡现象。淘宝Tengine的 ngx_http_upstream_session_sticky_module 也是类似的功能。nginx-sticky-module的cookie过期时间，默认浏览器关闭就过期，也就是会话方式。&lt;/p&gt;
&lt;p&gt;这个模块并不合适不支持 Cookie 或手动禁用了cookie的浏览器，此时默认sticky就会切换成RR。它不能与ip_hash同时使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-lb-sticky.jpg&quot; alt=&quot;nginx-lb-sticky.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://seanlook.com/categories/Linux/"/>
    
      <category term="Nginx" scheme="http://seanlook.com/categories/Linux/Nginx/"/>
    
    
      <category term="nignx" scheme="http://seanlook.com/tags/nignx/"/>
    
      <category term="负载均衡" scheme="http://seanlook.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="缓存" scheme="http://seanlook.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>nginx配置ssl加密（单双向认证、部分https）</title>
    <link href="http://seanlook.com/2015/05/28/nginx-ssl/"/>
    <id>http://seanlook.com/2015/05/28/nginx-ssl/</id>
    <published>2015-05-28T07:21:25.000Z</published>
    <updated>2015-05-28T07:46:23.000Z</updated>
    
    <content type="html">&lt;p&gt;nginx下配置ssl本来是很简单的，无论是去认证中心买SSL安全证书还是自签署证书，但最近公司OA的一个需求，得以有个机会实际折腾一番。一开始采用的是全站加密，所有访问http:80的请求强制转换（rewrite）到https，后来自动化测试结果说响应速度太慢，https比http慢慢30倍，心想怎么可能，鬼知道他们怎么测的。所以就试了一下部分页面https（不能只针对某类动态请求才加密）和双向认证。下面分节介绍。&lt;/p&gt;
&lt;p&gt;默认nginx是没有安装ssl模块的，需要编译安装nginx时加入&lt;code&gt;--with-http_ssl_module&lt;/code&gt;选项。&lt;/p&gt;
&lt;p&gt;关于SSL/TLS原理请参考 &lt;a href=&quot;http://segmentfault.com/a/1190000002554673&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;，如果你只是想测试或者自签发ssl证书，参考 &lt;a href=&quot;http://seanlook.com/2015/01/18/openssl-self-sign-ca/&quot;&gt;这里&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提示&lt;/strong&gt;：nignx到后端服务器由于一般是内网，所以不加密。&lt;/p&gt;
&lt;h1 id=&quot;1-全站ssl&quot;&gt;&lt;a href=&quot;#1-全站ssl&quot; class=&quot;headerlink&quot; title=&quot;1. 全站ssl&quot;&gt;&lt;/a&gt;1. 全站ssl&lt;/h1&gt;&lt;p&gt;全站做ssl是最常见的一个使用场景，默认端口443，而且一般是单向认证。&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;server&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;443&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;server_name&lt;/span&gt; example.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;root&lt;/span&gt; /apps/www;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;index&lt;/span&gt; index.html index.htm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;ssl&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;ssl_certificate&lt;/span&gt; ../SSL/ittest.pem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;ssl_certificate_key&lt;/span&gt; ../SSL/ittest.key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        ssl_prefer_server_ciphers on;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果想把http的请求强制转到https的话：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  listen      &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  server_name example.me;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rewrite     ^   https://$server_name$request_uri? permanent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 使用return的效率会更高 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#  return &lt;span class=&quot;number&quot;&gt;301&lt;/span&gt; https://$server_name$request_uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssl_certificate&lt;/code&gt;证书其实是个公钥，它会被发送到连接服务器的每个客户端，&lt;code&gt;ssl_certificate_key&lt;/code&gt;私钥是用来解密的，所以它的权限要得到保护但nginx的主进程能够读取。当然私钥和证书可以放在一个证书文件中，这种方式也只有公钥证书才发送到client。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;code&gt;ssl_protocols&lt;/code&gt;指令用于启动特定的加密协议，nginx在1.1.13和1.0.12版本后默认是&lt;code&gt;ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2&lt;/code&gt;，TLSv1.1与TLSv1.2要确保OpenSSL &amp;gt;= 1.0.1 ，SSLv3 现在还有很多地方在用但有不少被攻击的漏洞。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssl_ciphers&lt;/code&gt;选择加密套件，不同的浏览器所支持的套件（和顺序）可能会不同。这里指定的是OpenSSL库能够识别的写法，你可以通过 &lt;code&gt;openssl -v cipher &amp;#39;RC4:HIGH:!aNULL:!MD5&amp;#39;&lt;/code&gt;（后面是你所指定的套件加密算法） 来看所支持算法。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssl_prefer_server_ciphers on&lt;/code&gt;设置协商加密算法时，优先使用我们服务端的加密套件，而不是客户端浏览器的加密套件。&lt;/p&gt;
&lt;h2 id=&quot;https优化参数&quot;&gt;&lt;a href=&quot;#https优化参数&quot; class=&quot;headerlink&quot; title=&quot;https优化参数&quot;&gt;&lt;/a&gt;https优化参数&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssl_session_cache shared:SSL:10m;&lt;/code&gt; : 设置ssl/tls会话缓存的类型和大小。如果设置了这个参数一般是&lt;code&gt;shared&lt;/code&gt;，&lt;code&gt;buildin&lt;/code&gt;可能会参数内存碎片，默认是&lt;code&gt;none&lt;/code&gt;，和&lt;code&gt;off&lt;/code&gt;差不多，停用缓存。如&lt;code&gt;shared:SSL:10m&lt;/code&gt;表示我所有的nginx工作进程共享ssl会话缓存，官网介绍说1M可以存放约4000个sessions。 详细参考serverfault上的问答&lt;a href=&quot;http://serverfault.com/questions/695258/when-shoud-i-use-ssl-session-cache-paramter-in-nginx-ssl-settings&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ssl_session_cache&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_timeout&lt;/code&gt; ： 客户端可以重用会话缓存中ssl参数的过期时间，内网系统默认5分钟太短了，可以设成&lt;code&gt;30m&lt;/code&gt;即30分钟甚至&lt;code&gt;4h&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置较长的&lt;code&gt;keepalive_timeout&lt;/code&gt;也可以减少请求ssl会话协商的开销，但同时得考虑线程的并发数了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提示&lt;/strong&gt;：在生成证书请求csr文件时，如果输入了密码，nginx每次启动时都会提示输入这个密码，可以使用私钥来生成解密后的key来代替，效果是一样的，达到免密码重启的效果：&lt;br&gt;&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl rsa -&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; ittest.&lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt; -out ittest_unsecure.&lt;span class=&quot;built_in&quot;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;导入证书&quot;&gt;&lt;a href=&quot;#导入证书&quot; class=&quot;headerlink&quot; title=&quot;导入证书&quot;&gt;&lt;/a&gt;导入证书&lt;/h2&gt;&lt;p&gt;如果你是找一个知名的ssl证书颁发机构如VeriSign、Wosign、StartSSL签发的证书，浏览器已经内置并信任了这些根证书，如果你是自建C或获得二级CA授权，都需要将CA证书添加到浏览器，这样在访问站点时才不会显示不安全连接。各个浏览的添加方法不在本文探讨范围内。&lt;/p&gt;
&lt;h1 id=&quot;2-部分页面ssl&quot;&gt;&lt;a href=&quot;#2-部分页面ssl&quot; class=&quot;headerlink&quot; title=&quot;2. 部分页面ssl&quot;&gt;&lt;/a&gt;2. 部分页面ssl&lt;/h1&gt;&lt;p&gt;一个站点并不是所有信息都是非常机密的，如网上商城，一般的商品浏览可以不通过https，而用户登录以及支付的时候就强制经过https传输，这样用户访问速度和安全性都得到兼顾。&lt;/p&gt;
&lt;p&gt;但是请注意不要理解错了，是对页面加密而不能针对某个请求加密，一个页面或地址栏的URL一般会发起许多请求的，包括css/png/js等静态文件和动态的java或php请求，所以要加密的内容包含页面内的其它资源文件，否则就会出现http与https内容混合的问题。在http页面混有https内容时，页面排版不会发生乱排现象；在https页面中包含以http方式引入的图片、js等资源时，浏览器为了安全起见会阻止加载。&lt;/p&gt;
&lt;p&gt;下面是只对&lt;code&gt;example.com/account/login&lt;/code&gt;登录页面进行加密的栗子：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;root /apps/www;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index index.html index.htm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen      &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server_name example.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location ^~ /account/login &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rewrite ^ https://$server_name:&lt;span class=&quot;number&quot;&gt;443&lt;/span&gt;$request_uri? permanent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass  http://localhost:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ### Set headers ####&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header Host $host;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header X-Real-IP $remote_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_redirect     off; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listen &lt;span class=&quot;number&quot;&gt;443&lt;/span&gt; ssl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server_name example.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl_certificate ../SSL/ittest.pem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl_certificate_key ../SSL/ittest.key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl_protocols SSLv3 TLSv1 TLSv1.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; TLSv1.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl_prefer_server_ciphers on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location ^~ /account/login &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_pass  http://localhost:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header Host $host;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header X-Real-IP $remote_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_redirect     off; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ### Most PHP, Python, Rails, Java App can use this header -&amp;gt; https ###&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        proxy_set_header X-Forwarded-Proto  $scheme;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rewrite  ^  http://$server_name$request_uri? permanent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;关于rewrite与location的写法参考&lt;a href=&quot;http://seanlook.com/2015/05/17/nginx-location-rewrite/&quot;&gt;这里&lt;/a&gt;。当浏览器访问&lt;code&gt;http://example.com/account/login.xx&lt;/code&gt;时，被301到&lt;code&gt;https://example.com/account/login.xx&lt;/code&gt;，在这个ssl加密的虚拟主机里也匹配到&lt;code&gt;/account/login&lt;/code&gt;，反向代理到后端服务器，后面的传输过程是没有https的。这个login.xx页面下的其它资源也是经过https请求nginx的，登录成功后跳转到首页时的链接使用http，这个可能需要开发代码里面控制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上面配置中使用了&lt;code&gt;proxy_set_header X-Forwarded-Proto  $scheme&lt;/code&gt;，在jsp页面使用&lt;code&gt;request.getScheme()&lt;/code&gt;得到的是https 。如果不把请求的$scheme协议设置在header里，后端jsp页面会一直认为是http，将导致响应异常。&lt;/li&gt;
&lt;li&gt;ssl配置块还有个与不加密的80端口类似的&lt;code&gt;location /&lt;/code&gt;，它的作用是当用户直接通过https访问首页时，自动跳转到不加密端口，你可以去掉它允许用户这样做。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;3-实现双向ssl认证&quot;&gt;&lt;a href=&quot;#3-实现双向ssl认证&quot; class=&quot;headerlink&quot; title=&quot;3. 实现双向ssl认证&quot;&gt;&lt;/a&gt;3. 实现双向ssl认证&lt;/h1&gt;&lt;p&gt;上面的两种配置都是去认证被访问的站点域名是否真实可信，并对传输过程加密，但服务器端并没有认证客户端是否可信。（实际上除非特别重要的场景，也没必要去认证访问者，除非像银行U盾这样的情况）&lt;/p&gt;
&lt;p&gt;要实现双向认证HTTPS，nginx服务器上必须导入CA证书（根证书/中间级证书），因为现在是由服务器端通过CA去验证客户端的信息。还有必须在申请服务器证书的同时，用同样的方法生成客户证书。取得客户证书后，还要将它转换成浏览器识别的格式（大部分浏览器都认识PKCS12格式）：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;openssl pkcs12 -export -clcerts -&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; client&lt;span class=&quot;selector-class&quot;&gt;.crt&lt;/span&gt; -inkey client&lt;span class=&quot;selector-class&quot;&gt;.key&lt;/span&gt; -out client.p12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后把这个&lt;code&gt;client.p12&lt;/code&gt;发给你相信的人，让它导入到浏览器中，访问站点建立连接的时候nginx会要求客户端把这个证书发给自己验证，如果没有这个证书就拒绝访问。&lt;/p&gt;
&lt;p&gt;同时别忘了在 nginx.conf 里配置信任的CA：（如果是二级CA，请把根CA放在后面，形成CA证书链）&lt;br&gt;&lt;figure class=&quot;highlight hsp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    proxy_ignore_client_abort &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl_verify_client &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl_verify_depth &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssl_client_certificate ../SSL/ca-chain.pem&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 在双向location下加入：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_set_header X-SSL-Client-Cert $ssl_client_cert&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;拓展：使用geo模块&quot;&gt;&lt;a href=&quot;#拓展：使用geo模块&quot; class=&quot;headerlink&quot; title=&quot;拓展：使用geo模块&quot;&gt;&lt;/a&gt;拓展：使用geo模块&lt;/h2&gt;&lt;p&gt;nginx默认安装了一个&lt;code&gt;ngx_http_geo_module&lt;/code&gt;，这个geo模块可以根据客户端IP来创建变量的值，用在如来自172.29.73.0/24段的IP访问login时使用双向认证，其它段使用一般的单向认证。&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;geo $duplexing_user &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    include geo.conf;  # 注意在&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;6.7&lt;/span&gt;版本以后，include是相对于nginx.conf所在目录而言的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;语法 &lt;code&gt;geo [$address] $variable { … }&lt;/code&gt;，位于http段，默认地址是&lt;code&gt;$reoute_addr&lt;/code&gt;，假设 &lt;code&gt;conf/geo.conf&lt;/code&gt; 内容：&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;127.0.0.1&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;    LOCAL&lt;span class=&quot;comment&quot;&gt;;  # 本地&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;172.29.73.23&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; SEAN&lt;span class=&quot;comment&quot;&gt;;   # 某个IP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;172.29.73.0&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;      # IP段，可以按国家或地域定义后面的不同的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要配置另外一个虚拟主机server{ssl 445}，里面使用上面双向认证的写法，然后在80或443里使用变量&lt;code&gt;$duplexing_user&lt;/code&gt;去判断，如果为1就rewrite到445，否则rewrite到443。具体用法可以参考&lt;a href=&quot;http://www.ttlsa.com/nginx/using-nginx-geo-method/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nginx geo使用方法&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/na_tion/article/details/17334669&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nginx部署部分https与部分http&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhoufengjie.cn/?p=185&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux+Nginx/Apache/Tomcat新增SSL证书，开启https访问教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sinosky.org/ssl-and-spdy-enabled.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SSL &amp;amp; SPDY 已全面部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://han.guokai.blog.163.com/blog/static/136718271201211631456811/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SSL证书与Https应用部署小结  &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_ssl_module.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ngx_http_ssl_module docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bjornjohansen.no/optimizing-https-nginx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Optimizing HTTPS on Nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zhangge.net/4861.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://zhangge.net/4861.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-192074-id-3135733.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.chinaunix.net/uid-192074-id-3135733.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;nginx下配置ssl本来是很简单的，无论是去认证中心买SSL安全证书还是自签署证书，但最近公司OA的一个需求，得以有个机会实际折腾一番。一开始采用的是全站加密，所有访问http:80的请求强制转换（rewrite）到https，后来自动化测试结果说响应速度太慢，https比http慢慢30倍，心想怎么可能，鬼知道他们怎么测的。所以就试了一下部分页面https（不能只针对某类动态请求才加密）和双向认证。下面分节介绍。&lt;/p&gt;
&lt;p&gt;默认nginx是没有安装ssl模块的，需要编译安装nginx时加入&lt;code&gt;--with-http_ssl_module&lt;/code&gt;选项。&lt;/p&gt;
&lt;p&gt;关于SSL/TLS原理请参考 &lt;a href=&quot;http://segmentfault.com/a/1190000002554673&quot;&gt;这里&lt;/a&gt;，如果你只是想测试或者自签发ssl证书，参考 &lt;a href=&quot;http://seanlook.com/2015/01/18/openssl-self-sign-ca/&quot;&gt;这里&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提示&lt;/strong&gt;：nignx到后端服务器由于一般是内网，所以不加密。&lt;/p&gt;
&lt;h1 id=&quot;1-全站ssl&quot;&gt;&lt;a href=&quot;#1-全站ssl&quot; class=&quot;headerlink&quot; title=&quot;1. 全站ssl&quot;&gt;&lt;/a&gt;1. 全站ssl&lt;/h1&gt;&lt;p&gt;全站做ssl是最常见的一个使用场景，默认端口443，而且一般是单向认证。&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;server&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;443&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;server_name&lt;/span&gt; example.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;root&lt;/span&gt; /apps/www;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;index&lt;/span&gt; index.html index.htm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;ssl&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;ssl_certificate&lt;/span&gt; ../SSL/ittest.pem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attribute&quot;&gt;ssl_certificate_key&lt;/span&gt; ../SSL/ittest.key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#        ssl_prefer_server_ciphers on;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果想把http的请求强制转到https的话：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  listen      &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  server_name example.me;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rewrite     ^   https://$server_name$request_uri? permanent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 使用return的效率会更高 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#  return &lt;span class=&quot;number&quot;&gt;301&lt;/span&gt; https://$server_name$request_uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssl_certificate&lt;/code&gt;证书其实是个公钥，它会被发送到连接服务器的每个客户端，&lt;code&gt;ssl_certificate_key&lt;/code&gt;私钥是用来解密的，所以它的权限要得到保护但nginx的主进程能够读取。当然私钥和证书可以放在一个证书文件中，这种方式也只有公钥证书才发送到client。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://seanlook.com/categories/Linux/"/>
    
      <category term="Nginx" scheme="http://seanlook.com/categories/Linux/Nginx/"/>
    
    
      <category term="ssl" scheme="http://seanlook.com/tags/ssl/"/>
    
      <category term="nignx" scheme="http://seanlook.com/tags/nignx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx+Keepalived实现站点高可用</title>
    <link href="http://seanlook.com/2015/05/18/nginx-keepalived-ha/"/>
    <id>http://seanlook.com/2015/05/18/nginx-keepalived-ha/</id>
    <published>2015-05-17T17:21:25.000Z</published>
    <updated>2015-05-17T16:46:23.000Z</updated>
    
    <content type="html">&lt;p&gt;公司内部 OA 系统要做线上高可用，避免单点故障，所以计划使用2台虚拟机通过 Keepalived 工具来实现 nginx 的高可用（High Avaiability），达到一台nginx入口服务器宕机，另一台备机自动接管服务的效果。（nginx做反向代理，实现后端应用服务器的负载均衡）快速搭建请直接跳至 第2节。&lt;/p&gt;
&lt;h1 id=&quot;1-Keepalived介绍&quot;&gt;&lt;a href=&quot;#1-Keepalived介绍&quot; class=&quot;headerlink&quot; title=&quot;1. Keepalived介绍&quot;&gt;&lt;/a&gt;1. Keepalived介绍&lt;/h1&gt;&lt;p&gt;Keepalived是一个基于VRRP协议来实现的服务高可用方案，可以利用其来避免IP单点故障，类似的工具还有heartbeat、corosync、pacemaker。但是它一般不会单独出现，而是与其它负载均衡技术（如lvs、haproxy、nginx）一起工作来达到集群的高可用。&lt;/p&gt;
&lt;h2 id=&quot;1-1-VRRP协议&quot;&gt;&lt;a href=&quot;#1-1-VRRP协议&quot; class=&quot;headerlink&quot; title=&quot;1.1 VRRP协议&quot;&gt;&lt;/a&gt;1.1 VRRP协议&lt;/h2&gt;&lt;p&gt;VRRP全称 Virtual Router Redundancy Protocol，即 &lt;a href=&quot;http://en.wikipedia.org/wiki/VRRP&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;虚拟路由冗余协议&lt;/a&gt;。可以认为它是实现路由器高可用的容错协议，即将N台提供相同功能的路由器组成一个路由器组(Router Group)，这个组里面有一个master和多个backup，但在外界看来就像一台一样，构成虚拟路由器，拥有一个虚拟IP（vip，也就是路由器所在局域网内其他机器的默认路由），占有这个IP的master实际负责ARP相应和转发IP数据包，组中的其它路由器作为备份的角色处于待命状态。master会发组播消息，当backup在超时时间内收不到vrrp包时就认为master宕掉了，这时就需要根据VRRP的优先级来选举一个backup当master，保证路由器的高可用。&lt;/p&gt;
&lt;p&gt;在VRRP协议实现里，虚拟路由器使用 00-00-5E-00-01-XX 作为&lt;em&gt;虚拟&lt;/em&gt;MAC地址，XX就是唯一的 VRID （Virtual Router IDentifier），这个地址同一时间只有一个物理路由器占用。在虚拟路由器里面的物理路由器组里面通过多播IP地址 224.0.0.18 来定时发送通告消息。每个Router都有一个 1-255 之间的优先级别，级别最高的（highest priority）将成为主控（master）路由器。通过降低master的优先权可以让处于backup状态的路由器抢占（pro-empt）主路由器的状态，两个backup优先级相同的IP地址较大者为master，接管虚拟IP。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-keepalived-vrrp.jpg&quot; alt=&quot;nginx-keepalived-vrrp.jpg&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;与heartbeat-corosync等比较&quot;&gt;&lt;a href=&quot;#与heartbeat-corosync等比较&quot; class=&quot;headerlink&quot; title=&quot;与heartbeat/corosync等比较&quot;&gt;&lt;/a&gt;与heartbeat/corosync等比较&lt;/h3&gt;&lt;p&gt;直接摘抄自 &lt;a href=&quot;http://www.linuxidc.com/Linux/2013-08/89227.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.linuxidc.com/Linux/2013-08/89227.htm&lt;/a&gt; ：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;Heartbeat、Corosync、Keepalived这三个集群组件我们到底选哪个好，首先我想说明的是，Heartbeat、Corosync是属于同一类型，Keepalived与Heartbeat、Corosync，根本不是同一类型的。Keepalived使用的vrrp协议方式，虚拟路由冗余协议 (Virtual Router Redundancy Protocol，简称VRRP)；Heartbeat或Corosync是基于主机或网络服务的高可用方式；简单的说就是，Keepalived的目的是模拟路由器的高可用，Heartbeat或Corosync的目的是实现Service的高可用。&lt;/p&gt;
&lt;p&gt;所以一般Keepalived是实现前端高可用，常用的前端高可用的组合有，就是我们常见的LVS+Keepalived、Nginx+Keepalived、HAproxy+Keepalived。而Heartbeat或Corosync是实现服务的高可用，常见的组合有Heartbeat v3(Corosync)+Pacemaker+NFS+Httpd 实现Web服务器的高可用、Heartbeat v3(Corosync)+Pacemaker+NFS+MySQL 实现MySQL服务器的高可用。总结一下，Keepalived中实现轻量级的高可用，一般用于前端高可用，且不需要共享存储，一般常用于两个节点的高可用。而Heartbeat(或Corosync)一般用于服务的高可用，且需要共享存储，一般用于多节点的高可用。这个问题我们说明白了。&lt;/p&gt;
&lt;p&gt;又有博友会问了，那heartbaet与corosync我们又应该选择哪个好啊，我想说我们一般用corosync，因为corosync的运行机制更优于heartbeat，就连从heartbeat分离出来的pacemaker都说在以后的开发当中更倾向于corosync，所以现在corosync+pacemaker是最佳组合。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-2-Keepalived-nginx&quot;&gt;&lt;a href=&quot;#1-2-Keepalived-nginx&quot; class=&quot;headerlink&quot; title=&quot;1.2 Keepalived + nginx&quot;&gt;&lt;/a&gt;1.2 Keepalived + nginx&lt;/h2&gt;&lt;p&gt;keepalived可以认为是VRRP协议在Linux上的实现，主要有三个模块，分别是core、check和vrrp。core模块为keepalived的核心，负责主进程的启动、维护以及全局配置文件的加载和解析。check负责健康检查，包括常见的各种检查方式。vrrp模块是来实现VRRP协议的。本文基于如下的拓扑图：&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;                   +-------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   |&lt;span class=&quot;string&quot;&gt;    uplink   &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   +-------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          |&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MASTER            keep&lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;alived         BACKUP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;172.29.88.224      172.29.88.222      172.29.88.225&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------+    +-------------+    +-------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;   nginx01   &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;----&lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;  virtualIP  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;----&lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;   nginx02   &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------+    +-------------+    +-------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          |&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       +------------------+------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;                  &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------+    +-------------+    +-------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt;    web01    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;    web02    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;    &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt;    web03    &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-------------+    +-------------+    +-------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;2-keepalived实现nginx高可用&quot;&gt;&lt;a href=&quot;#2-keepalived实现nginx高可用&quot; class=&quot;headerlink&quot; title=&quot;2. keepalived实现nginx高可用&quot;&gt;&lt;/a&gt;2. keepalived实现nginx高可用&lt;/h1&gt;&lt;h2 id=&quot;2-1安装&quot;&gt;&lt;a href=&quot;#2-1安装&quot; class=&quot;headerlink&quot; title=&quot;2.1安装&quot;&gt;&lt;/a&gt;2.1安装&lt;/h2&gt;&lt;p&gt;我的环境是CentOS 6.2 X86_64，直接通过yum方式安装最简单：&lt;br&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# yum install -y keepalived&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# keepalived -v&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Keepalived v1&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.13&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;03&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2015&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-2-nginx监控脚本&quot;&gt;&lt;a href=&quot;#2-2-nginx监控脚本&quot; class=&quot;headerlink&quot; title=&quot;2.2 nginx监控脚本&quot;&gt;&lt;/a&gt;2.2 nginx监控脚本&lt;/h2&gt;&lt;p&gt;该脚本检测ngnix的运行状态，并在nginx进程不存在时尝试重新启动ngnix，如果启动失败则停止keepalived，准备让其它机器接管。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/keepalived/check_nginx.sh&lt;/code&gt; ：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;counter=$(ps -C nginx --no-heading|wc &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;counter&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    counter=$(ps -C nginx --no-heading|wc &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;counter&amp;#125;&lt;/span&gt;&quot;&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        /etc/init.d/keepalived stop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你也可以根据自己的业务需求，总结出在什么情形下关闭keepalived，如 curl 主页连续2个5s没有响应则切换：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# curl -IL http://localhost/member/login.htm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# curl --data &quot;memberName=fengkan&amp;amp;password=22&quot; http://localhost/member/login.htm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (( k=0; k&amp;lt;2; k++ )) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_code=$( curl --connect-timeout 3 &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt;L -w &lt;span class=&quot;string&quot;&gt;&quot;%&amp;#123;http_code&amp;#125;\\n&quot;&lt;/span&gt; http://localhost/login.html -o /dev/null )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$check_code&lt;/span&gt;&quot;&lt;/span&gt; != &lt;span class=&quot;string&quot;&gt;&quot;200&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count = count +1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; [ &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$count&lt;/span&gt;&quot;&lt;/span&gt; != &lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; ]; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#   /etc/init.d/keepalived stop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;exit&lt;/span&gt; 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-3-keepalived-conf&quot;&gt;&lt;a href=&quot;#2-3-keepalived-conf&quot; class=&quot;headerlink&quot; title=&quot;2.3 keepalived.conf&quot;&gt;&lt;/a&gt;2.3 keepalived.conf&lt;/h2&gt;&lt;figure class=&quot;highlight puppet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;! Configuration File for keepalived&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;global_defs&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notification_email &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        zhouxiao@example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        itsection@example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;notification_email_from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;itsection&lt;/span&gt;@example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    smtp_server mail.example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    smtp_connect_timeout 30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    router_id LVS_DEVEL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vrrp_script &lt;span class=&quot;keyword&quot;&gt;chk_nginx&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#    script &quot;killall -0 nginx&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    script &lt;span class=&quot;string&quot;&gt;&quot;/etc/keepalived/check_nginx.sh&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    interval &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    weight -&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fall &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rise &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;vrrp_instance&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;VI_1&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    state MASTER&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    interface eth&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mcast_src_ip &lt;span class=&quot;number&quot;&gt;172.29&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;88.224&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual_router_id &lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;literal&quot;&gt;priority&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    advert_int &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    authentication &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;literal&quot;&gt;auth_type&lt;/span&gt; PASS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        auth_pass &lt;span class=&quot;number&quot;&gt;1111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;virtual_ipaddress&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;number&quot;&gt;172.29&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;88.222&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;track_script&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       chk_nginx &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在其它备机BACKUP上，只需要改变 &lt;code&gt;state MASTER&lt;/code&gt; -&amp;gt; &lt;code&gt;state BACKUP&lt;/code&gt;，&lt;code&gt;priority 101&lt;/code&gt; -&amp;gt; &lt;code&gt;priority 100&lt;/code&gt;，&lt;code&gt;mcast_src_ip 172.29.88.224&lt;/code&gt; -&amp;gt; &lt;code&gt;mcast_src_ip 172.29.88.225&lt;/code&gt;即可。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service keepalived restart
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;2-4-配置选项说明&quot;&gt;&lt;a href=&quot;#2-4-配置选项说明&quot; class=&quot;headerlink&quot; title=&quot;2.4 配置选项说明&quot;&gt;&lt;/a&gt;2.4 配置选项说明&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;global_defs&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;notification_email&lt;/code&gt; ： keepalived在发生诸如切换操作时需要发送email通知地址，后面的 smtp_server 相比也都知道是邮件服务器地址。也可以通过其它方式报警，毕竟邮件不是实时通知的。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;router_id&lt;/code&gt; ： 机器标识，通常可设为hostname。故障发生时，邮件通知会用到&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;vrrp_instance&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;state&lt;/code&gt; ： 指定instance(Initial)的初始状态，就是说在配置好后，这台服务器的初始状态就是这里指定的，但这里指定的不算，还是得要通过竞选通过优先级来确定。如果这里设置为MASTER，但如若他的优先级不及另外一台，那么这台在发送通告时，会发送自己的优先级，另外一台发现优先级不如自己的高，那么他会就回抢占为MASTER&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interface&lt;/code&gt; ： 实例绑定的网卡，因为在配置虚拟IP的时候必须是在已有的网卡上添加的&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mcast_src_ip&lt;/code&gt; ： 发送多播数据包时的源IP地址，这里注意了，这里实际上就是在那个地址上发送VRRP通告，这个非常重要，一定要选择稳定的网卡端口来发送，这里相当于heartbeat的心跳端口，如果没有设置那么就用默认的绑定的网卡的IP，也就是interface指定的IP地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virtual_router_id&lt;/code&gt; ： 这里设置VRID，这里非常重要，相同的VRID为一个组，他将决定多播的MAC地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;priority&lt;/code&gt; ： 设置本节点的优先级，优先级高的为master&lt;/li&gt;
&lt;li&gt;&lt;code&gt;advert_int&lt;/code&gt; ： 检查间隔，默认为1秒。这就是VRRP的定时器，MASTER每隔这样一个时间间隔，就会发送一个advertisement报文以通知组内其他路由器自己工作正常&lt;/li&gt;
&lt;li&gt;&lt;code&gt;authentication&lt;/code&gt; ： 定义认证方式和密码，主从必须一样&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virtual_ipaddress&lt;/code&gt; ： 这里设置的就是VIP，也就是虚拟IP地址，他随着state的变化而增加删除，当state为master的时候就添加，当state为backup的时候删除，这里主要是有优先级来决定的，和state设置的值没有多大关系，这里可以设置多个IP地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;track_script&lt;/code&gt; ： 引用VRRP脚本，即在 vrrp_script 部分指定的名字。定期运行它们来改变优先级，并最终引发主备切换。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;vrrp_script&lt;/strong&gt;&lt;br&gt;告诉 keepalived 在什么情况下切换，所以尤为重要。可以有多个 vrrp_script &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;script&lt;/code&gt; ： 自己写的检测脚本。也可以是一行命令如&lt;code&gt;killall -0 nginx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interval 2&lt;/code&gt; ： 每2s检测一次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight -5&lt;/code&gt; ： 检测失败（脚本返回非0）则优先级 -5 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;fall 2&lt;/code&gt; ： 检测连续 2 次失败才算确定是真失败。会用weight减少优先级（1-255之间）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rise 1&lt;/code&gt; ： 检测 1 次成功就算成功。但不修改优先级&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里要提示一下script一般有2种写法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过脚本执行的返回结果，改变优先级，keepalived继续发送通告消息，backup比较优先级再决定&lt;/li&gt;
&lt;li&gt;脚本里面检测到异常，直接关闭keepalived进程，backup机器接收不到advertisement会抢占IP&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上文 vrrp_script 配置部分，&lt;code&gt;killall -0 nginx&lt;/code&gt;属于第1种情况，&lt;code&gt;/etc/keepalived/check_nginx.sh&lt;/code&gt;属于第2种情况（脚本中关闭keepalived）。个人更倾向于通过shell脚本判断，但有异常时exit 1，正常退出exit 0，然后keepalived根据动态调整的 vrrp_instance 优先级选举决定是否抢占VIP：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果脚本执行结果为0，并且weight配置的值大于0，则优先级相应的增加&lt;/li&gt;
&lt;li&gt;如果脚本执行结果非0，并且weight配置的值小于0，则优先级相应的减少&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他情况，原本配置的优先级不变，即配置文件中priority对应的值。&lt;/p&gt;
&lt;p&gt;提示：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优先级不会不断的提高或者降低&lt;/li&gt;
&lt;li&gt;可以编写多个检测脚本并为每个检测脚本设置不同的weight（在配置中列出就行）&lt;/li&gt;
&lt;li&gt;不管提高优先级还是降低优先级，最终优先级的范围是在[1,254]，不会出现优先级小于等于0或者优先级大于等于255的情况&lt;/li&gt;
&lt;li&gt;在MASTER节点的 vrrp_instance 中 配置 &lt;code&gt;nopreempt&lt;/code&gt; ，当它异常恢复后，即使它 prio 更高也不会抢占，这样可以避免正常情况下做无谓的切换&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上可以做到利用脚本检测业务进程的状态，并动态调整优先级从而实现主备切换。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置结束&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在默认的keepalive.conf里面还有 virtual_server,real_server 这样的配置，我们这用不到，它是为lvs准备的。 &lt;code&gt;notify&lt;/code&gt; 可以定义在切换成MASTER或BACKUP时执行的脚本，如有需求请自行google。&lt;/p&gt;
&lt;p&gt;notify&lt;/p&gt;
&lt;h2 id=&quot;2-5-nginx配置&quot;&gt;&lt;a href=&quot;#2-5-nginx配置&quot; class=&quot;headerlink&quot; title=&quot;2.5 nginx配置&quot;&gt;&lt;/a&gt;2.5 nginx配置&lt;/h2&gt;&lt;p&gt;当然nginx没有什么可配置的，因为它与keepalived并没有联系。但记住，2台nginx服务器上的配置应该是完全一样的（rsync同步），这样才能做到对用户透明，nginx.conf 里面的 &lt;code&gt;server_name&lt;/code&gt; 尽量使用域名来代替，然后dns解析这个域名到虚拟IP 172.29.88.222。&lt;/p&gt;
&lt;p&gt;更多关于nginx内容配置请参考 &lt;a href=&quot;http://seanlook.com/2015/05/17/nginx-install-and-config/&quot;&gt;这里&lt;/a&gt; 。&lt;/p&gt;
&lt;h1 id=&quot;3-测试&quot;&gt;&lt;a href=&quot;#3-测试&quot; class=&quot;headerlink&quot; title=&quot;3. 测试&quot;&gt;&lt;/a&gt;3. 测试&lt;/h1&gt;&lt;p&gt;根据上面的配置，初始化状态：172.29.88.224 (itoatest1,MASTER,101)，172.29.88.222（itoatest2,BACKUP,100），nginx和keepalived都启动，虚拟IP 172.29.88.222 在 itoatest1 上：&lt;br&gt;&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 使用ip命令配置的地址，ifconfig查看不了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[root@itoatest1 nginx-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;# ip a|grep eth0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: eth0: &lt;span class=&quot;variable&quot;&gt;&amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt;&lt;/span&gt; mtu &lt;span class=&quot;number&quot;&gt;1500&lt;/span&gt; qdisc pfifo_fast &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; UP qlen &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;inet&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;172.29&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;88.224&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; brd &lt;span class=&quot;number&quot;&gt;172.29&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;88.255&lt;/span&gt; scope &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; eth0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;inet&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;172.29&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;88.222&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt; scope &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; eth0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;浏览器访问 172.29.88.222 或域名，OK。&lt;/p&gt;
&lt;p&gt;直接关闭 itoatest1 上的nginx：&lt;code&gt;/usr/local/nginx-1.6/sbin/nginx -s stop&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost keepalived]&lt;span class=&quot;comment&quot;&gt;# ip a|grep eth0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;: eth0: &lt;span class=&quot;variable&quot;&gt;&amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt;&lt;/span&gt; mtu &lt;span class=&quot;number&quot;&gt;1500&lt;/span&gt; qdisc pfifo_fast &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; UP qlen &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;inet&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;172.29&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;88.224&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt; brd &lt;span class=&quot;number&quot;&gt;172.29&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;88.255&lt;/span&gt; scope &lt;span class=&quot;keyword&quot;&gt;global&lt;/span&gt; eth0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;vip消失，漂移到 itoatest2：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-keepalived-vip.png&quot; alt=&quot;nginx-keepalived-vip.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;同时可以看到两台服务器上 &lt;code&gt;/var/log/messages&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;## &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:01&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[44875]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Sending&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;gratuitous&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ARPs&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;eth0&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;for&lt;/span&gt; 172&lt;span class=&quot;selector-class&quot;&gt;.29&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.88&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.222&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:06&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[44875]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Sending&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;gratuitous&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ARPs&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;eth0&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;for&lt;/span&gt; 172&lt;span class=&quot;selector-class&quot;&gt;.29&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.88&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.222&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:46&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[44875]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Script&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;chk_nginx&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;failed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:48&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[44875]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Received&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;higher&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;prio&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;advert&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:48&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[44875]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Entering&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;BACKUP&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;STATE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:48&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[44875]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;removing&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;VIPs&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:48&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_healthcheckers&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[44874]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;Netlink&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;reflector&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;reports&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;IP&lt;/span&gt; 172&lt;span class=&quot;selector-class&quot;&gt;.29&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.88&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.222&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;removed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:00&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Transition&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;MASTER&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;STATE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:00&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Received&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;higher&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;prio&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;advert&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:00&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Entering&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;BACKUP&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;STATE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:48&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;forcing&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;MASTER&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;election&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:48&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;forcing&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;MASTER&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;election&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:49&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Transition&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;MASTER&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;STATE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:50&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Entering&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;MASTER&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;STATE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:50&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;setting&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;VIPs&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:50&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Sending&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;gratuitous&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ARPs&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;eth0&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;for&lt;/span&gt; 172&lt;span class=&quot;selector-class&quot;&gt;.29&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.88&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.222&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:50&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_healthcheckers&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35554]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;Netlink&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;reflector&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;reports&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;IP&lt;/span&gt; 172&lt;span class=&quot;selector-class&quot;&gt;.29&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.88&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.222&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;added&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Jun&lt;/span&gt;  5 16&lt;span class=&quot;selector-pseudo&quot;&gt;:44&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:55&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest2&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;Keepalived_vrrp&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[35555]&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;VRRP_Instance&lt;/span&gt;(&lt;span class=&quot;selector-tag&quot;&gt;VI_1&lt;/span&gt;) &lt;span class=&quot;selector-tag&quot;&gt;Sending&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;gratuitous&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ARPs&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;eth0&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;for&lt;/span&gt; 172&lt;span class=&quot;selector-class&quot;&gt;.29&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.88&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.222&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;你也可以通过在两台服务器上抓包来查看 优先级priority 的变化：&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;## &lt;span class=&quot;selector-tag&quot;&gt;itoatest1&lt;/span&gt; 上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 直接输出，或后加 &lt;span class=&quot;selector-tag&quot;&gt;-w&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;itoatest-kl&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.cap&lt;/span&gt;存入文件用&lt;span class=&quot;selector-tag&quot;&gt;wireshark&lt;/span&gt;查看&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# &lt;span class=&quot;selector-tag&quot;&gt;tcpdump&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-vvv&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;eth0&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;dst&lt;/span&gt; 224&lt;span class=&quot;selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.18&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;src&lt;/span&gt; 172&lt;span class=&quot;selector-class&quot;&gt;.29&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.88&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.224&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-keepalived-prio.png&quot; alt=&quot;nginx-keepalived-prio.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://debugo.com/keepalived-nginx/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用Keepalived实现Nginx高可用性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nginx.com/resources/admin-guide/nginx-ha-keepalived/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;High Availability Support Based on keepalived&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.centos.bz/2012/02/nginx-keepalived-high-availability/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nginx+keepalived实现双机热备的高可用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://atong.blog.51cto.com/2393905/1351709&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LVS原理详解及部署之五：LVS+keepalived实现负载均衡&amp;amp;高可用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://xxrenzhe.blog.51cto.com/4036116/1405571&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Keepalived双主模型中vrrp_script中权重改变故障排查&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zhaoyuqiang.blog.51cto.com/6328846/1166840&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;虚拟路由器冗余协议【原理篇】VRRP详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.ywlm.net/thread-845-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Keepalived原理与实战精讲&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;公司内部 OA 系统要做线上高可用，避免单点故障，所以计划使用2台虚拟机通过 Keepalived 工具来实现 nginx 的高可用（High Avaiability），达到一台nginx入口服务器宕机，另一台备机自动接管服务的效果。（nginx做反向代理，实现后端应用服务器的负载均衡）快速搭建请直接跳至 第2节。&lt;/p&gt;
&lt;h1 id=&quot;1-Keepalived介绍&quot;&gt;&lt;a href=&quot;#1-Keepalived介绍&quot; class=&quot;headerlink&quot; title=&quot;1. Keepalived介绍&quot;&gt;&lt;/a&gt;1. Keepalived介绍&lt;/h1&gt;&lt;p&gt;Keepalived是一个基于VRRP协议来实现的服务高可用方案，可以利用其来避免IP单点故障，类似的工具还有heartbeat、corosync、pacemaker。但是它一般不会单独出现，而是与其它负载均衡技术（如lvs、haproxy、nginx）一起工作来达到集群的高可用。&lt;/p&gt;
&lt;h2 id=&quot;1-1-VRRP协议&quot;&gt;&lt;a href=&quot;#1-1-VRRP协议&quot; class=&quot;headerlink&quot; title=&quot;1.1 VRRP协议&quot;&gt;&lt;/a&gt;1.1 VRRP协议&lt;/h2&gt;&lt;p&gt;VRRP全称 Virtual Router Redundancy Protocol，即 &lt;a href=&quot;http://en.wikipedia.org/wiki/VRRP&quot;&gt;虚拟路由冗余协议&lt;/a&gt;。可以认为它是实现路由器高可用的容错协议，即将N台提供相同功能的路由器组成一个路由器组(Router Group)，这个组里面有一个master和多个backup，但在外界看来就像一台一样，构成虚拟路由器，拥有一个虚拟IP（vip，也就是路由器所在局域网内其他机器的默认路由），占有这个IP的master实际负责ARP相应和转发IP数据包，组中的其它路由器作为备份的角色处于待命状态。master会发组播消息，当backup在超时时间内收不到vrrp包时就认为master宕掉了，这时就需要根据VRRP的优先级来选举一个backup当master，保证路由器的高可用。&lt;/p&gt;
&lt;p&gt;在VRRP协议实现里，虚拟路由器使用 00-00-5E-00-01-XX 作为&lt;em&gt;虚拟&lt;/em&gt;MAC地址，XX就是唯一的 VRID （Virtual Router IDentifier），这个地址同一时间只有一个物理路由器占用。在虚拟路由器里面的物理路由器组里面通过多播IP地址 224.0.0.18 来定时发送通告消息。每个Router都有一个 1-255 之间的优先级别，级别最高的（highest priority）将成为主控（master）路由器。通过降低master的优先权可以让处于backup状态的路由器抢占（pro-empt）主路由器的状态，两个backup优先级相同的IP地址较大者为master，接管虚拟IP。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7q5fot.com1.z0.glb.clouddn.com/nginx-keepalived-vrrp.jpg&quot; alt=&quot;nginx-keepalived-vrrp.jpg&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;与heartbeat-corosync等比较&quot;&gt;&lt;a href=&quot;#与heartbeat-corosync等比较&quot; class=&quot;headerlink&quot; title=&quot;与heartbeat/corosync等比较&quot;&gt;&lt;/a&gt;与heartbeat/corosync等比较&lt;/h3&gt;&lt;p&gt;直接摘抄自 &lt;a href=&quot;http://www.linuxidc.com/Linux/2013-08/89227.htm&quot;&gt;http://www.linuxidc.com/Linux/2013-08/89227.htm&lt;/a&gt; ：&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://seanlook.com/categories/Linux/"/>
    
      <category term="Nginx" scheme="http://seanlook.com/categories/Linux/Nginx/"/>
    
    
      <category term="nignx" scheme="http://seanlook.com/tags/nignx/"/>
    
      <category term="keepalived" scheme="http://seanlook.com/tags/keepalived/"/>
    
      <category term="高可用" scheme="http://seanlook.com/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>nginx配置location总结及rewrite规则写法</title>
    <link href="http://seanlook.com/2015/05/17/nginx-location-rewrite/"/>
    <id>http://seanlook.com/2015/05/17/nginx-location-rewrite/</id>
    <published>2015-05-17T07:21:25.000Z</published>
    <updated>2015-05-17T07:46:23.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;1-location正则写法&quot;&gt;&lt;a href=&quot;#1-location正则写法&quot; class=&quot;headerlink&quot; title=&quot;1. location正则写法&quot;&gt;&lt;/a&gt;1. location正则写法&lt;/h1&gt;&lt;p&gt;一个示例：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;= / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # 精确匹配 / ，主机名后面不能带任何字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration&lt;/span&gt; A ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # 但是正则和最长字符串会优先匹配&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration&lt;/span&gt; B ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;/documents&lt;/span&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 只有后面的正则表达式没有匹配到时，这一条才会采用这一条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration C ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~ /documents&lt;/span&gt;/Abc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 只有后面的正则表达式没有匹配到时，这一条才会采用这一条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration CC ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;^~ /images&lt;/span&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration D ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~* \.(gif&lt;/span&gt;|jpg|jpeg)$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 匹配所有以 gif,jpg或jpeg 结尾的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration E ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;/images&lt;/span&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 字符匹配到 /images/，继续往下，会发现 ^~ 存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration F ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;/images&lt;/span&gt;/abc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# F与G的放置顺序是没有关系的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration G ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~ /images&lt;/span&gt;/abc/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration H ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~* /js&lt;/span&gt;/.*/\.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;已&lt;code&gt;=&lt;/code&gt;开头表示精确匹配&lt;br&gt;如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^~&lt;/code&gt; 开头表示uri以某个常规字符串开头，不是正则匹配&lt;/li&gt;
&lt;li&gt;~ 开头表示区分大小写的正则匹配;&lt;/li&gt;
&lt;li&gt;~* 开头表示不区分大小写的正则匹配&lt;/li&gt;
&lt;li&gt;/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;顺序 no优先级：&lt;br&gt;(location =) &amp;gt; (location 完整路径) &amp;gt; (location ^~ 路径) &amp;gt; (location ~,~* 正则顺序) &amp;gt; (location 部分起始路径) &amp;gt; (/)&lt;/p&gt;
&lt;p&gt;上面的匹配结果&lt;br&gt;按照上面的location写法，以下的匹配示例成立：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/ -&amp;gt; config A&lt;br&gt;精确完全匹配，即使/index.html也匹配不了&lt;/li&gt;
&lt;li&gt;/downloads/download.html -&amp;gt; config B&lt;br&gt;匹配B以后，往下没有任何匹配，采用B&lt;/li&gt;
&lt;li&gt;/images/1.gif -&amp;gt; configuration D&lt;br&gt;匹配到F，往下匹配到D，停止往下&lt;/li&gt;
&lt;li&gt;/images/abc/def -&amp;gt; config D&lt;br&gt;最长匹配到G，往下匹配D，停止往下&lt;br&gt;你可以看到 任何以/images/开头的都会匹配到D并停止，FG写在这里是没有任何意义的，H是永远轮不到的，这里只是为了说明匹配顺序&lt;/li&gt;
&lt;li&gt;/documents/document.html -&amp;gt; config C&lt;br&gt;匹配到C，往下没有任何匹配，采用C&lt;/li&gt;
&lt;li&gt;/documents/1.jpg -&amp;gt; configuration E&lt;br&gt;匹配到C，往下正则匹配到E&lt;/li&gt;
&lt;li&gt;/documents/Abc.jpg -&amp;gt; config CC&lt;br&gt;最长匹配到C，往下正则顺序匹配到CC，不会往下到E&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实际使用建议&quot;&gt;&lt;a href=&quot;#实际使用建议&quot; class=&quot;headerlink&quot; title=&quot;实际使用建议&quot;&gt;&lt;/a&gt;实际使用建议&lt;/h2&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;所以实际使用中，个人觉得至少有三个匹配规则定义，如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#这里是直接转发给后端应用服务器了，也可以是一个静态首页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 第一个必选规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;= / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass&lt;/span&gt; http://tomcat:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;/index&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;^~ /static&lt;/span&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root /webroot/static/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~* \.(gif&lt;/span&gt;|jpg|jpeg|png|css|js|ico)$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    root /webroot/res/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#第三个规则就是通用规则，用来转发动态请求到后端应用服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#非静态文件请求就默认是动态请求，自己根据实际把握&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass&lt;/span&gt; http://tomcat:&lt;span class=&quot;number&quot;&gt;8080&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://tengine.taobao.org/book/chapter_02.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tengine.taobao.org/book/chapter_02.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_rewrite_module.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nginx.org/en/docs/http/ngx_http_rewrite_module.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;2-Rewrite规则&quot;&gt;&lt;a href=&quot;#2-Rewrite规则&quot; class=&quot;headerlink&quot; title=&quot;2. Rewrite规则&quot;&gt;&lt;/a&gt;2. Rewrite规则&lt;/h1&gt;&lt;p&gt;rewrite功能就是，使用nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url重写以及重定向。rewrite只能放在server{},location{},if{}中，并且只能对域名后边的除去传递的参数外的字符串起作用，例如 &lt;code&gt;http://seanlook.com/a/we/index.php?id=1&amp;amp;u=str&lt;/code&gt; 只对/a/we/index.php重写。语法&lt;code&gt;rewrite regex replacement [flag];&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果相对域名或参数字符串起作用，可以使用全局变量匹配，也可以使用proxy_pass反向代理。&lt;/p&gt;
&lt;p&gt;表明看rewrite和location功能有点像，都能实现跳转，主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，可以proxy_pass到其他机器。很多情况下rewrite也会写在location里，它们的执行顺序是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行server块的rewrite指令&lt;/li&gt;
&lt;li&gt;执行location匹配&lt;/li&gt;
&lt;li&gt;执行选定的location中的rewrite指令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果其中某步URI被重写，则重新循环执行1-3，直到找到真实存在的文件；循环超过10次，则返回500 Internal Server Error错误。&lt;/p&gt;
&lt;h2 id=&quot;2-1-flag标志位&quot;&gt;&lt;a href=&quot;#2-1-flag标志位&quot; class=&quot;headerlink&quot; title=&quot;2.1 flag标志位&quot;&gt;&lt;/a&gt;2.1 flag标志位&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;last&lt;/code&gt; : 相当于Apache的[L]标记，表示完成rewrite&lt;/li&gt;
&lt;li&gt;&lt;code&gt;break&lt;/code&gt; : 停止执行当前虚拟主机的后续rewrite指令集&lt;/li&gt;
&lt;li&gt;&lt;code&gt;redirect&lt;/code&gt; : 返回302临时重定向，地址栏会显示跳转后的地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;permanent&lt;/code&gt; : 返回301永久重定向，地址栏会显示跳转后的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为301和302不能简单的只返回状态码，还必须有重定向的URL，这就是return指令无法返回301,302的原因了。这里 last 和 break 区别有点难以理解：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;last一般写在server和if中，而break一般使用在location中&lt;/li&gt;
&lt;li&gt;last不终止&lt;em&gt;重写后&lt;/em&gt;的url匹配，即新的url会再从server走一遍匹配流程，而break终止重写后的匹配&lt;/li&gt;
&lt;li&gt;break和last都能组织继续执行后面的rewrite指令&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;2-2-if指令与全局变量&quot;&gt;&lt;a href=&quot;#2-2-if指令与全局变量&quot; class=&quot;headerlink&quot; title=&quot;2.2 if指令与全局变量&quot;&gt;&lt;/a&gt;2.2 if指令与全局变量&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;if判断指令&lt;/strong&gt;&lt;br&gt;语法为&lt;code&gt;if(condition){...}&lt;/code&gt;，对给定的条件condition进行判断。如果为真，大括号内的rewrite指令将被执行，if条件(conditon)可以是如下任何内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当表达式只是一个变量时，如果值为空或任何以0开头的字符串都会当做false&lt;/li&gt;
&lt;li&gt;直接比较变量和内容时，使用&lt;code&gt;=&lt;/code&gt;或&lt;code&gt;!=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt;正则表达式匹配，&lt;code&gt;~*&lt;/code&gt;不区分大小写的匹配，&lt;code&gt;!~&lt;/code&gt;区分大小写的不匹配&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;-f&lt;/code&gt;和&lt;code&gt;!-f&lt;/code&gt;用来判断是否存在文件&lt;br&gt;&lt;code&gt;-d&lt;/code&gt;和&lt;code&gt;!-d&lt;/code&gt;用来判断是否存在目录&lt;br&gt;&lt;code&gt;-e&lt;/code&gt;和&lt;code&gt;!-e&lt;/code&gt;用来判断是否存在文件或目录&lt;br&gt;&lt;code&gt;-x&lt;/code&gt;和&lt;code&gt;!-x&lt;/code&gt;用来判断文件是否可执行&lt;/p&gt;
&lt;p&gt;例如：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($http_user_agent ~ MSIE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rewrite ^(.*)$ /msie/$1 break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; //如果UA包含&lt;span class=&quot;string&quot;&gt;&quot;MSIE&quot;&lt;/span&gt;，rewrite请求到/msid/目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($http_cookie ~* &lt;span class=&quot;string&quot;&gt;&quot;id=([^;]+)(?:;|$)&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    set $id $1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; //如果cookie匹配正则，设置变量$id等于正则引用部分&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($request_method = POST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;405&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; //如果提交方法为POST，则返回状态&lt;span class=&quot;number&quot;&gt;405&lt;/span&gt;（Method not allowed）。&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;不能返回&lt;span class=&quot;number&quot;&gt;301&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;302&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($slow) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    limit_rate &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;k;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; //限速，$slow可以通过 set 指令设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!-f $request_filename)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    proxy_pass  http://&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; //如果请求的文件名不存在，则反向代理到localhost 。这里的break也是停止rewrite检查&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ($args ~ post=&lt;span class=&quot;number&quot;&gt;140&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rewrite ^ http://example.com/ permanent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; //如果query string中包含&lt;span class=&quot;string&quot;&gt;&quot;post=140&quot;&lt;/span&gt;，永久重定向到example.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;location ~* \.(gif|jpg|png|swf|flv)$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    valid_referers none blocked www.jefflei.com www.leizhenfang.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if ($invalid_referer) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; //防盗链&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全局变量&lt;/strong&gt;&lt;br&gt;下面是可以用作if判断的全局变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$args&lt;/code&gt; ： #这个变量等于请求行中的参数，同&lt;code&gt;$query_string&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$content_length&lt;/code&gt; ： 请求头中的Content-length字段。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$content_type&lt;/code&gt; ： 请求头中的Content-Type字段。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$document_root&lt;/code&gt; ： 当前请求在root指令中指定的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$host&lt;/code&gt; ： 请求主机头字段，否则为服务器名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$http_user_agent&lt;/code&gt; ： 客户端agent信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$http_cookie&lt;/code&gt; ： 客户端cookie信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$limit_rate&lt;/code&gt; ： 这个变量可以限制连接速率。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$request_method&lt;/code&gt; ： 客户端请求的动作，通常为GET或POST。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_addr&lt;/code&gt; ： 客户端的IP地址。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_port&lt;/code&gt; ： 客户端的端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$remote_user&lt;/code&gt; ： 已经经过Auth Basic Module验证的用户名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$request_filename&lt;/code&gt; ： 当前请求的文件路径，由root或alias指令与URI请求生成。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$scheme&lt;/code&gt; ： HTTP方法（如http，https）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_protocol&lt;/code&gt; ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_addr&lt;/code&gt; ： 服务器地址，在完成一次系统调用后可以确定这个值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_name&lt;/code&gt; ： 服务器名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$server_port&lt;/code&gt; ： 请求到达服务器的端口号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$request_uri&lt;/code&gt; ： 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$uri&lt;/code&gt; ： 不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$document_uri&lt;/code&gt; ： 与$uri相同。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例：&lt;code&gt;http://localhost:88/test1/test2/test.php&lt;/code&gt;&lt;br&gt;$host：localhost&lt;br&gt;$server_port：88&lt;br&gt;$request_uri：&lt;a href=&quot;http://localhost:88/test1/test2/test.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:88/test1/test2/test.php&lt;/a&gt;&lt;br&gt;$document_uri：/test1/test2/test.php&lt;br&gt;$document_root：/var/www/html&lt;br&gt;$request_filename：/var/www/html/test1/test2/test.php&lt;/p&gt;
&lt;h2 id=&quot;2-3-常用正则&quot;&gt;&lt;a href=&quot;#2-3-常用正则&quot; class=&quot;headerlink&quot; title=&quot;2.3 常用正则&quot;&gt;&lt;/a&gt;2.3 常用正则&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; ： 匹配除换行符以外的任意字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;?&lt;/code&gt; ： 重复0次或1次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt; ： 重复1次或更多次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; ： 重复0次或更多次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\d&lt;/code&gt; ：匹配数字&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt; ： 匹配字符串的开始&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; ： 匹配字符串的介绍&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{n}&lt;/code&gt; ： 重复n次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{n,}&lt;/code&gt; ： 重复n次或更多次&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[c]&lt;/code&gt; ： 匹配单个字符c&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[a-z]&lt;/code&gt; ： 匹配a-z小写字母的任意一个&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小括号&lt;code&gt;()&lt;/code&gt;之间匹配的内容，可以在后面通过&lt;code&gt;$1&lt;/code&gt;来引用，&lt;code&gt;$2&lt;/code&gt;表示的是前面第二个&lt;code&gt;()&lt;/code&gt;里的内容。正则里面容易让人困惑的是&lt;code&gt;\&lt;/code&gt;转义特殊字符。&lt;/p&gt;
&lt;h2 id=&quot;2-4-rewrite实例&quot;&gt;&lt;a href=&quot;#2-4-rewrite实例&quot; class=&quot;headerlink&quot; title=&quot;2.4 rewrite实例&quot;&gt;&lt;/a&gt;2.4 rewrite实例&lt;/h2&gt;&lt;p&gt;&lt;em&gt;例1&lt;/em&gt;：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 定义image日志格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    log_format imagelog &lt;span class=&quot;string&quot;&gt;&#39;[$time_local] &#39;&lt;/span&gt; $image_file &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; $image_type &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; $body_bytes_sent &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; $status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # 开启重写日志&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rewrite_log on;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        root /home/www;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # 重写规则信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                error_log logs/rewrite.log notice; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # 注意这里要用‘’单引号引起来，避免&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                rewrite &lt;span class=&quot;string&quot;&gt;&#39;^/images/([a-z]&amp;#123;2&amp;#125;)/([a-z0-9]&amp;#123;5&amp;#125;)/(.*)\.(png|jpg|gif)$&#39;&lt;/span&gt; /data?file=$3.$4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # 注意不能在上面这条规则后面加上“last”参数，否则下面的set指令不会执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                set $image_file $3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                set $image_type $4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location /data &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # 指定针对图片的日志格式，来分析图片类型和大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                access_log logs/images.log mian;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                root /data/images;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # 应用前面定义的变量。判断首先文件在不在，不在再判断目录在不在，如果还不在就跳转到最后一个url里&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                try_files /$arg_file /image404.html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location = /image404.html &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                # 图片不存在返回特定的信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                return &lt;span class=&quot;number&quot;&gt;404&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;image not found\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对形如&lt;code&gt;/images/ef/uh7b3/test.png&lt;/code&gt;的请求，重写到&lt;code&gt;/data?file=test.png&lt;/code&gt;，于是匹配到&lt;code&gt;location /data&lt;/code&gt;，先看&lt;code&gt;/data/images/test.png&lt;/code&gt;文件存不存在，如果存在则正常响应，如果不存在则重写tryfiles到新的image404 location，直接返回404状态码。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;例2&lt;/em&gt;：&lt;br&gt;&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rewrite ^/images/(.*)&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;(\d+)x(\d+)\.(png|jpg|gif)$ /resizer/$1.$4?width=$2&amp;amp;height=$3? last;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对形如&lt;code&gt;/images/bla_500x400.jpg&lt;/code&gt;的文件请求，重写到&lt;code&gt;/resizer/bla.jpg?width=500&amp;amp;height=400&lt;/code&gt;地址，并会继续尝试匹配location。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;例3&lt;/em&gt;：&lt;br&gt;见 &lt;a href=&quot;http://seanlook.com/2015/05/28/nginx-ssl&quot;&gt;ssl部分页面加密&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nginx.cn/216.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.nginx.cn/216.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ttlsa.com/nginx/nginx-rewriting-rules-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ttlsa.com/nginx/nginx-rewriting-rules-guide/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;老僧系列nginx之rewrite规则快速上手&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://fantefei.blog.51cto.com/2229719/919431&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://fantefei.blog.51cto.com/2229719/919431&lt;/a&gt;   &lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-location正则写法&quot;&gt;&lt;a href=&quot;#1-location正则写法&quot; class=&quot;headerlink&quot; title=&quot;1. location正则写法&quot;&gt;&lt;/a&gt;1. location正则写法&lt;/h1&gt;&lt;p&gt;一个示例：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;= / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # 精确匹配 / ，主机名后面不能带任何字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration&lt;/span&gt; A ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # 但是正则和最长字符串会优先匹配&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration&lt;/span&gt; B ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;/documents&lt;/span&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 只有后面的正则表达式没有匹配到时，这一条才会采用这一条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration C ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~ /documents&lt;/span&gt;/Abc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 只有后面的正则表达式没有匹配到时，这一条才会采用这一条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration CC ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;^~ /images&lt;/span&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration D ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~* \.(gif&lt;/span&gt;|jpg|jpeg)$ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 匹配所有以 gif,jpg或jpeg 结尾的请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration E ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;/images&lt;/span&gt;/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 字符匹配到 /images/，继续往下，会发现 ^~ 存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration F ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;/images&lt;/span&gt;/abc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# F与G的放置顺序是没有关系的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [ configuration G ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~ /images&lt;/span&gt;/abc/ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ configuration H ] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;~* /js&lt;/span&gt;/.*/\.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://seanlook.com/categories/Linux/"/>
    
      <category term="Nginx" scheme="http://seanlook.com/categories/Linux/Nginx/"/>
    
    
      <category term="nignx" scheme="http://seanlook.com/tags/nignx/"/>
    
      <category term="rewrite" scheme="http://seanlook.com/tags/rewrite/"/>
    
  </entry>
  
</feed>
